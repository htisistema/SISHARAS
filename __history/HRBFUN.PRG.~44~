#INCLUDE "COMMCTRL.CH"
#include "wvwtools.ch"
#INCLUDE "wingdi.ch"
#INCLUDE "winuser.ch"                       
//SQLRDD***********************************
#include "sqlrdd.ch"
#include "pgs.ch"          // Needed if you plan to use native connection to Postgres
#include "mysql.ch"        // Needed if you plan to use native connection to MySQL
#include "oracle.ch"       // Needed if you plan to use native connection to Oracle
#include "firebird.ch"     // Needed if you plan to use native connection to Firebird
*******************************************
//REQUEST SQLRDD             // SQLRDD should be linked in
//REQUEST SR_FIREBIRD        // Needed if you plan to use native connection to Firebird
REQUEST DBFCDX
REQUEST DBFFPT
//#define mvar ' '
MEMVAR mdata_sis,cod_operado,nivel_acess,mversao,sistema,;
       memp_resa,cor,mend_firm,mcid_firm,mfone_firm,mcgc_firm,getlist,mt_cor
***************
* FUNCAO DE CORES
*******************
FUNCTION setcor(nTipCor,mtipo)
************************
LOCAL m_color := {}
//SETCOLOR('W/G,B/W,,,W/B')
//RETURN NIL
//mt_cor:='V'
//mt_cor:= 'A'

//GetSysColor( COLOR_WINDOWTEXT )
//RGB(   0,  51, 153 )
//RGB(   0, 255, 255 )
//GetSysColor( COLOR_BTNFACE )
//RGB( 100, 135, 220 )
//RGB( 227,  92,  47 )
//m_color := WVW_GetPalette()

IF nTipCor = 1 .AND. mtipo = NIL
        //SETCOLOR('B*/W,B+/W,,,N/W')
        SETCOLOR('B*/W*,W/B+,,,R/W*')
        //SETCOLOR('B*/W*,N*/GR*,,,B*/GR+')
ELSEIF nTipCor = 2 .AND. mtipo = NIL
        //SETCOLOR('W*/B*,W/B,,,N/W*')                     && cor para os SAY
        SETCOLOR('W/R,W/N,,,N/W')                     && cor para os SAY
ELSEIF nTipCor = 3 .AND. mtipo = NIL
        //WVW_GetRGBColor( m_color[8],m_color[10],,,m_color[10] )
        SETCOLOR('R/W*,W/B*,x')                     && cor para os SAY
        //SETCOLOR('B*/GR*,W/N,x')                     && cor para os SAY
ELSEIF nTipCor = 4 .AND. mtipo = NIL
        SETCOLOR('W/B+,B/w*,,,GR+/B')
ELSEIF nTipCor = 5 .AND. mtipo = NIL
        SETCOLOR('R*/W*,W/R,,,GR+/B')
ELSEIF nTipCor = 10 .AND. mtipo = NIL
        SETCOLOR('b*/w*,w/b,,,b/w')
ELSEIF nTipCor = 30 .AND. mtipo = NIL
        SETCOLOR('b/w,b/w,x')                     && cor para os SAY
ELSEIF nTipCor = 31 .AND. mtipo = NIL
        SETCOLOR('r+/w*,w/b+,x')                     && cor para os SAY
ELSE
        SETCOLOR('n/W*,B/w*,,,gr+/n')
ENDIF
RETURN .T.
***************************** F I M ****************************************
* TELA DE APRESENTACAO
***************************
FUNCTION tela(mtitulo,tip)
************************
LOCAL nPBid
PRIVATE mimp_tipo := 5
MEMVAR mversao
WVW_SetMousePos(,00,00)
op_tela(01,05,15,115,'INFORMACOES DA HTI Sistemas Ltda.',,'*')
WvW_PBSetFont( NIL, "lucida console", 12, 7,)
nPBid := wvw_pbCreate(NIL,12,95,13,105, 'Fale Conosco',NIL,{||conf_impressao(,,1)})
IF tip = NIL
        setcor(2)
        DEVPOS(0,0);DEVOUT(PADC(mtitulo+' >>>'+mversao+'<<<',80))
ENDIF
botao(00,06,06,18)
limpa(00,06,06,18)
WVW_DrawImage( ,01,05,09,20,ALLTRIM(m_indiv[1,3])+'999.JPG',.T.,.F.)
setcor(3)
DEVPOS(10,5);DEVOUT('  HTI Sistemas')
DEVPOS(11,2);DEVOUT('www.htisistemas.com')
DEVPOS(12,5);DEVOUT(msit_tip+' - '+DTOC(directory('siscom.exe') [1][3]))
DEVPOS(1,27);DEVOUT(PADC('.: H T I   Sistemas de Informatica :.',62))
DEVPOS(2,27);DEVOUT(PADC('Rua Tenente Joao Cicero, 415/Sl.05 - Boa Viagem - Recife - PE.',62))
setcor(1)
DEVPOS(3,27);DEVOUT('Telefones p/Suporte..: (81)'+mfone_HTI)
DEVPOS(4,27);DEVOUT('                       (81)99281.6878 (Claro) Helio Beltrao')
DEVPOS(5,27);DEVOUT('                       (81)99312.7894 (Claro) Eduarda')
DEVPOS(6,27);DEVOUT('                       (81)99239.9698 (Claro) Ze Helio')
DEVPOS(8,27);DEVOUT('Email Suporte........: suporte@htisistemas.com')
DEVPOS(9,27);DEVOUT('Email Desenvolvimento: helio@htisistemas.com')
setcor(3)
DEVPOS(11,27);DEVOUT(PADC('Horario de atendimento: 08:00 as 12:00 e 14:00 as 18:00',62))
setcor(1)
DEVPOS(12,27);DEVOUT(PADC('Direito Copia (C)1994-20'+SUBSTR(DTOC(directory(msit_tip+'.exe') [1][3]),7,2)+' da HTI Sistemas',62))
IF tip <> NIL
        DEVPOS(13,27);DEVOUT(PADC('CNPJ: 11.156.983/0001-76  - Insc.Mun.: 291.454-9',62))
ENDIF
WVW_SetMouseMove(,.F.)
mensagem('Pressione qualquer tecla p/ continuar')
INKEY(0)
INKEY(30)
wvw_lclosewindow()
RETURN .T.
************************** f i m ******************************
* FUNCAO PARA QUALIDADE DE IMPRESSAO
************************************
FUNCTION imprt(imp,tipo,linha,col)
******************************
*e chr(27)+"w1" aumenta a altura da fonte, e "w0" volta ao normal
IF col = NIL
        col := 0
ENDIF
IF linha = NIL
        linha := 0
ENDIF
IF imp = 'M' .AND. tipo = 'C'	//CONDENSADO
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(15))
        //DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+CHR(15))
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'N'	//NORMAL DRAFT
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(18))
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'N+'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+"E")
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'N-'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+"F")
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'R'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+"k0")
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'S'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+"k1")
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'T+'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+"x1")
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'T-'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+"x0")
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'S+'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+CHR(45)+"1")
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'S-'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+CHR(45)+"0")
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'E'
       DEVPOS(PROW()+linha,col);DEVOUT(CHR(14))
       RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'M'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(15)+CHR(14))
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'P8'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'0')
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'A'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'W'+'1')
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'P6'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'2')
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'W1'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'W'+'1')
        RETURN .T.
ELSEIF imp = 'M' .AND. tipo = 'W0'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'W'+'0')
        RETURN .T.
ELSEIF imp = 'J' .AND. tipo = 'C'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'(s16.67H')
*        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'(s15H')
        RETURN NIL
ELSEIF imp = 'J' .AND. tipo = 'N'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'(s10H')
        RETURN NIL
ELSEIF imp = 'J' .AND. tipo = 'M'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'(s10H')
        RETURN NIL
ELSEIF imp = 'J' .AND. tipo = 'E'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'(s5H')
        RETURN NIL
ELSEIF imp = 'J' .AND. tipo = 'P8'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'(s1P')
        RETURN NIL
ELSEIF imp = 'J' .AND. tipo = 'P6'
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(27)+'(s0P')
        RETURN NIL
ELSEIF imp = 'D' .AND. tipo = 'C'
        DEVPOS(PROW()+linha,col);DEVOUT('M')
        RETURN .T.
ELSEIF imp = 'D' .AND. tipo = 'N'
        DEVPOS(PROW()+linha,col);DEVOUT('P')
        RETURN .T.
ELSEIF imp = 'D' .AND. tipo = 'E'
        DEVPOS(PROW()+linha,col);DEVOUT('P')
        RETURN .T.
ELSE
        DEVPOS(PROW()+linha,col);DEVOUT(CHR(18))
        RETURN .T.
ENDIF
RETURN NIL
******************************** F I M ********************************
#INCLUDE "winuser.ch"
FUNCTION atencao(men,tipo,mtitulo)
**********************************
IF tipo = NIL
        WVW_MessageBox( ,men,IF(mtitulo=NIL,' ATENCAO ',mtitulo),MB_ICONWARNING)
ELSE        
        WVW_MessageBox( ,men,IF(mtitulo=NIL,' ATENCAO ',mtitulo),MB_ICONERROR )
ENDIF
RETURN .T.
******************************* F I M ********************************
FUNCTION mensagem1(men,mop,mcond,linha,mop_linha,mesc,mmensagem)
**********************
LOCAL linhas,i,lin,li,ci,la,ca,mpos
CLEAR GETS
//setcor(1)
men := RTRIM(men)
IF LEN(men) > 60
        mpos := 60
ELSEIF LEN(men) < LEN('Opcao ['+IF(mcond=NIL,'',mcond)+']:')
        mpos := LEN('Opcao ['+IF(mcond=NIL,'',mcond)+']:')
ELSE
        mpos := LEN(men)
ENDIF
linhas := MLCOUNT(men,mpos)
IF mop_linha = NIL
        li := ci := 10
ELSE
        li := mop_linha
        ci := 10
ENDIF
IF linha <> NIL
        IF linha + linhas + 2 > 24
                li := 24 - (linhas + 2)
        ELSE
                li := linha
        ENDIF
ENDIF
la := li+linhas+2
ca := ci+1+mpos+1
op_tela(li,ci,la,ca,'ESCOLHA A OPCAO')
IF mmensagem <> NIL
	mensagem(mmensagem)
ENDIF
IF mop = NIL
        INKEY(0)
        setcor(1)
        wvw_lclosewindow()
        RETURN .T.
ELSE
        i := 0
        FOR i = 1 TO  linhas
                LIN := MEMOLINE(men,mpos,i,,)
                DEVPOS(i,01);DEVOUT(PADC(RTRIM(LIN),mpos))
        NEXT
        setcor(1)
        //WVW_DrawBoxGet(,00,COL()+1,1)
	IF mcond <> NIL
		DEVPOS(ROW()+1,01);DEVOUT('Opcao ['+mcond+']:')
        	IF mcond = ' '
		        @ ROW(),COL()+1 GET mop PICT '@!' VALID IF(EMPTY(mop),.F.,.T.)
		ELSE
		        @ ROW(),COL()+1 GET mop PICT '@!' VALID mop $ mcond .AND. IF(mesc <> NIL .AND. LASTKEY() = 27,.F.,.T.)
		ENDIF
	ELSE
        	DEVPOS(ROW()+1,01);DEVOUT('Opcao:')
	        @ ROW(),COL()+1 GET mop PICT '@!' VALID IF(mesc <> NIL .AND. LASTKEY() = 27,.F.,.T.)
	ENDIF
        READ
        setcor(1)
        wvw_lclosewindow()
        RETURN mop
ENDIF
setcor(1)
wvw_lclosewindow()
RETURN .F.
******************************* F I M ********************************
FUNCTION mensagem2(men,mvar,masc,mcond,mtp_var,linha)
**********************
LOCAL linhas:=0,i:=0,lin:=0,li,ci,la,ca,mpos:=0,mtam_var:=0
setcor(1)
men := RTRIM(men)
IF LEN(men) > 60
        mpos := 60
        //ci := 10
ELSE
        mpos := LEN(men)
        //ci := (80-LEN(men)) / 2
ENDIF
linhas := MLCOUNT(men,mpos)

//li := 12
li := 15
ci := 20
IF linha <> NIL
        IF linha + linhas + 2 > 24
                li := 24 - (linhas + 2)
        ELSE
                li := linha
        ENDIF
ENDIF
la := li+linhas+2
ca := ci+1+mpos+1
op_tela(li,ci,la,ca,'MENSAGEM','*' )
FOR i = 1 TO  linhas
        LIN := MEMOLINE(men,mpos,i,,)
        DEVPOS(i,1);DEVOUT(PADC(RTRIM(LIN),mpos))
NEXT
IF mtp_var = 'N'
        mtam_var := LEN(masc)
ELSE
        mtam_var := LEN(mvar)
ENDIF
setcor(1)
DEVPOS(i,1);DEVOUT('Digite:')
WVW_DrawBoxGet(,i,9,mtam_var)
@ i,9 GET mvar PICT '@!' VALID IF(mcond<>NIL,mvar $ mcond,.T.)
READ
setcor(1)       
wvw_lclosewindow()
RETURN mvar
******************************* F I M ********************************
FUNCTION mensagem(men)
**********************
//WVW_SBSetText(,1,'Mensagem: '+men)
WVW_SBSetText(,1,men)
RETURN NIL
******************************* F I M ********************************
* LIMPA UMA AREA
****************
FUNCTION limpa(li,ci,lb,cb)
***************************
@ li,ci CLEAR TO lb,cb
RETURN .T.
******************************* F I M ********************************
* CABECALHO DA JANELA
*********************
FUNCTION janela(li,cb,cab,p,lado)
****************
LOCAL mcor
mcor := SETCOLOR()
IF p = NIL
        setcor(3,'*')
ELSE
        setcor(3)
ENDIF
IF lado = NIL
        DEVPOS(li,cb-(LEN(cab)+2));DEVOUT(cab)
ELSE
        DEVPOS(li,cb+2);DEVOUT(cab)
ENDIF
SETCOLOR(mcor)
RETURN NIL
***************************** F I M ********************************************
* CABECALHO RELATORIO
*********************
FUNCTION cabecalho(pag,tit,tipo,vprg,memp,vgru,vsubg,vforn,vcli,vven,vope)
**************************************************************************
LOCAL mtraco2:=REPLI('=',132),mcons_cons:={},cons_emp:={}
WHILE .T.
        imprt(mtipo_imp,'N')
        imprt(mtipo_imp,'N+')
                DEVPOS(PROW()+1,00);DEVOUT(memp_resa)
        imprt(mtipo_imp,'N-')
        imprt(mtipo_imp,'N')
        DEVPOS(PROW()+1,00);DEVOUT(tit)
        DEVPOS(PROW(),00);DEVOUT(PADL(mdata_sis,80))
        IF tipo <> NIL
                DEVPOS(PROW()+1,00);DEVOUT(tipo)
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT(REPLI('*',LEN(tit)))
        ENDIF
        DEVPOS(PROW(),00);DEVOUT(PADL('Pagina: '+ STRZERO(pag,3),80))
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT(memp_resa)
        IF vprg = NIL
                DEVPOS(PROW(),00);DEVOUT(PADL(sistema+' '+mversao,132))
        ELSE
                DEVPOS(PROW(),00);DEVOUT(PADL(sistema+' '+mversao+' - ('+vprg+')',132))
        ENDIF
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT(mtraco2)
        imprt(mtipo_imp,'N')
        cons_cons := {}
        IF ! EMPTY(vgru)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM sacgrupo WHERE gru_sub LIKE "+sr_cdbvalue(vgru+'%'),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('GRUPO.....: '+vgru+' - '+cons_cons[1,2])
                ENDIF
        ENDIF
        IF ! EMPTY(vsubg)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM sacgrupo WHERE gru_sub = "+sr_cdbvalue(vsubg),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('SUB-GRUPO.: '+vsubg+' - '+cons_cons[1,2])
                ENDIF
        ENDIF
        IF ! EMPTY(vforn)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM sacforn WHERE cod_forn = "+sr_cdbvalue(vforn),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('FORNECEDOR: '+vforn+' - '+cons_cons[1,2])
                ENDIF
        ENDIF
        IF ! EMPTY(vcli)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM saccli WHERE cod_cli = "+sr_cdbvalue(vcli),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('CLIENTE...: '+vcli+' - '+cons_cons[1,3])
                ENDIF
        ENDIF
        IF ! EMPTY(vven)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM insopera WHERE scod_op = "+sr_cdbvalue(vven),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('VENDEDOR..: '+vven+' - '+cons_cons[1,2])
                ENDIF
        ENDIF
        IF ! EMPTY(vope)
                cons_cons := {}
                sr_getconnection():exec("SELECT * FROM insopera WHERE scod_op = "+sr_cdbvalue(vope),,.t.,@cons_cons)
                IF LEN(cons_cons) > 0
                        DEVPOS(PROW()+1,00);DEVOUT('OPERADOR..: '+vope+' - '+cons_cons[1,2])
                ENDIF
        ENDIF
        IF LEN(cons_cons) > 0
                imprt(mtipo_imp,'C')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco2)
                imprt(mtipo_imp,'N')
        ENDIF
        RETURN NIL
ENDDO
RETURN NIL
******************************* F I M *********************************
* FUNCAO PARA BLOQUEIO DE ARQUIVO EM REDE
******************************************
FUNCTION bloqarq
***********************
IF FLOCK()
        RETURN (.T.)
ENDIF
mensagem('Aguarde... Tentando Bloquear o Arquivo: '+ALIAS(SELE()))
WHILE LASTKEY() <> 27
        IF FLOCK()
                RETURN (.T.)
        ENDIF
ENDDO
RETURN (.F.)
************************** F I M ***********************************
* FUNCAO PARA BLOQUEAR REGISTRO EM REDE
******************************************
FUNCTION bloqreg
***********************
IF RLOCK()
        RETURN (.T.)
ENDIF
mensagem('Registro Arq.:'+ALIAS(SELE())+' estar sendo acessado p/outro usuario !!!')

WHILE LASTKEY() <> 27
        IF DBRLOCK()
                RETURN (.T.)
        ENDIF
ENDDO
RETURN (.F.)
****************************** F I M ***************************
* FUNCAO TENTA ADICIONA REGISTRO NO ARQUIVO EM REDE
*****************************************************
FUNCTION adireg
***************
APPEND BLANK
IF ! NETERR()
        RETURN .T.
ENDIF
WHILE LASTKEY() <> 27
        mensagem('Aguarde...Acessando o Arquivo: '+ALIAS(SELE()))
        APPEND BLANK
        IF ! NETERR()
                RETURN .T.
        ENDIF
ENDDO
RETURN .F.
*************************** F I M *********************************
* FUNCAO PARA ABRIR ARQUIVOS
****************************
FUNCTION AbriArq(arq,al,tp,sit,vlocal,vext,vcamin,vmens)
********************************************************
LOCAL mcam:='',mcamcfg,mlocal:='',mestacao:='',mver:='',m_cfg1:={}
mestacao := ver_ini()
IF arq = 'SACDOLAR' .OR. arq = 'sacdolar'
        RETURN .T.
ENDIF
SET AUTOPEN ON
IF SELECT(al) > 0 .AND. tp = NIL
        RETURN .T.
ENDIF
mensagem('Aguarde tentando acessar ao arquivo: '+arq)
WHILE .T.
        IF m_line = 'ON' .AND. sit = NIL
                IF tp = 'E'
                        IF SELECT(al) > 0
                                (al)->(DBCLOSEAREA())
                        ENDIF
                        USE (arq) ALIAS (al) EXCLUSIVE NEW VIA 'SQLRDD'
                        IF ! NETERR()
                                RETURN .T.
                        ELSE
                                atencao('Este ARQUIVO esta sendo usado por outro usuario, Aguarde...Tentando Acesso ao Arquivo: '+UPPER(arq)+' EXCLUSIVO')
                        ENDIF
                ELSE
                        IF SELECT(al) > 0
                                RETURN .T.
                        ENDIF
                        USE (arq) ALIAS (al) SHARED NEW VIA 'SQLRDD'
                        IF ! NETERR()
                                RETURN .T.
                        ELSE
                                atencao('Este ARQUIVO esta sendo usado EXCLUSIVO por outro usuario, Aguarde...Tentando Acesso ao Arquivo: '+UPPER(arq)+' COMPARTILHADO')
                        ENDIF
                ENDIF
                IF LASTKEY() = 27
                        atencao('Nao foi possivel acessar este Arquivo: '+mcam+UPPER(arq))
                        RETURN .F.
                ENDIF
        ELSE
                IF tp = 'E'
                        IF SELECT(al) > 0
                                (al)->(DBCLOSEAREA())
                        ENDIF
                        USE (arq) ALIAS (al) EXCLUSIVE NEW VIA 'DBFCDX'
                        IF ! NETERR()
                                RETURN .T.
                        ELSE
                                atencao('Este ARQUIVO esta sendo usado por outro usuario, Aguarde...Tentando Acesso ao Arquivo: '+UPPER(arq)+' EXCLUSIVO')
                        ENDIF
                ELSE
                        IF SELECT(al) > 0
                                RETURN .T.
                        ENDIF
                        USE (arq) ALIAS (al) SHARED NEW VIA 'DBFCDX'
                        IF ! NETERR()
                                RETURN .T.
                        ELSE
                                atencao('Este ARQUIVO esta sendo usado EXCLUSIVO por outro usuario, Aguarde...Tentando Acesso ao Arquivo: '+UPPER(arq)+' COMPARTILHADO')
                        ENDIF
                ENDIF
                IF LASTKEY() = 27
                        atencao('Nao foi possivel acessar este Arquivo: '+mcam+UPPER(arq))
                        RETURN .F.
                ENDIF
        ENDIF
ENDDO
RETURN .F.
*************************** F I M *********************************
* VER NIVEL DE ACESSO
*********************
FUNCTION ver_nivel(mmodulo,mdescri,mnivel,mconf_nivel,mamb,mopera)
******************************************************************
LOCAL msele,morde,mtela_nivel,cons_nivel:={}

msele := 0
IF ver_modulo(mmodulo)
        RETURN .T.
ENDIF
IF mnum_principal <> NIL
        exibi_prg(mmodulo)
ENDIF
mmodulo := mmodulo+SPACE(20-LEN(mmodulo))
WHILE .T.
        cons_nivel := {}
        sr_getconnection():exec("SELECT * FROM sacconf WHERE modulo = "+sr_cdbvalue(mmodulo),,.t.,@cons_nivel)
        IF LEN(cons_nivel) > 0
                sr_begintransaction()
                        try
                                sr_getconnection():exec("UPDATE sacconf SET descri = "+sr_cdbvalue(SUBSTR(mdescri,1,60))+" WHERE modulo = "+sr_cdbvalue(mmodulo),,.f.)
                                sr_getconnection():exec("COMMIT",,.f.)
                                sr_committransaction()
                        catch e
                                tracelog(valtoprg())
                                sr_rollbacktransaction()
                        END
                sr_endtransaction()
                IF (mopera = '999' .OR. cod_operado = '999')
                        RETURN .T.
                ENDIF
                IF RAT(IF(EMPTY(SUBSTR(mconf_nivel,1,1)),'*',SUBSTR(mconf_nivel,1,1)),cons_nivel[1,3]) = 0 .AND. RAT(IF(EMPTY(SUBSTR(mconf_nivel,2,1)),'*',SUBSTR(mconf_nivel,2,1)),cons_nivel[1,3]) = 0
                        IF mamb = NIL
                                atencao(mdescri+' - ACESSO NAO AUTORIZADO PARA ESTE AMBIENTE - NIVEL: '+mconf_nivel,2)
                                IF ! aut_sen(mdescri+' - Senha de Liberacao do Ambiente:','LIB_AMB',,,,'AMBIE')
                                        RETURN .F.
                                ELSE
                                        RETURN .T.
                                ENDIF
                        ELSE
                                RETURN .F.
                        ENDIF
                ELSE
                        RETURN .T.
                ENDIF
        ELSE
                sr_getconnection():exec('INSERT INTO sacconf (modulo,descri,'+;
                        'nivel,SR_DELETED )'+;
                        ' VALUES ('+;
                        sr_cdbvalue(ALLTRIM(mmodulo))+','+; //1
                        sr_cdbvalue(SUBSTR(mdescri,1,60))+','+; //2
                        sr_cdbvalue(ALLTRIM(mnivel))+','+; //3
                        sr_cdbvalue(' ')+')',,.f.)
                sr_getconnection():exec("COMMIT",,.f.)
        ENDIF
ENDDO
RETURN .T.
*********************************** f i m **************************************
* VER NIVEL DE MODULO
*********************
FUNCTION ver_modulo(mmodulo)
****************************
LOCAL msele,morde,mtela_nivel,mcons_nivel:={}

mmodulo := mmodulo+SPACE(20-LEN(mmodulo))
mcons_nivel := {}
sr_getconnection():exec("SELECT * FROM sacconf WHERE modulo = "+sr_cdbvalue(mmodulo),,.t.,@mcons_nivel)
IF LEN(mcons_nivel) > 0 .AND. SUBSTR(mcons_nivel[1,3],1,1) = '0'
        RETURN .T.
ELSE
        RETURN .F.
ENDIF
RETURN NIL
*********************************** f i m **************************************
* FUNCAO PARA INICIALIZACAO DO SISTEMA
***************************************
FUNCTION inicializa()
*********************
LOCAL msenha,mnivel,mcod_op,msele,morde,mmen,mcor,mdir,;
      mnum_term:='001',marquivo:=' '

mcor := SETCOLOR()
MYRUN("net config server /autodisconnect:-1" ) // NAO DESCONECTAR DO SERVIDOR
IF FILE(curdrive()+':\HTICFG.INI') .OR. FILE(curdrive()+':\HRBCFG.INI')
        RETURN NIL
ELSE
        op_tela(10,10,13,90)
        WHILE .T.
                setcor(1)
                msenha = SPACE(21)
                DEVPOS(00,00);DEVOUT('Numero de Serie...:')
                DEVPOS(00,30);DEVOUT('Data do Computador:')
                DEVPOS(01,00);DEVOUT('Codigo de ACESSO..:')
                setcor(3)
                DEVPOS(00,20);DEVOUT(ver_serie())
                DEVPOS(00,50);DEVOUT(DATE())
                setcor(1)
                WVW_DrawBoxGet(,01,20,21)

                @ 01,20 GET msenha
                READ
                IF LASTKEY() = 27
                        EXIT
                ENDIF
                setcor(1)
*               IF msenha == '19681966'
                IF ALLTRIM(msenha) == '9239'+ALLTRIM(ver_serie())+SUBSTR(DTOC(DATE()),1,2)+SUBSTR(DTOC(DATE()),7,2)+SUBSTR(DTOC(DATE()),4,2)+'92441';
                   .OR. ALLTRIM(msenha) == '9239'+ALLTRIM(ver_serie())+SUBSTR(DTOC(DATE()),1,2)+SUBSTR(DTOC(DATE()),7,2)+SUBSTR(DTOC(DATE()),4,2)+'92440'
                        IF SUBSTR(ALLTRIM(msenha),LEN(ALLTRIM(msenha)),1) = '1'
                                m_set:={}
                                sr_getconnection():exec("SELECT * FROM sacsetup",,.t.,@m_set)
                                m_set[1,123] := DCRIPTO(SUBSTR(m_set[1,123],1,14))+DCRIPTO(SUBSTR(m_set[1,123],15,6))
                        ENDIF
                        WVW_DrawBoxGet(,02,20,3)
                        SET DEVI TO PRINT
                        SET PRINT ON
                        SET PRINT TO (curdrive()+':\HTICFG.INI')
                        DEVPOS(00,00);DEVOUT(mnum_term)
                        DEVPOS(01,00);DEVOUT(' ')
                        SET PRINT TO;SET PRINT OFF;SET DEVI TO SCREEN
                        wvw_lclosewindow()
                        RETURN .T.
                ELSE
                        atencao('Codigo de Acesso nao e valido...')
                        LOOP
                ENDIF
        ENDDO
        //apaga_HTI() //apaga o arquivo de controle "HTI.001"
        sr_getconnection():exec("UPDATE insopera SET terminal = '',data_acess = NULL,hora_acess = '' WHERE scod_op = "+sr_cdbvalue(cod_operado),,.f.)
        sr_getconnection():exec('COMMIT',,.f.)
        fecha_conexaoDB()
        QUIT
ENDIF
RETURN NIL
********************************** f i m **************************************
* FINALIZA OS SISTEMAS
**********************
FUNCTION fim(msist,mtti)
************************
LOCAL opcao,lci := 05,cci := 25,lba := 17,cba := 53,tela
tela := SAVESCREEN(00,00,24,79)
opcao := 0
WHILE .T.
        IF m_line = 'OFF'
                CLEAR MEMORY
                QUIT
        ENDIF
        SET CURSOR ON
        /*
        sr_getconnection():exec("UPDATE insopera SET sult_fim = " + sr_cdbvalue(DATE())  +;
                                        ",shora_fim = " + sr_cdbvalue(TIME())+;
                                        ",sh_i_c = '     '"+;
                                        " WHERE scod_op = " + sr_cdbvalue(cod_operado),,.f.)
        	sr_getconnection():exec("COMMIT",,.f.)
                //apaga_HTI() //apaga o arquivo de controle "HTI.001"
                sr_getconnection():exec("UPDATE insopera SET terminal = '',data_acess = NULL,hora_acess = '' WHERE scod_op = "+sr_cdbvalue(cod_operado),,.f.)
                sr_getconnection():exec('COMMIT',,.f.)
*/
                fecha_conexaoDB()
                CLEAR MEMORY
                QUIT
        /*
        IF mtti = NIL
                setcor(3)
                botao(lci,cci,lba,cba,,' ESCOLHA A OPCAO ')
                botao(lci+2,cci+1,lci+4,cba-1)
                botao(lci+5,cci+1,lci+7,cba-1)
                botao(lci+8,cci+1,lci+10,cba-1)
                setcor(9)
                @ lci+3,cci+2 PROMPT '   Finalizar o sistema   ' MESSAGE '** Sai do sistema **'
                @ lci+6,cci+2 PROMPT ' Nao finalizar o sistema ' MESSAGE '** Retorna ao sistema **'
                //@ lci+9,cci+2 PROMPT '     Deixar na senha     ' MESSAGE '** Deixa na senha **'
                SET INTEN ON
                MENU TO opcao
                IF LASTKEY() = 27
                        RESTSCREEN(00,00,24,79,tela)
                        setcor(1)
                        RETURN NIL
                ENDIF
        ELSE
                opcao := 1
        ENDIF

        DO CASE
                CASE opcao = 1
                        SET CURSOR ON
                        SR_BEGINTRANSACTION()
                        TRY
                        IF mtti = NIL

		        	sr_getconnection():exec("UPDATE insopera SET sult_fim = " + sr_cdbvalue(DATE())  +;
                		                        ",shora_fim = " + sr_cdbvalue(TIME())+;
                                		        ",sh_i_c = '     '"+;
		                                        " WHERE scod_op = " + sr_cdbvalue(cod_operado),,.f.)
	       			sr_getconnection():exec("COMMIT",,.f.)
                        ENDIF
                        //apaga_HTI() //apaga o arquivo de controle "HTI.001"
                        sr_getconnection():exec("UPDATE insopera SET terminal = '',data_acess = NULL,hora_acess = '' WHERE scod_op = "+sr_cdbvalue(cod_operado),,.f.)
                        sr_getconnection():exec('COMMIT',,.f.)
                        sr_committransaction()
                        CATCH e
                        SR_ENDTRANSACTION()
                        END
                        wvw_lclosewindow()
                        fecha_conexaoDB()
                        CLEAR MEMORY
                        QUIT
                CASE opcao = 2
                        RESTSCREEN(00,00,24,79,tela)
                        setcor(1)
                        RETURN NIL
       ENDCASE
       */
ENDDO
RETURN NIL
***************************** F I M *********************************************
* FUNCAO PARA CRIPTOGRAFA
*************************
FUNCTION cripto(mexp,q,mprod)
*****************************
LOCAL mletra:={},maux:={},msenha,i
IF LASTKEY() = 27
        RETURN .F.
ENDIF
//IF LEN(mexp) < 2 .OR. (LEN(mexp) > 8 .AND. q = NIL)
IF (LEN(mexp) > 8 .AND. q = NIL)
        atencao('Senha Invalida !!!')
        RETURN .F.
ENDIF
msenha := ''
mexp := UPPER(mexp)
i:=0
FOR i = 1 TO LEN(mexp)
        AADD(mletra,SUBSTR(mexp,i,1))
NEXT
i:=0
FOR i = 1 TO LEN(mexp)
        IF mletra[i] = 'A'
                AADD(maux,CHR(189)) //?
        ELSEIF mletra[i] = 'B'
                AADD(maux,CHR(184)) //?
        ELSEIF mletra[i] = 'C'
                AADD(maux,CHR(154)) //?
        ELSEIF mletra[i] = 'D'
                AADD(maux,CHR(181)) //?
        ELSEIF mletra[i] = 'E'
                AADD(maux,CHR(228)) //?
        ELSEIF mletra[i] = 'F'
                AADD(maux,CHR(230)) //?
        ELSEIF mletra[i] = 'G'
                AADD(maux,CHR(232)) //?
        ELSEIF mletra[i] = 'H'
                AADD(maux,CHR(218)) //+
        ELSEIF mletra[i] = 'I'
                AADD(maux,CHR(204)) //?
        ELSEIF mletra[i] = 'J'
                AADD(maux,CHR(236)) //?
        ELSEIF mletra[i] = 'K'
                AADD(maux,CHR(231)) //?
        ELSEIF mletra[i] = 'L'
                AADD(maux,CHR(245)) //?
        ELSEIF mletra[i] = 'M'
                AADD(maux,CHR(225)) //?
        ELSEIF mletra[i] = 'N'
                AADD(maux,CHR(237)) //?
        ELSEIF mletra[i] = 'O'
                AADD(maux,CHR(224)) //?
        ELSEIF mletra[i] = 'P'
                AADD(maux,CHR(208))
        ELSEIF mletra[i] = 'Q'
                AADD(maux,CHR(166))
        ELSEIF mletra[i] = 'R'
                AADD(maux,CHR(168))
        ELSEIF mletra[i] = 'S'
                AADD(maux,CHR(172))
        ELSEIF mletra[i] = 'T'
                AADD(maux,CHR(157))
        ELSEIF mletra[i] = 'U'
                AADD(maux,CHR(140))
        ELSEIF mletra[i] = 'W'
                AADD(maux,CHR(174))
        ELSEIF mletra[i] = 'V'
                AADD(maux,CHR(20))
        ELSEIF mletra[i] = 'X'
                AADD(maux,CHR(223))
        ELSEIF mletra[i] = 'Y'
                AADD(maux,CHR(239))
        ELSEIF mletra[i] = 'Z'
                AADD(maux,CHR(235))
        ELSEIF mletra[i] = '0'
                AADD(maux,CHR(251))
        ELSEIF mletra[i] = '1'
                AADD(maux,CHR(253))
        ELSEIF mletra[i] = '2'
                AADD(maux,CHR(252))
        ELSEIF mletra[i] = '3'
                AADD(maux,CHR(248))
        ELSEIF mletra[i] = '4'
                AADD(maux,CHR(216))
        ELSEIF mletra[i] = '5'
                AADD(maux,CHR(200))
        ELSEIF mletra[i] = '6'
                AADD(maux,CHR(136))
        ELSEIF mletra[i] = '7'
                AADD(maux,CHR(127))
        ELSEIF mletra[i] = '8'
                AADD(maux,CHR(21))
        ELSEIF mletra[i] = '9'
                AADD(maux,CHR(23))     
        ELSEIF mletra[i] = ' '
                AADD(maux,'0')     
        ELSEIF mletra[i] = '*'
                AADD(maux,'1')     
        ELSEIF mletra[i] = '-'
                AADD(maux,'2')     
        ELSEIF mletra[i] = '/'
                AADD(maux,'3')     
        ELSEIF mletra[i] = '.'
                AADD(maux,'4')     
        ELSEIF mletra[i] = ','
                AADD(maux,'5')     
        ELSEIF mletra[i] = '"'
                AADD(maux,'A')     
        ELSEIF mletra[i] = "'"
                AADD(maux,'6')     
        ELSEIF mletra[i] = '('
                AADD(maux,'7')     
        ELSEIF mletra[i] = ')'
                AADD(maux,'8')     
        ELSEIF mletra[i] = '='
                AADD(maux,'9')     
        ELSEIF mletra[i] = '%'
                AADD(maux,'B')     
        ELSEIF mletra[i] = '*'
                AADD(maux,'C')     
        ELSEIF mletra[i] = '+'
                AADD(maux,'D')     
        ELSEIF mletra[i] = '@'
                AADD(maux,'E')     
        ELSEIF mletra[i] = ']'
                AADD(maux,'F')     
        ELSEIF mletra[i] = '['
                AADD(maux,'G')     
        ELSEIF mletra[i] = '{'
                AADD(maux,'I')     
        ELSEIF mletra[i] = '}'
                AADD(maux,'J')     
        ELSEIF mletra[i] = '&'
                AADD(maux,'K')     
        ELSEIF mletra[i] = '#'
                AADD(maux,'L')     
        ELSEIF mletra[i] = '!'
                AADD(maux,'M')     
        ELSEIF mletra[i] = ':'
                AADD(maux,'N')     
        ELSEIF mletra[i] = ';'
                AADD(maux,'O')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'P')     
        ELSEIF mletra[i] = '|'
                AADD(maux,'Q')     
        ELSEIF mletra[i] = '\'
                AADD(maux,'R')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'S')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'T')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'U')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'V')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'X')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'Y')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'Z')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'a')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'b')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'c')     
        ELSEIF mletra[i] = NIL
                AADD(maux,'d')     
        ELSE
                AADD(maux,'_')
        ENDIF
NEXT
i:=0
IF LEN(mexp) = 0
        msenha := ''
ELSEIF LEN(mexp) = 1
        msenha := maux[1]
ELSE
        msenha := maux[2] + maux[1]
        FOR i = 3 TO LEN(mexp)
                msenha := msenha + maux[i]
        NEXT
ENDIF
RETURN msenha
*************************** F I M ***********************************************
* FUNCAO PARA DES-CRIPTOGRAFA
*****************************
FUNCTION dcripto(mexp)
**********************
LOCAL mletra:={},maux:={},msenha,i
ASIZE(mletra,0)
ASIZE(maux,0)
msenha := ''
i:=0
FOR i = 1 TO LEN(mexp)
        IF SUBSTR(mexp,i,1) = ' ' .OR. SUBSTR(mexp,i,1) = NIL
                LOOP
        ENDIF
        AADD(mletra,SUBSTR(mexp,i,1))
NEXT
i:=0
IF EMPTY(mletra)
        RETURN NIL
ENDIF
FOR i = 1 TO LEN(mletra)
        IF mletra[i] = CHR(189)
                AADD(maux,'A')
        ELSEIF mletra[i] = CHR(184)
                AADD(maux,'B')
        ELSEIF mletra[i] = CHR(154)
                AADD(maux,'C')
        ELSEIF mletra[i] = CHR(181)
                AADD(maux,'D')
        ELSEIF mletra[i] = CHR(228)
                AADD(maux,'E')
        ELSEIF mletra[i] = CHR(230)
                AADD(maux,'F')
        ELSEIF mletra[i] = CHR(232)
                AADD(maux,'G')
        ELSEIF mletra[i] = CHR(218)
                AADD(maux,'H')
        ELSEIF mletra[i] = CHR(204)
                AADD(maux,'I')
        ELSEIF mletra[i] = CHR(236)
                AADD(maux,'J')
        ELSEIF mletra[i] = CHR(231)
                AADD(maux,'K')
        ELSEIF mletra[i] = CHR(245)
                AADD(maux,'L')
        ELSEIF mletra[i] = CHR(225)
                AADD(maux,'M')
        ELSEIF mletra[i] = CHR(237)
                AADD(maux,'N')
        ELSEIF mletra[i] = CHR(224)
                AADD(maux,'O')
        ELSEIF mletra[i] = CHR(208)
                AADD(maux,'P')
        ELSEIF mletra[i] = CHR(166)
                AADD(maux,'Q')
        ELSEIF mletra[i] = CHR(168)
                AADD(maux,'R')
        ELSEIF mletra[i] = CHR(172)
                AADD(maux,'S')
        ELSEIF mletra[i] = CHR(157)
                AADD(maux,'T')
        ELSEIF mletra[i] = CHR(140)
                AADD(maux,'U')
        ELSEIF mletra[i] = CHR(174)
                AADD(maux,'W')
        ELSEIF mletra[i] = CHR(20)
                AADD(maux,'V')
        ELSEIF mletra[i] = CHR(223)
                AADD(maux,'X')
        ELSEIF mletra[i] = CHR(239)
                AADD(maux,'Y')
        ELSEIF mletra[i] = CHR(235)
                AADD(maux,'Z')
        ELSEIF mletra[i] = CHR(251)
                AADD(maux,'0')
        ELSEIF mletra[i] = CHR(253)
                AADD(maux,'1')
        ELSEIF mletra[i] = CHR(252)
                AADD(maux,'2')
        ELSEIF mletra[i] = CHR(248)
                AADD(maux,'3')
        ELSEIF mletra[i] = CHR(216)
                AADD(maux,'4')
        ELSEIF mletra[i] = CHR(200)
                AADD(maux,'5')
        ELSEIF mletra[i] = CHR(136)
                AADD(maux,'6')
        ELSEIF mletra[i] = CHR(127)
                AADD(maux,'7')
        ELSEIF mletra[i] = CHR(21)
                AADD(maux,'8')
        ELSEIF mletra[i] = CHR(23)
                AADD(maux,'9')
        ELSEIF mletra[i] = '0'
                AADD(maux,' ')     
        ELSEIF mletra[i] = '1'
                AADD(maux,'*')     
        ELSEIF mletra[i] = '2'
                AADD(maux,'-')     
        ELSEIF mletra[i] = '3'
                AADD(maux,'/')     
        ELSEIF mletra[i] = '4'
                AADD(maux,'.')     
        ELSEIF mletra[i] = '5'
                AADD(maux,',')     
        ELSEIF mletra[i] = 'A'
                AADD(maux,'"')     
        ELSEIF mletra[i] = '6'
                AADD(maux,"'")     
        ELSEIF mletra[i] = '7'
                AADD(maux,'(')     
        ELSEIF mletra[i] = '8'
                AADD(maux,')')     
        ELSEIF mletra[i] = '9'
                AADD(maux,'=')     
        ELSEIF mletra[i] = 'B'
                AADD(maux,'%')     
        ELSEIF mletra[i] = 'C'
                AADD(maux,'*')     
        ELSEIF mletra[i] = 'D'
                AADD(maux,'+')     
        ELSEIF mletra[i] = 'E'
                AADD(maux,'@')     
        ELSEIF mletra[i] = 'F'
                AADD(maux,']')     
        ELSEIF mletra[i] = 'G'
                AADD(maux,'[')     
        ELSEIF mletra[i] = 'I'
                AADD(maux,'{')     
        ELSEIF mletra[i] = 'J'
                AADD(maux,'}')     
        ELSEIF mletra[i] = 'K'
                AADD(maux,'&')     
        ELSEIF mletra[i] = 'L'
                AADD(maux,'#')     
        ELSEIF mletra[i] = 'M'
                AADD(maux,'!')     
        ELSEIF mletra[i] = 'N'
                AADD(maux,':')     
        ELSEIF mletra[i] = 'O'
                AADD(maux,';')     
        ELSEIF mletra[i] = 'P'
                AADD(maux,'?')     
        ELSEIF mletra[i] = 'Q'
                AADD(maux,'|')     
        ELSEIF mletra[i] = 'R'
                AADD(maux,'\')     
        ELSEIF mletra[i] = 'S'
                AADD(maux,'?')     
        ELSEIF mletra[i] = '?'
                AADD(maux,'?')     
        ELSEIF mletra[i] = 'U'
                AADD(maux,'?')     
        ELSEIF mletra[i] = 'V'
                AADD(maux,'?')     
        ELSEIF mletra[i] = 'X'
                AADD(maux,'?')     
        ELSEIF mletra[i] = 'Y'
                AADD(maux,'?')     
        ELSEIF mletra[i] = 'Z'
                AADD(maux,'?')     
        ELSEIF mletra[i] = 'A'
                AADD(maux,'?')     
        ELSEIF mletra[i] = 'b'
                AADD(maux,'?')     
        ELSEIF mletra[i] = 'c'
                AADD(maux,'?')     
        ELSEIF mletra[i] = 'd'
                AADD(maux,NIL)     
        ELSE
                AADD(maux,'_')
        ENDIF
NEXT
IF LEN(mexp) = 0
        msenha := mexp
ELSEIF LEN(mexp) = 1
        msenha := maux[1]
ELSE
        i:=0
        msenha := maux[2] + maux[1]
        FOR i = 3 TO LEN(maux)
                msenha := msenha + maux[i]
        NEXT
ENDIF
RETURN msenha
******************************* F I M ******************************************
Function PegaChar
*****************
SETPOS(25,00)
RETURN Inkey(0)
******************************* F I M ******************************************
// Function PegaSenha
// Programada por Paulo Nasi em 29.06.1993
// Pega senha digitada pela usuario
Procedure PegaSenha ( Senha, LinSenha, ColSenha , cor,mtamanho )
****************************************************************
#include 'INKEY.CH'
Local SenhaTamMax  := 8
Local CharDigitado
Local SenhaTela    := ""
IF mtamanho <> NIL
	senhatammax := mtamanho
ENDIF
limpa(linsenha,colsenha,linsenha,colsenha+9)
WHILE Len(SenhaTela) <= SenhaTamMax
   CharDigitado := PegaChar()
   Do CASE
      CASE CharDigitado >= 97 .And. CharDigitado <= 122   /* ALFA MINUSCULA */
           Senha     := Senha + Upper(Chr(CharDigitado))
           SenhaTela := SenhaTela + "#"
      CASE CharDigitado >= 65 .And. CharDigitado <= 90    /* ALFA MAIUSCULA */
           Senha     := Senha + Chr(CharDigitado)
           SenhaTela := SenhaTela + "#"
      CASE CharDigitado >= 48 .And. CharDigitado <= 57    /* NUMERICO */
           Senha     := Senha + Chr(CharDigitado)
           SenhaTela := SenhaTela + "#"
      CASE (CharDigitado = K_LEFT) .Or. (CharDigitado = K_BS)
           IF Len(Senha) != 0
              Senha     := Left(Senha,Len(Senha)-1)
              SenhaTela := Left(SenhaTela,Len(SenhaTela)-1)
           ENDIF
      CASE CharDigitado = K_ENTER
           EXIT
      CASE CharDigitado = K_ESC
           Senha := "NAO"
           EXIT
   EndCASE
   IF cor <> NIL
          SETCOLOR(cor)
   ENDIF
   @ LinSenha,ColSenha Say PadR(SenhaTela,SenhaTamMax)
ENDDO
RETURN
********************************* f i m ********************************
* EMITE TEXTOS
*************************
FUNCTION texto
***************
LOCAL lci,cci,lba,cba,opcao,mtexto,mnome,mquantd,i,linhas,linha,;
      lin,mcont,mcidade
PRIVATE mtraco,mtipo_imp,mimp_tipo:=0,marq:=SPACE(35)
lci := cci := 0
lba := 30
cba := 76
mtraco := REPLI('=',80)
opcao := SPACE(1)
*----------------------------------------------------
IF ! AbriArq('texto','tex');RETURN NIL;ENDIF
*----------------------------------------------------
SET KEY -9 TO ctrl_w()
op_tela(00,10,30,90,'T E X T O')
WHILE .T.
********* VARIAVEIS DE IMPRESSAO *******************
        mtipo_imp := m_indiv[1,18]
        ********************************************
        mnome := SPACE(30)
        **************************
        mcidade := m_set[1,134]
        **************************
        **************************
        SELE('tex');ORDSETFOCUS(1)
        GO TOP
        **************************
        setcor(3)
        @ lci+1,cci TO lci+1,cba
        setcor(1)
        DEVPOS(lci,cci+1);DEVOUT('Digite o nome do arquivo:')
        WVW_DrawBoxGet(,lci,cci+27,30)

        @ lci,cci+27 GET mnome PICT '@!'
        READ
        IF LASTKEY() = 27
                SET KEY -9 TO
                EXIT
        ENDIF
        IF ! tex->(DBSEEK(RTRIM(mnome)))
                GO TOP
        ENDIF
        mnome := ver_texto()
        IF LASTKEY() = 27
                LOOP
        ENDIF              
        IF mnome = '<DEFAULT>'
                mnome := SPACE(30)
        ENDIF
        setcor(3)
        DEVPOS(lci,cci+27);DEVOUT(mnome)
        setcor(1)
        Mensagem('Tecle <F10> Grava e Imprimir - <Ctrl+Y>Apagar linha p/linha - <ESC> p/Abandonar')
        mtexto := MEMOEDIT(tex->texto,lci+2,cci+1,lba-1,cba-1,,,,,,7)
*       tex-> texto := MEMOEDIT(texto,lci+1,cci+2,lba-1,cba-1,,,,,,7)

        IF LASTKEY() = 27
                LOOP
        ENDIF
        opcao := op_simnao('S','Deseja GRAVAR o Texto:')
        IF opcao = 'S'
                op_tela(10,10,12,70,'NOME DO ARQUIVO')
                DEVPOS(01,00);DEVOUT('Digite o Nome do Arquivo que deseja GRAVAR:')
                @ 01,COL()+1 GET mnome VALID IF(EMPTY(mnome),.F.,.T.)
                READ
                wvw_lclosewindow()
                IF LASTKEY() = 27
                        LOOP
                ENDIF
                IF ! tex->(DBSEEK(mnome))
                        sr_getconnection():exec('INSERT INTO texto (data,texto,nome,SR_DELETED )'+;
                                ' VALUES ('+sr_cdbvalue(mdata_sis)+','+; //1
                                sr_cdbvalue(mtexto)+','+; //2
                                sr_cdbvalue(mnome)+','+; //3
                                sr_cdbvalue(' ')+')',,.f.)
                        sr_getconnection():exec("COMMIT",,.f.)
                ELSE
                        opcao := op_simnao('S','Este Arquivo ja existe deseja Substituir:')
                        IF opcao = 'N'
                                LOOP
                        ENDIF
                        sr_getconnection():exec("UPDATE texto SET data = " + sr_cdbvalue(mdata_sis)  +;
                                ",texto = " + sr_cdbvalue(mtexto)+;
                                ",nome = " + sr_cdbvalue(mnome)  +;
                                " WHERE nome = " + sr_cdbvalue(mnome),,.f.)
                        sr_getconnection():exec("COMMIT",,.f.)
                ENDIF
/*
                tex->data  := mdata_sis
                tex->texto := mtexto
                tex->nome  := mnome
                DBUNLOCK()
                DBCOMMIT()
*/
        ENDIF
        mquantd := 1
        op_tela(10,10,13,40,'C O P I A S')
        DEVPOS(01,00);DEVOUT('Quantidade de Copias:')
        @ 01,COL()+1 GET mquantd PICT '99' VALID IF(mquantd = 0,.F.,.T.)
        READ
        wvw_lclosewindow()
        IF ! imp_arq('TEXTO.TXT','R')
                LOOP
        ENDIF
        tex->(DBSEEK(mnome))
        FOR i = 1 TO mquantd
                imprt(mtipo_imp,'E')
                DEVPOS(PROW(),00);DEVOUT(memp_resa)
                imprt(mtipo_imp,'N')
                DEVPOS(PROW()+1,00);DEVOUT(mend_firm)
                DEVPOS(PROW()+1,00);DEVOUT(mcid_firm+' - Fone: '+mfone_firm)
                DEVPOS(PROW()+1,00);DEVOUT('Insc.: '+m_set[1,128]+'  CGC: '+mcgc_firm)
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                @ PROW()+2,01 SAY ' '
                linhas := MLCOUNT(tex->texto,70)

                FOR linha = 1 TO  linhas
                        lin := MEMOLINE(tex->texto,70,linha,,)
*                       DEVPOS(PROW()+1,05);DEVOUT(IMPAC(LIN))
                        @ PROW()+1,05 SAY lin
                        IF PROW() >= 58
                                EJECT
                                mcont = 0
                        ENDIF
                NEXT

                @ PROW()+4,10 SAY RTRIM(mcidade)+','
                @ PROW(),PCOL()+1 SAY imp_data(mdata_sis)
                @ PROW()+4,10 SAY REPLI('-',LEN(memp_resa)+2)
                @ PROW()+1,10 SAY memp_resa
                EJECT
                SETPRC(00,00)
                SET DEVI TO SCREEN;SET PRINT TO;SET PRINT OFF
                conf_impressao('TEXTO.TXT')
        NEXT
ENDDO
wvw_lclosewindow()
RETURN NIL
************************ F I M ************************************************************************
* CONSULTA FORMULA DE CALCULO DE CUSTO
***************************************
FUNCTION form_calc
*******************
LOCAL lci,cci,lba,cba,opcao,mtexto,linha,linhas,lin
PRIVATE mtraco
SETMODE(50,80)
lci := 00
cci := 00
lba := 25
cba := 79
mtraco := REPLI('=',80)
opcao := SPACE(1)
SET KEY -9 TO ctrl_w()
op_tela(lci,cci,lba,cba,'  CONSULTA DA FORMULA DE CUSTO  ')
WHILE .T.
        setcor(1)
        Mensagem('Tecle <F10> p/Imprimir - <ESC> p/Abandonar')
        mtexto := MEMOREAD('calcust.txt')
        mtexto := MEMOEDIT(mtexto,lci+1,cci+1,lba-1,cba-1,,,,,,)
*       mtexto := MEMOEDIT(mtexto,lci+1,cci+1,lba-1,cba-1,,,,,,7)
        IF LASTKEY() = 27
                SETMODE(25,80)
                UNLOCK
                SET KEY -9 TO
                EXIT
        ENDIF
        opcao := op_simnao('S','Deseja Imprimir:')
        IF opcao = 'S'
                mensagem('Espere o Final da Impressao OK')
                SET DEVI TO PRINT
                SET PRINT TO (m_indiv[1,17])
                imprt(m_indiv[1,18],'E')
                DEVPOS(PROW(),00);DEVOUT(memp_resa)
                imprt(m_indiv[1,18],'N')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+3,00);DEVOUT(' ')
                linhas := 0
                linhas := MLCOUNT(MEMOREAD('calcust.txt'),76)
                linha := 0
                FOR linha = 1 TO  linhas
                        lin := MEMOLINE(MEMOREAD('calcust.txt'),76,linha,,)
                        @ PROW()+1,00 SAY lin
                        IF PROW() >= 58
                                EJECT
                                imprt(m_indiv[1,18],'E')
                                DEVPOS(PROW(),00);DEVOUT(memp_resa)
                                imprt(m_indiv[1,18],'N')
                                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                                DEVPOS(PROW()+1,00);DEVOUT('Continuacao da formula')
                                DEVPOS(PROW()+2,00);DEVOUT(' ')
                        ENDIF
                NEXT
                EJECT
                SETPRC(00,00)
                SET DEVI TO SCREEN;SET PRINT TO;SET PRINT OFF
        ELSE
                LOOP
        ENDIF
ENDDO
wvw_lclosewindow()
RETURN NIL
*********************************** F I M *******************************************
* FUNCAO P/CONSULTAR TEXTO
********************************
FUNCTION ver_texto
******************
LOCAL lci,cci,lba,cba,msele,morde,men,opcao,;
      oconsprod,ocolprod[2],i,nkey
lci := cci := 0
lba := 25
cba := 40
msele := SELE()
morde := INDEXORD()
*************
SELE('tex');ORDSETFOCUS(1)
*************
men := SAVESCREEN(24,00,24,79)
mensagem('<ENTER>p/Confirma - <ESC> Retornar')
op_tela(0,0,25,40,' ARQUIVOS ')
oconsprod := TBROWSEDB(lci,cci,lba,cba)
ocolprod[1] := TBCOLUMNNEW('Arquivos',{||tex->nome})
ocolprod[2] := TBCOLUMNNEW('  DATA  ',{||tex->data })
i:=0
FOR i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
WHILE .T.
        nkey := 0
        WHILE nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                nkey := INKEY(0)
        END
        IF nkey == K_ESC
                EXIT
        ELSEIF nkey == K_ENTER
                IF tex->nome <> '<DEFAULT>'
                        opcao := mensagem1('Escolha <A>lterar <E>xcluir:','A','A,E')
                        IF opcao = 'A'
                                EXIT
                        ELSE
                                opcao := op_simnao('S','Confirma a EXCLUSAO:')
                                IF opcao = 'N'
                                        LOOP
                                ELSE
                                        BLOQREG()
                                        DELE
                                        DBCOMMIT()
                                        DBUNLOCK()
                                        GO TOP
                                        oconsprod := TBROWSEDB(lci,cci,lba,cba)
                                        ocolprod[1] := TBCOLUMNNEW('Arquivos',{||tex->nome})
                                        ocolprod[2] := TBCOLUMNNEW('  data  ',{||tex->data })
                                        i:=0
                                        FOR i=1 TO LEN(ocolprod)
                                                oconsprod:ADDCOLUMN(ocolprod[i])
                                        NEXT
                                        oconsprod:HEADSEP := CHR(196)
                                        oconsprod:COLSEP := CHR(179)
                                        LOOP
                                ENDIF
                        ENDIF
                ELSE
                        EXIT
                ENDIF
        ELSE
                genkey(oconsprod,nkey)
        ENDIF
END
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
wvw_lclosewindow()
RETURN tex->nome
******************************* f i m *********************************************
* FUNCAO F10 = CTRL+W
*********************
FUNCTION ctrl_w
***************
KEYBOARD CHR(23)
RETURN .T.
******************************* f i m *********************************************
* IMPRESSAO EM ITALICO
***********************************
FUNCTION pitalico(P)
********************
IF P = .T.
        DEVPOS(PROW(),00);DEVOUT("4")
ELSEIF P=.F. .OR. P = NIL
        DEVPOS(PROW(),00);DEVOUT("5")
ENDIF
RETURN NIL
************************** f i m *****************************************
**#ifdef COM_CALE
FUNCTION CALE      // Rotina para exibir calend?rio
*************
LOCAL cale_tela:=SAVESCREEN(0,0,25,79), cor_atual:=SETCOLOR(),;
      col_dia, dia_1, lisu_:=6, cosu_:=58, liin_:=20, coin_:=79,;
      i_, cl_, m_e_s, a_n_o, ult_dia,datac,;
      tbc:={;
             {K_DOWN, {||datac:=datac-30}},;
             {K_UP,   {||datac:=datac+30}},;
             {K_RIGHT,{||datac:=datac+365}},;
             {K_LEFT, {||datac:=datac-365}};
           },x,k,nm,sinal_,arqconf
PRIVATE op_sis:=0,vr_cale
*vr_cale=NOVAPOSI(@lisu_,@cosu_,@liin_,@coin_)                  // posicao atual do calendario
botao(lisu_,cosu_,liin_,coin_)                            // monta tela de apresentacao
@ lisu_+2,cosu_+1 SAY "Do 2a 3a 4a 5a 6a Sa"
@ lisu_+ 9,cosu_+1 SAY REPL("?",coin_-cosu_-1)
@ lisu_+10,cosu_+2 SAY " Incrementa o MES"                    // montra teclas disponiveis
@ lisu_+11,cosu_+2 SAY " Decrementa o MES"
@ lisu_+12,cosu_+2 SAY CHR(26)+" Incrementa o ANO"
@ lisu_+13,cosu_+2 SAY CHR(27)+" Decrementa o ANO"
datac := DATE()
WHILE .t.
*        @ lisu_+1,cosu_+1 SAY PADL(TRIM(NMES(datac))+" - "+STR(YEAR(datac)),20)
        dia_1=DOW(datac-DAY(datac)+1)                  // dia da semana do 1o. dia do mes
        cl_=lisu_+3
        @ cl_,cosu_+1 CLEAR TO liin_-6,coin_-1         // limpa area dos dias
        col_dia=1+cosu_+3*(dia_1-1)                    // coluna inicai do 1o. dia do mes
        m_e_s=MONTH(datac)                             // mes
        a_n_o=YEAR(datac)                              // ano
        IF INT(m_e_s/2) = m_e_s/2                      // acha ultimo dia do mes
                ult_dia=IF(m_e_s<8,IF(m_e_s=2,IF(INT(a_n_o/4)=a_n_o/4,29,28),30),31)
        ELSE
                ult_dia=IF(m_e_s<8,31,30)
        ENDI
        FOR i_=1 TO ult_dia                            // imprime os dias
                IF DAY(DATE())=i_                         // se for heje
                        setcor(3,'*')                  // enfatiza
                ENDI
                @ cl_,col_dia SAY PADL(STR(i_,2),2)       // imprime o dia na tela
                setcor(1)                       // retorna a cor normal
                col_dia+=3                                // proxima coluna
                IF dia_1/7=INT(dia_1/7)                   // fim da tela do calendario
                        cl_++ ; col_dia=cosu_+1              // passa para proxima linha
                ENDI
                dia_1++                                   // proximo dia
        NEXT
        x=SETCURSOR(0)                                 // apaga cursor, x=cursor atual
        #ifdef COM_MOUSE
                k=MOUSETECLA(lisu_+10,cosu_+2,liin_-1,cosu_+2)
        #ELSE
                #ifdef COM_TUTOR
                        k=IN_KEY(0)                          // aguarda pressionar tecla
                #ELSE
                        k=INKEY(0)                           // aguarda pressionar tecla
                #endi
        #endi
        SETCURSOR(x)                                   // volta tamanho original do cursor
        nm=ASCAN(tbc,{|ve_a| k=ve_a[1]})               // procura tecla dentro do vetor tbc (e' o CASE)
        IF nm!=0                                       // achou!
                EVAL(tbc[nm,2])                           // portanto, executa a acao...
        ELSE
                IF k=K_ALT_F8                             // muda calendario de posicao
*                        MUDA_PJ(@lisu_,@cosu_,@liin_,@coin_,cale_tela,.t.)
                        sinal_=" "
*                       PUBL &vr_cale.:=STR(lisu_,2)+STR(cosu_,2)
                        &vr_cale.:=STR(lisu_,2)+STR(cosu_,2)
                        SAVE TO (arqconf) ALL LIKE drv*      // salva as coordenadas em disco
                ELSE                                      // tecla sem acao, portanto,
                        EXIT                                 // fora...
                ENDI
        ENDI
ENDDO
RESTSCREEN(0,0,25,79,cale_tela)               // restaura tela e
#ifdef COM_MOUSE
        IF drvmouse                                    // se o mouse esta' ativo
                DO WHIL MOUSEGET(0,0)!=0                  // espera que os botoes sejam
                ENDD                                      // liberados (nao pressionados)
        ENDI
#endi
RETU
**#endi
******************************** F I M *******************************
* menu DE ERROS
***************
FUNCTION erro
***************
IF ! EMPTY(m_set[1,82]) .AND. (DATE() >= CTOD(SUBSTR(m_set[1,82],1,2)+'/'+SUBSTR(m_set[1,82],3,2)+'/'+SUBSTR(m_set[1,82],5,2));
                .OR. SUBSTR(m_set[1,82],12,1) = '*')
        IF m_line = 'ON'
                sr_begintransaction()
                        TRY
                                sr_getconnection():exec("UPDATE sacsetup SET sysdatlm = " + sr_cdbvalue(ALLTRIM(SUBSTR(m_set[1,82],1,11)+'*')) + " WHERE sr_recno = 1 ",,.f.)
                                sr_committransaction()
                        CATCH E
                                tracelog(valtoprg())
                                sr_rollbacktransaction()
                        END
                sr_endtransaction()
        ENDIF
        atencao('ATENCAO: Existe alguma TABELA com Problema de Corrupcao favor entrar en contato com a << HTI Sistemas - Fone:(81)'+mfone_HTI+' >> para Verificar as TABELAS',1)
        //apaga_HTI() //apaga o arquivo de controle "HTI.001"
        sr_begintransaction()
                TRY
                        sr_getconnection():exec("UPDATE insopera SET terminal = '',data_acess = NULL,hora_acess = '' WHERE scod_op = "+sr_cdbvalue(cod_operado),,.f.)
                        sr_committransaction()
                CATCH E
                        tracelog(valtoprg())
                        sr_rollbacktransaction()
                END
        sr_endtransaction()
        sr_getconnection():exec('COMMIT',,.f.)
        fecha_conexaoDB()
        QUIT
ENDIF
RETURN NIL
*********************** f i m ************************************
#INCLUDE "wingdi.ch"
#INCLUDE "winuser.ch"
FUNCTION SUB_BANNER(LIN,COL,STRING,VCOR)
****************************************
//Wvw_DrawLabel( ,lin,col, string,2,0 , rgb(0,0,255), rgb(198,198,198), 'Arial Black',30,35 , , , , , )
DEVPOS(lin,col);DEVOUT("")
IF vcor = NIL
        //WVW_DrawLabel(,lin,col,string,,,,, 'Arial Black',80,40,,,,,)
        WVW_DrawLabel(,lin,col,string,,,,, 'times new roman',80,40,,,,,)
ELSE
        //WVW_DrawLabel(,lin,col,string,,,240,, 'Arial Black',80,40,,,,,)
        WVW_DrawLabel(,lin,col,string,,,240,, 'times new roman',80,40,,,,,)
ENDIF
RETURN NIL
*********************** f i m ************************************
* RETORNA 11 DE MARCO DE 1995
*****************************
FUNCTION imp_data(mdata)
************************
LOCAL mmes,mimp_data,mpoint
SET CENTURY ON
mmes := NMES(mdata)
mimp_data := SUBSTR(DTOC(mdata),1,2)+' de '+RTRIM(mmes)+' de '+SUBSTR(DTOC(mdata),7)
SET CENTURY OFF
RETURN mimp_data
*************************** f i m *******************************************
FUNCTION botao(l,c,ll,cc,t,titulo,lado,cor_tit,mtamanho)
********************************************************
WVW_SetPaintRefresh(0)
IF mtamanho = NIL
        mtamanho := 0
ENDIF
IF t <> NIL
        cc := c + 5 + LEN(t) + mtamanho
ENDIF
SET CURSOR OFF
IF titulo <> NIL
        @ l-1,c clear to ll,cc
        //wvw_drawboxraised(,l,c,ll,cc,1)
        wvw_drawboxraised(,l-1,c,ll,cc)
        @ l,c to l,cc
        SETCOLOR('W+/R,W+/N,,,N/W+')                     && cor para os SAY
        //setcor(2)
        IF lado = NIL
                IF cor_tit # NIL
                        WVW_DrawLabel(,l-1,c,'   '+titulo,,,240,, 'times new roman',14,8,,,,,)
                ELSE
                        WVW_DrawLabel(,l-1,c,'   '+titulo,,,,, 'times new roman',14,8,,,,,)
                ENDIF
        ELSE
                IF cor_tit # NIL
                        WVW_DrawLabel(,l-1,c+2,'   '+titulo,,,240,, 'times new roman',16,8,,,,,)
                ELSE
                        WVW_DrawLabel(,l-1,c+2,'   '+titulo,,,,, 'times new roman',16,8,,,,,)
                ENDIF
        ENDIF
        setcor(1)
ELSE

        @ l,c clear to ll,cc
        //WVW_SetPen( PS_COSMETIC, 2, m_color[16] )
        //WVW_DrawOutline( ,l,c,ll,cc, AD_CLOCKWISE  , ,257 )
        WVW_DrawBoxRecessed(,l,c,ll,cc)
        //WVW_DrawBoxGroup(,l,c,ll,cc)
        //WVW_DrawEllipse( ,l,c,ll,cc)
        //WVW_DrawColorRect( ,l,c,ll,cc ,255)

        //WVW_DrawRoundRect(,l,c,ll,cc, , 15, 15)
        //@ l,c clear to ll,cc
ENDIF
IF t <> NIL
        DEVPOS(l+1,c+1);DEVOUT(t)
ENDIF
SET CURSOR ON
setcor(1)
RETURN NIL
************************** F I M ******************************
FUNCTION botao1(l,c,ll,cc,t,titulo,lado,cor_tit,mtamanho)
****************
WVW_SetPaintRefresh(0)
IF mtamanho = NIL
        mtamanho := 0
ENDIF
IF t <> NIL
        cc := c + 5 + LEN(t) + 0
ENDIF
wvw_drawboxraised(,l,c,ll,cc)
IF t <> NIL
        setcolor('w/b')
        @ l,c clear to ll,cc
        DEVPOS(l+1,c+2);DEVOUT(t)
ENDIF
setcor(1)
RETURN NIL
************************** F I M ******************************
FUNCTION botao_r(l,c,ll,cc,t,titulo,lado,cor_tit,mtamanho)
********************************************************
WVW_SetPaintRefresh(0)
IF mtamanho = NIL
        mtamanho := 0
ENDIF
WVW_SetPen( PS_COSMETIC, 1, m_color[t] )
WVW_DrawRoundRect(,l,c,ll,cc, , 10, 10)
RETURN NIL
************************** F I M ******************************
* VERIFICA O DIA DA SEMANA
**************************
FUNCTION datseman(dds)
**********************
LOCAL dsemana
IF DOW(dds) = 1
        dsemana = 'Domingo'
ELSEIF DOW(dds) = 2
        dsemana = 'Segunda-feira'
ELSEIF DOW(dds) = 3
        dsemana = 'Terca-feira'
ELSEIF DOW(dds) = 4
        dsemana = 'Quarta-feira'
ELSEIF DOW(dds) = 5
        dsemana = 'Quinta-feira'
ELSEIF DOW(dds) = 6
        dsemana = 'Sexta-feira'
ELSEIF DOW(dds) = 7
        dsemana = 'Sabado'
ENDIF
RETURN dsemana
************************** F I M ******************************
* EXIBIR O PRG
*****************************
FUNCTION exibi_prg(vprg)
**********************
//WVW_SBSetText(mnum_principal,1,vprg)
//WVW_SBSetText(mn_sac0,0,vprg)
WVW_SBSetText(,0,vprg)
RETURN NIL
*****************************  F I M **************************************
FUNCTION CALCU()
****************
IF ! MYRUN2('c:\windows\system32\calc.exe')
	atencao('NAO FOI ENCONTRADA A CALCULADORA COM WINDOWS FAVOR ENTRAR EM CONTATO COM O GERENTE DOS COMPUTADORES....')
ENDIF
RETURN  NIL
************************** F I M ***************************************8
* mensagem dos GET'S
********************
FUNCTION men_get(men_li,men_ci,mensagem,mcol)
WVW_SBSetText(,1,'Mensagem: '+mensagem)
RETURN .T.
************************** F I M ***************************************8
* LIMPA mensagem dos GET'S
**************************
FUNCTION lim_get
****************
WVW_SBSetText(,1,' ')
RETURN .T.
******************************* F I M ********************************
* FUNCAO PROGRESSAO DE IMPRESSAO
********************************
FUNCTION prog_imp(no,mcampo)
*******************
LOCAL mno:=0
mno := VAL(SUBSTR(STRZERO((no/2),10,2),8,2))
IF mno = 0
        WVW_SBSetText(,1,'Mensagem:  Aguarde o Final da Impressao: /  + - No.Reg.:'+STRZERO(no,6)+' - '+IF(mcampo=NIL,'',mcampo))
ELSE
        WVW_SBSetText(,1,'Mensagem:  Aguarde o Final da Impressao: \  X - No.Reg.:'+STRZERO(no,6)+' - '+IF(mcampo=NIL,'',mcampo))
ENDIF
RETURN NIL
******************************* F I M ********************************
* MENU ALTERACAO FIRMAS
***********************
FUNCTION incl_firma(t)
**********************
LOCAL mprg:='INCL_FIRMA',;
      opcao,mrazao,mfantasia,mend,mbairro,mcidade,mcgc,mserie,mfone,;
      mdataini,mcgc_aux,mlogradouro,mcont_numer,mcont_compl,mcont_bairro,;
      mcont_cep,mcontato,mcont_tel,mnome_cab,;
      minsc,mcep,memail,mcont_cpf,mprodepe,mcodemp,minsc_mun,mcnae,mnumero,mcomplemento,;
      aret:={},m_emp:={}

IF ! ver_nivel(mprg,'INCLUSAO E ALTERACAO DA EMPRESA','1',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
mcomplemento := SPACE(10)
mrazao    := SPACE(35)
mfantasia := SPACE(35)
mnome_cab := SPACE(1)
mend      := SPACE(40)
mfone     := SPACE(30)
mbairro   := mcidade   := SPACE(20)
mcep      := SPACE(8)
mcgc      := mcgc_aux  := minsc := SPACE(14)
mserie    := mnumero := SPACE(6)
memail    := SPACE(50)
mdataini  := DATE()
mlogradouro := SPACE(34)
mcont_numer := SPACE(5)
mcont_compl := SPACE(22)
mcont_bairr := SPACE(15)
mcont_cep := SPACE(8)
mcontato  := SPACE(28)
mcont_tel := SPACE(12)
mcont_cpf := SPACE(11)
minsc_mun := SPACE(14)
mcnae     := SPACE(14)

mrazao    := m_set[1,129]
mfantasia := m_set[1,130]
mnome_cab := m_set[1,131]
mend      := m_set[1,132]
mbairro   := m_set[1,133]
mcidade   := m_set[1,134]
mcep      := m_set[1,135]
memail    := m_set[1,137]
muf       := m_set[1,19]

mlogradouro := m_set[1,139]
mcont_numer := m_set[1,140]
mcont_compl := m_set[1,141]
mcont_bairr := m_set[1,142]
mcont_cep := m_set[1,143]
mcontato  := m_set[1,144]
mcont_tel := m_set[1,145]
mcont_cpf := m_set[1,146]
mprodepe  := m_set[1,148]
mcodemp   := m_set[1,124]
IF EMPTY(m_set[1,123])
        mcgc      := mcgc_aux  := SPACE(14)
        mserie    := SPACE(6)
ELSE
        mcgc      := mcgc_aux  := SUBSTR(m_set[1,123],1,14)
        mserie    := SUBSTR(m_set[1,123],15,6)
ENDIF
minsc     := m_set[1,128]
mfone     := m_set[1,136]
mdataini  := m_set[1,138]
minsc_mun := m_set[1,156]
mcnae     := m_set[1,157]
mnumero   := m_set[1,160]
mcomplemento := m_set[1,161]
mcod_acess:= m_set[1,180]
op_tela(0,0,29,100,' CONFIGURACAO DO SISTEMA P/FIRMA')
WHILE .T.
        opcao = 'S'
        setcor(3)
        @ 17,0 TO 17,100
        @ 27,0 TO 27,100
        setcor(1)
        //DEVPOS(lci+1,cci+2);DEVOUT('Codigo da Empresa....:')
        DEVPOS(0,2);DEVOUT('Data de Inicio............:')
        DEVPOS(1,2);DEVOUT('Razao Social..............:')
        DEVPOS(2,2);DEVOUT('Nome Fantasia.............:')
        DEVPOS(3,2);DEVOUT('Cab.Doc.[F]antasia [R]azao:')
        DEVPOS(4,2);DEVOUT('CNPJ......................:')
        DEVPOS(5,2);DEVOUT('Inscricao.................:')
        DEVPOS(6,2);DEVOUT('Inscricao Municipal.......:')
        DEVPOS(7,2);DEVOUT('CNAE......................:')

        DEVPOS(8 ,2);DEVOUT('Endereco..................:')
        DEVPOS(9 ,2);DEVOUT('Numero....................:')
        DEVPOS(10,2);DEVOUT('Complemento...............:')
        DEVPOS(11,2);DEVOUT('Bairro....................:')
        DEVPOS(12,2);DEVOUT('Cidade ...................:')
        DEVPOS(13,2);DEVOUT('Estado....................:')
        DEVPOS(14,2);DEVOUT('CEP.......................:')
        DEVPOS(15,2);DEVOUT('Telefones e Fax ..........:')
        DEVPOS(16,2);DEVOUT('EMAIL.....................:')

        DEVPOS(18,2);DEVOUT('Nome p/contato............:')
        DEVPOS(19,2);DEVOUT('CPF.......................:')
        DEVPOS(20,2);DEVOUT('Logradouro................:')
        DEVPOS(21,2);DEVOUT('Numero....................:')
        DEVPOS(22,2);DEVOUT('Complemento...............:')
        DEVPOS(23,2);DEVOUT('Bairro....................:')
        DEVPOS(24,2);DEVOUT('CEP.......................:')
        DEVPOS(25,2);DEVOUT('Telefone..................:')
        DEVPOS(26,2);DEVOUT('Optante do PRODEPE........:')
        DEVPOS(28,2);DEVOUT('Codigo de acesso..........:')
        DEVPOS(29,2);DEVOUT('Serie.....................:')

        IF t = NIL
                IF cod_operado = '999'
                        DEVPOS(28,30);DEVOUT(mserie)
                ENDIF
        ENDIF
        //@ lci+1,cci+25 GET mcodemp PICT '999'
        @ 0,30 GET mdataini
        @ 1,30 GET mrazao PICT '@!' VALID IF(EMPTY(mrazao),.F.,.T.)
        @ 2,30 GET mfantasia PICT '@!' VALID IF(EMPTY(mfantasia),.F.,.T.)
        @ 3,30 GET mnome_cab PICT '@!' VALID mnome_cab $ 'F,R'
        @ 4,30 GET mcgc PICT '@@r 99.999.999/9999-99' VALID IF(VCGC(mcgc),.T.,.F.) WHEN cod_operado = '999'
        @ 5,30 GET minsc PICT '@!'

        @ 6,30 GET minsc_mun PICT '@!'
        @ 7,30 GET mcnae PICT '@!'

        @ 8,30 GET mend PICT '@!'
        @ 9,30 GET mnumero PICT '@!'
        @ 10,30 GET mcomplemento PICT '@!'
        @ 11,30 GET mbairro PICT '@!'
        @ 12,30 GET mcidade PICT '@!'
        @ 13,30 GET muf PICT '@!' VALID v_uf(muf)
        @ 14,30 GET mcep
        @ 15,30 GET mfone
        @ 16,30 GET memail

        @ 18,30 GET mcontato PICT '@!'
        @ 19,30 GET mcont_cpf PICT '99999999999'
        @ 20,30 GET mlogradouro PICT '@!'
        @ 21,30 GET mcont_numer PICT '@!'
        @ 22,30 GET mcont_compl PICT '@!'
        @ 23,30 GET mcont_bairr PICT '@!'
        @ 24,30 GET mcont_cep PICT '@!'
        @ 25,30 GET mcont_tel PICT '@!'
        @ 26,30 GET mprodepe PICT '@!' VALID mprodepe $ 'S,N'
        @ 28,30 GET mcod_acess WHEN cod_operado = '999'
        READ
        IF LASTKEY() = 27
                SET CURSOR ON
                EXIT
        ENDIF
        //mserie := '1'+SUBSTR(mcod_acess,3,1)+SUBSTR(mcod_acess,1,1)+SUBSTR(mcod_acess,4,1)+SUBSTR(mcod_acess,2,1)+SUBSTR(mcod_acess,5,1)
        mserie := '1'+SUBSTR(mcod_acess,4,1)+SUBSTR(mcod_acess,2,1)+SUBSTR(mcod_acess,5,1)+SUBSTR(mcod_acess,3,1)+SUBSTR(mcod_acess,1,1)
        DEVPOS(29,30);DEVOUT(mserie)
        /*
        IF mcgc <> mcgc_aux .OR. cod_operado = '999'
                IF ! EMPTY(mserie)
                        opcao := op_simnao('S','Deseja alterar o No.de Serie:')
                        IF LASTKEY() = 27 .OR. opcao = 'N'
                                EXIT
                        ELSE
                                mserie = ''
                                pegasenha(@mserie,28,30,setcor(2))
                                setcor(1)
                         ENDIF
                ELSE
                        mserie = ''
                        pegasenha(@mserie,28,30,setcor(2))
                ENDIF
        ENDIF
        */
        setcor(1)
        opcao := op_simnao('S','Confirma a Inclusao da Firma:')
        IF opcao = 'N'
                EXIT
        ENDIF
        m_set:={}
        sr_getconnection():exec("SELECT * FROM sacsetup",,.t.,@m_set)
        IF LEN(m_set) = 0
                sr_getconnection():exec('INSERT INTO sacsetup ('+;
                'codemp     ,'+;
                'razao      ,'+;
                'fantasia   ,'+;
                'nome_cab   ,'+;
                'end_firma  ,'+;
                'bairro     ,'+;
                'cidade     ,'+;
                'cep        ,'+;
                'fone       ,'+;
                'email      ,'+;
                'insc       ,'+;
                'dataini    ,'+;
                'serie      ,'+;
                'logradouro ,'+;
                'cont_numer ,'+;
                'cont_compl ,'+;
                'cont_bairr ,'+;
                'cep        ,'+;
                'contato    ,'+;
                'cont_tel   ,'+;
                'cont_cpf   ,'+;
                'prodepe    ,'+;
                'insc_mun   ,'+;
                'cnae       ,'+;
                'numero     ,'+;
                'complemento,'+;
                'cod_acess  ,'+;
                'SR_RECNO   ,'+;
                'SR_DELETED)'+;
                ' VALUES ('+;
                sr_cdbvalue(mcodemp                                              )+','+; //1
                sr_cdbvalue(mrazao                                               )+','+; //5
                sr_cdbvalue(mfantasia                                            )+','+; //6
                sr_cdbvalue(mnome_cab                                            )+','+; //7
                sr_cdbvalue(mend                                                 )+','+; //8
                sr_cdbvalue(mbairro                                              )+','+;//9
                sr_cdbvalue(mcidade                                              )+','+;//10
                sr_cdbvalue(mcep                                                 )+','+;//9
                sr_cdbvalue(mfone                                                )+','+;//9
                sr_cdbvalue(memail                                               )+','+;//9
                sr_cdbvalue(minsc                                                )+','+;//9
                sr_cdbvalue(mdataini                                             )+','+;//9 sr_cdbvalue(CRIPTO(ALLTRIM(mcgc),'*')+CRIPTO(ALLTRIM(mserie),'*'))+','+;//9
                sr_cdbvalue(ALLTRIM(mcgc)+ALLTRIM(mserie)                       )+','+;//9
                sr_cdbvalue( mlogradouro                                         )+','+;//9
                sr_cdbvalue( mcont_numer                                         )+','+;//9
                sr_cdbvalue( mcont_compl                                         )+','+;//9
                sr_cdbvalue( mcont_bairr                                         )+','+;//9
                sr_cdbvalue( mcont_cep                                           )+','+;//9
                sr_cdbvalue( mcontato                                            )+','+;//9
                sr_cdbvalue( mcont_tel                                           )+','+;//9
                sr_cdbvalue( mcont_cpf                                           )+','+;//9
                sr_cdbvalue( mprodepe                                            )+','+;//9
                sr_cdbvalue( minsc_mun                                           )+','+;//9
                sr_cdbvalue(mcnae                                                )+','+;//9
                sr_cdbvalue(mnumero                                              )+','+;//9
                sr_cdbvalue(mcomplemento                                         )+','+;//9
                sr_cdbvalue(mcod_acess                                           )+','+;//9
                sr_cdbvalue(' ')+')',,.f.)
                sr_getconnection():exec('COMMIT',,.f.)
        ELSE
                ccomm := "UPDATE sacsetup SET "
                ccomm := ccomm + " razao      = "+sr_cdbvalue(mrazao                                               )
                ccomm := ccomm + ",fantasia   = "+sr_cdbvalue(mfantasia                                            )
                ccomm := ccomm + ",nome_cab   = "+sr_cdbvalue(mnome_cab                                            )
                ccomm := ccomm + ",end_firma  = "+sr_cdbvalue(mend                                                 )
                ccomm := ccomm + ",bairro     = "+sr_cdbvalue(mbairro                                              )
                ccomm := ccomm + ",cidade     = "+sr_cdbvalue(mcidade                                              )
                ccomm := ccomm + ",cep        = "+sr_cdbvalue(mcep                                                 )
                ccomm := ccomm + ",fone       = "+sr_cdbvalue(mfone                                                )
                ccomm := ccomm + ",email      = "+sr_cdbvalue(memail                                               )
                ccomm := ccomm + ",insc       = "+sr_cdbvalue(minsc                                                )
                ccomm := ccomm + ",dataini    = "+sr_cdbvalue(mdataini                                             )
                ccomm := ccomm + ",logradouro = "+sr_cdbvalue(mlogradouro                                         )
                ccomm := ccomm + ",cont_numer = "+sr_cdbvalue(mcont_numer                                         )
                ccomm := ccomm + ",cont_compl = "+sr_cdbvalue(mcont_compl                                         )
                ccomm := ccomm + ",cont_bairr = "+sr_cdbvalue(mcont_bairr                                         )
                ccomm := ccomm + ",cont_cep   = "+sr_cdbvalue(mcont_cep                                           )
                ccomm := ccomm + ",contato    = "+sr_cdbvalue(mcontato                                            )
                ccomm := ccomm + ",cont_tel   = "+sr_cdbvalue(mcont_tel                                           )
                ccomm := ccomm + ",cont_cpf   = "+sr_cdbvalue(mcont_cpf                                           )
                ccomm := ccomm + ",prodepe    = "+sr_cdbvalue(mprodepe                                            )
                ccomm := ccomm + ",insc_mun   = "+sr_cdbvalue(minsc_mun                                           )
                ccomm := ccomm + ",cnae       = "+sr_cdbvalue(mcnae                                                )
                ccomm := ccomm + ",numero     = "+sr_cdbvalue(mnumero                                              )
                ccomm := ccomm + ",complemento= "+sr_cdbvalue(mcomplemento                                         )
                ccomm := ccomm + ",cod_acess  = "+sr_cdbvalue(mcod_acess                                           ) //ccomm := ccomm + ",serie      = "+sr_cdbvalue(CRIPTO(ALLTRIM(mcgc),'*')+CRIPTO(ALLTRIM(mserie),'*'))
                ccomm := ccomm + ",serie      = "+sr_cdbvalue(ALLTRIM(mcgc)+ALLTRIM(mserie))
                //ccomm := ccomm + " WHERE sr_recno = 1"
                sr_getconnection():exec(ccomm,,.f.)
                sr_getconnection():exec('COMMIT',,.f.)
        ENDIF
        // Atualizando a matriz m_set (SACSETUP->Configuracoes)
        m_set:={}
        sr_getconnection():exec("SELECT * FROM sacsetup",,.t.,@m_set)
        m_set[1,123] := DCRIPTO(SUBSTR(m_set[1,123],1,14))+DCRIPTO(SUBSTR(m_set[1,123],15,6))

        m_emp:={}
        sr_getconnection():exec("SELECT * FROM sacemp",,.t.,@m_emp)
        IF LEN(m_emp) = 0
                sr_getconnection():exec('INSERT INTO sacemp ('+;
                'codemp   ,'+;
                'razao    ,'+;
                'fantasia ,'+;
                'nome_cab ,'+;
                'endereco ,'+;
                'bairro   ,'+;
                'cidade   ,'+;
                'cep      ,'+;
                'fone     ,'+;
                'email    ,'+;
                'insc     ,'+;
                'dataini  ,'+;
                'cnpj     ,'+;
                'SR_DELETED)'+;
                ' VALUES ('+;
                sr_cdbvalue(mcodemp      )+','+; //1
                sr_cdbvalue(mrazao       )+','+; //5
                sr_cdbvalue(mfantasia    )+','+; //6
                sr_cdbvalue(mnome_cab    )+','+; //7
                sr_cdbvalue(mend         )+','+; //8
                sr_cdbvalue(mbairro      )+','+;//9
                sr_cdbvalue(mcidade      )+','+;//10
                sr_cdbvalue(mcep         )+','+;//9
                sr_cdbvalue(mfone        )+','+;//9
                sr_cdbvalue(memail       )+','+;//9
                sr_cdbvalue(minsc        )+','+;//9
                sr_cdbvalue(mdataini     )+','+;//9
                sr_cdbvalue(ALLTRIM(mcgc))+','+;//9
                sr_cdbvalue(' ')+')',,.f.)
                sr_getconnection():exec('COMMIT',,.f.)
        ELSE
                ccomm := "UPDATE sacemp SET "
                ccomm := ccomm + " codemp   = "+sr_cdbvalue(mcodemp       )
                ccomm := ccomm + ",razao    = "+sr_cdbvalue(mrazao        )
                ccomm := ccomm + ",fantasia = "+sr_cdbvalue(mfantasia     )
                ccomm := ccomm + ",nome_cab = "+sr_cdbvalue(mnome_cab     )
                ccomm := ccomm + ",endereco = "+sr_cdbvalue(mend          )
                ccomm := ccomm + ",bairro   = "+sr_cdbvalue(mbairro       )
                ccomm := ccomm + ",cidade   = "+sr_cdbvalue(mcidade       )
                ccomm := ccomm + ",cep      = "+sr_cdbvalue(mcep          )
                ccomm := ccomm + ",fone     = "+sr_cdbvalue(mfone         )
                ccomm := ccomm + ",email    = "+sr_cdbvalue(memail        )
                ccomm := ccomm + ",insc     = "+sr_cdbvalue(minsc         )
                ccomm := ccomm + ",dataini  = "+sr_cdbvalue(mdataini      )
                ccomm := ccomm + ",cnpj     = "+sr_cdbvalue(ALLTRIM(mcgc) )
                ccomm := ccomm + " WHERE codemp = "+sr_cdbvalue(mcodemp)
                sr_getconnection():exec(ccomm,,.f.)
                sr_getconnection():exec('COMMIT',,.f.)
        ENDIF
        EXIT
ENDDO
wvw_lclosewindow()
RETURN .T.
************************ F I M ***********************************************
/******************************************************************************
* Essa funcao foi feita co base nos dados fornecidos pelo site do Sintegra    *
* http://www.sintegra.gov.br/insc_est.html, calculos e teste foram feitos     *
* apenas com as IEs encontradas como exemplo em 24/04/2003.                   *
* Apesar de alguns estados terem os mesmos peso para a multiplicacao, e o     *
* mesmo roteiro critico achei melhor gerar um codigo especifico para cada     *
* estado, prevendo um possivel mudanca no roteiro                             *
* No caso de alguem fazer alguma melhoria, ou correcao nesta funcao peco por  *
* favor envie uma copia cada um desses e-mails:                               *
* <brock_carlos@yahoo.com.br>, <cal@materiavirtual.com.br>                    *
******************************************************************************/
/*
Function TestaIe( cIe1, cUF )
******************************
Local nI, nX, cTemp := "", nT2, nMod := 11
local cIe2 := "", nSoma := 0, cProd := "", aUF
Local nD1, nD2
Local aP1, aP2, nPt,mopc:=' ',nt1
Private nACt, nALt, nAMt, nAPt, nBAt, nCEt, nDFt, nESt, nGOt
Private nMAt, nMGt, nMSt, nMTt, nPAt, nPBt, nPEt, nPIt, nPRt
Private nROt, nRRt, nRSt, nSEt, nSCt, nSPt, nTOt, nRJt, nRNt
Private aAC1, aAL1, aAM1, aAP1, aBA1, aCE1, aDF1, aES1, aGO1
Private aMA1, aMG1, aMS1, aMT1, aPA1, aPB1, aPI1, aPE1, aPR1
Private aRJ1, aRN1, aRO1, aRR1, aRS1, aSE1, aSC1, aSP1, aTO1
aUf:= { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS",;
        "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS",  "SC",;
        "SE", "SP","TO", }
cUf := Upper( cUf )
IF cie1 = 'ISENTO' .OR. EMPTY(cie1)
        RETURN .T.
ENDIF
If AScan( aUf, {|nI| cUf == nI} ) == 0
        IF aut_sen('O INSCRICAO ESTADUAL nao confere senha de autorizacao:','LIB_INSC')
                IF LASTKEY() = 27
                        RETURN .F.
                ENDIF
                RETURN .T.
        ENDIF
        Return( .F. )
ENDIF
// Tamanho da IE
nACt := 13; nALt := 09; nAMt := 09; nAPt := 09; nBAt := 08; nCEt := 09
nDFt := 13; nESt := 09; nGOt := 09; nMAt := 09; nMGt := 13; nMSt := 09
nMTt := 11; nPAt := 09; nPBt := 09; nPEt := 14; nPIt := 09; nPRt := 10
nRJt := 08; nRNt := 09; nROt := 09; nRRt := 09; nRSt := 10; nSEt := 09
nSCt := 09; nSPt := 12; nTOt := 11
// Pesos da multiplicao para IE
aAC1 := { { 04, 03, 02, 09, 08, 07, 06, 05, 04, 03, 02 },;
          { 05, 04, 03, 02, 09, 08, 07, 06, 05, 04, 03, 02 } }
aAL1 := { { 02, 03, 04, 05, 06, 07, 08, 09 }, }
aAM1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aAP1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aBA1 := { { 07, 06, 05, 04, 03, 02}, { 08, 07, 06, 05, 04, 03, 02 } }
aCE1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aDF1 := { { 04, 03, 02, 09, 08, 07, 06, 05, 04, 03, 02 },;
          { 05, 04, 03, 02, 09, 08, 07, 06, 05, 04, 03, 02 } }
aES1 := { { 09, 09, 09, 09, 09, 09, 09, 09, 09 }, }
aGO1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aMA1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aMG1 := { { 01, 02, 01, 02, 01, 02, 01, 02, 01, 02, 01, 02 },;
          { 03, 02, 11, 10, 09, 08, 07, 06, 05, 04, 03, 02 } }
aMS1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aMT1 := { { 03, 02, 09, 08, 07, 06, 05, 04, 03, 02 }, }
aPA1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aPB1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aPI1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aPE1 := { { 05, 04, 03, 02, 01, 09, 08, 07, 06, 05, 04, 03, 02 }, }
aPR1 := { { 03, 02, 07, 06, 05, 04, 03, 02 },;
          { 04, 03, 02, 07, 06, 05, 04, 03, 02 } }
aRJ1 := { { 02, 07, 06, 05, 04, 03, 02 }, {  } }
aRN1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aRO1 := { { 06, 05, 04, 03, 02 }, }
aRR1 := { { 01, 02, 03, 04, 05, 06, 07, 08 }, }
aRS1 := { { 02, 09, 08, 07, 06, 05, 04, 03, 02 }, {  } }
aSE1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aSC1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }
aSP1 := { { 01, 03, 04, 05, 06, 07, 08, 10 },;
          { 03, 02, 10, 09, 08, 07, 06, 05, 04, 03, 02 } }
aTO1 := { { 09, 08, 07, 06, 05, 04, 03, 02 }, }

aP1 := &("a"+cUF+"1")[1]
aP2 := &("a"+cUF+"1")[2]
nPt := &("n"+cUF+"t")
For nI := 1 To Len(cIe1)
        cTemp += If( SubStr( cIe1, nI, 1 ) $ "0123456789", SubStr( cIe1, nI, 1 ), "" )
Next
cIe1  := cTemp
If Len( cIE1 ) <> nPt
        IF aut_sen('O INSCRICAO ESTADUAL nao confere senha de autorizacao:','LIB_INSC')
                IF LASTKEY() = 27
                        RETURN .F.
                ENDIF
                RETURN .T.
        ENDIF
        Return .F.
ENDIF
// A partir de alguns pontos j? da pra fazer a validacao das IEs, mas sao + 3
// linhas de codigo q quer queira, quer nao, vao gerar mais simblolos dentro do
// obj, entao achei melhor terminar o calculo

Do Case
   Case cUF == "AC"
        cIe2 := SubStr( cIe1, 1, 11 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1 := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Ltrim( Str( Int( nD1 ) ) )
        nSoma := 0
        AEval( aP2, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD2 := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Ltrim( Str( Int( nD2 ) ) )
   Case cUF == "AL"
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := Mod( nSoma, nMod )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
   Case cUF == "AP"
        Do Case
           Case cIe1 >= "03000001" .and. cIe1 <= "03017000"
                nSoma := 5; nT2 := 0
           Case cIe1 >= "03017001" .and. cIe1 <= "03019022"
                nSoma := 9; nT1 := 1
           Case cIe1 >= "03019023"
                nSoma := 0; nT2 := 0
        EndCase
        If Substr(cIe1, 1, 2) <> "03"
           Return(.F.)
        ENDIF
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := nMod - Mod( nSoma, nMod )
        nD1  := If( nD1 == 10, 0, nD1)
        nD1  := If( nD1 == nMod, nT2, nD1)
        cIe2 += AllTrim( Str( Int( nD1 ) ) )
   Case cUF == "AM"
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1 := If( nSoma < nMod, nMod - nSoma,;
                  If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) ) )
        cIe2 += AllTrim( Str( Int( nD1 ) ) )
   Case cUF == "BA" // tem q ser baiano pra ser do contra, eles calculan o 2 dig prim, e usam pro 1 dig
        nMod := If( SubStr( cIe1, 1, 1 ) $ "0123458", 10, 11 )
        cIe2 := SubStr( cIe1, 1, 6 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD2 := If(nMod == 10, nMod - Mod( nSoma, nMod ),;
                  If( nMod - Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) ) )
        cIe2 += AllTrim( Str( Int( nD2 ) ) )
        nSoma := 0
        AEval( aP2, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1 := If(nMod == 10, nMod - Mod( nSoma, nMod ),;
                  If( nMod - Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) ) )
        cIe2 := SubStr( cIe1, 1, 6 ) + AllTrim( Str( Int( nD1 ) ) ) + AllTrim( Str( Int( nD2 ) ) )
   Case cUF == "DF"
        cIe2 := SubStr( cIe1, 1, 11 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := nMod - Mod( nSoma, nMod )
        nD1  := If( nD1 >= 10, 0, nD1 )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
        nSoma := 0
        AEval( aP2, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD2  := nMod - Mod( nSoma, nMod )
        nD2  := If( nD2 >= 10, 0, nD2 )
        cIe2 += Right( Str( Int( nD2 ) ), 1 )
   Case cUF == "CE"
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1 := nMod - Mod( nSoma, nMod )
        nD1 := If( nD1 >= 10, 0, nD1 )
        cIe2 += AllTrim( Str( Int( nD1 ) ) )
   Case cUF == "ES"
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
   Case cUF == "GO"  // Essa foi a mais anormal de todas
        nD2 := Val( Right( cIe1, 1 ) )
        cIe2 := SubStr( cIe1, 1, 2 )
        If cIE2 == "10" .OR. cIE2 == "11" .OR. cIE2 == "15"
           cIe2 := SubStr( cIe1, 1, 8 )
           If cIe1 == "110944020" .OR. cIe1 == "110944021"
              cIe2 := cIe1
            Else
              AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
              Do Case
                 Case Mod( nSoma, nMod ) == 0
                      nD1 := 0
                 Case Mod( nSoma, nMod ) == 1 .AND. cIE2 >= "10103105" .AND. cIE2 <= "10119997"
                      nD1 := 1
                 Case Mod( nSoma, nMod ) == 1 .AND. cIE2 < "10103105" .AND. cIE2 > "10119997"
                      nD1 := 0
                 Case Mod( nSoma, nMod ) > 1
                      nD1 := nMod - Mod( nSoma, nMod )
              EndCase
              cIe2 += Right( Str( Int( nD1 ) ), 1 )
           ENDIF
        ENDIF
   Case cUF == "MA"
        If Left( cIe1, 2 ) == "12"
           cIe2 := SubStr( cIe1, 1, 8 )
           AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
           nD1 := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
           cIe2 += AllTrim( Str( Int( nD1 ) ) )
        ENDIF
   Case cUF == "MG"
        cIe2 := SubStr( cIe1, 1, 3 ) + "0" + Substr( cIe1, 4, 8 ) //0 inutil, 0*2 = 0, pq? 4o. peso.
        AEval( aP1, { |nI, nX| cProd += LTrim( Str( Int( Val( SubStr( cIe2, nX, 1) ) * nI ) ) ) } )
        For nI := 1 to Len( cProd )
            nSoma += Val( SubStr( cProd, nI, 1 ) )
        Next
        cProd := StrZero( nSoma, 3 )
        nD1   := ( Val( SubStr( CProd, 2, 1 ) + "0" ) + 10 )
        nD1   -= nSoma
        cIe2  := SubStr( cIe1, 1, 11 ) + Right( Str( Int( nD1 ) ), 1 )
        nSoma := 0
        AEval( aP2, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD2  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Right( Str( Int( nD2 ) ), 1 )
   Case cUF == "MS"
        cIe2 := SubStr( cIe1, 1, 08 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1 := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) ) //isso ? a mesma coisa do site
        cIe2 += LTrim( Str( Int( nD1 ) ) )
   Case cUF == "MT"
        cIe2 := SubStr( cIe1, 1, 10 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1 := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += LTrim( Str( Int( nD1 ) ) )
   Case cUF == "PA"
        If Left(cIe1, 2) == "15"
           cIe2 := SubStr( cIe1, 1, 8 )
           AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
           nD1 := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
           cIe2 := SubStr( cIe1, 1, 8) + AllTrim( Str( Int( nD1 ) ) )
        ENDIF
   Case cUF == "PB"
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
   Case cUF == "PE"
        cIe2 := SubStr( cIe1, 1, 13 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
   Case cUF == "PI"
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += AllTrim( Str( Int( nD1 ) ) )
   Case cUF == "PR"
        cIE2 := SubStr( cIe1, 1, Len( cIe1 ) - 2 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1   := nMod - Mod( nSoma, nMod )
        nD1   := If( nD1 == 10, 0, nD1 )
        cIe2  += AllTrim( Str( Int( nD1 ) ) )
        nSoma := 0
        AEval( aP2,{ |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD2  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
   Case cUF == "RJ"
        cIe2 := SubStr( cIe1, 1, 7 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
   Case cUF == "RN"
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
   Case cUF == "RO"
        cIe2 := SubStr( cIe1, 4, 5 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1 := If( Mod( nSoma, nMod )>= 10, 10, 11 ) - Mod( nSoma, nMod )
        cIe2 := SubStr( cIe1, 1, 8) + AllTrim( Str( Int( nD1 ) ) )
   Case cUF == "RR"
        If Substr( cIe1, 1 , 2 ) == "24"
           nMod := 9
           cIe2 := SubStr( cIe1, 1, 8 )
           AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
           nD1  := Mod( nSoma, nMod )
           cIe2 += Right( Str( Int( nD1 ) ), 1 )
        ENDIF
   Case cUF == "RS"
        cIe2 := SubStr( cIe1, 1, 9 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
   Case cUF == "SC"
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
   Case cUF == "SE"
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 += Right( Str( Int( nD1 ) ), 1 )
   Case cUF == "SP"
        cIe2 := SubStr( cIe1, 1, 8 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := Mod( nSoma, nMod )
        cIe2 += Right( Str( Int( nD1 ) ), 1 ) + SubStr( cIe1, 10, 2 )
        nSoma := 0
        AEval( aP2, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD2 := If( Mod( nSoma, nMod )>= 10, 10, 11 ) - Mod( nSoma, nMod )
        cIe2 += Right( Str( Int( nD2 ) ), 1 )
   Case cUF == "TO"
*        altd()
        cIe2 := SubStr( cIe1, 1, 2 ) + SubStr( cIe1, 5, 6 )
        AEval( aP1, { |nI, nX| nSoma += Val( SubStr( cIe2, nX, 1) ) * nI } )
        nD1  := If( Mod( nSoma, nMod ) <= 1, 0, nMod - Mod( nSoma, nMod ) )
        cIe2 := SubStr( cIe1, 1, 10 ) + Right( Str( Int( nD1 ) ), 1 )
   Otherwise
        IF aut_sen('O INSCRICAO ESTADUAL nao confere senha de autorizacao:','LIB_AMB')
                IF LASTKEY() = 27
                        RETURN .F.
                ENDIF
                RETURN .T.
        ENDIF
        Return .F.
EndCase
IF cie1 <> cie2
        IF aut_sen('O INSCRICAO ESTADUAL nao confere senha de autorizacao:','LIB_INSC')
                IF LASTKEY() = 27
                        RETURN .F.
                ENDIF
                RETURN .T.
        ENDIF
        RETURN .F.
ENDIF
Return( cIe1 == cIe2 )
*/
***************************   F I M   *******************************8
* FUNCAO P/CONSULTAR, INCLUIR, ALTERAR E EXCLUIR SENHAS
*********************************************************
FUNCTION sacsenha(mop)
**********************
LOCAL mprg:='SACSENHA',;
      f7tela,f7tela1,f7lci,f7cci,f7lba,f7cba,f7msele,f7morde,f7men,;
      oconsprod,ocolprod[13],f7i,f7nkey,f7opcao,tela1,opcao,mreg,li,ci,lb,cb,;
      mnome := SPACE(30),vsenha1:='',vsenha := '',vnivel1 := SPACE(1),vnivel2 := SPACE(1),;
      mcomissao := 0,mcom_praz := 0,mcom_oper := 0,mcota := 0,mdata_cad,msituacao,;
      mcod_ven,mult_alt,mexpira,vtipo,vtipo_sis,vsen_atual:='',mdoc_apagar:=' ',mestoq_min:=' ',mestoq_med:=0,;
      mcons_inso:={},memail:=SPACE(60),mdat_aniv:='',mver_pocket:=' ',;
      mendereco,mnumero,mcomplemento,mbairro,mcidade,muf,mcpf,mrg,mfone

MEMVAR mcod_vend

IF ! ver_nivel(mprg,'MENU DE SENHAS','15',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
setcor(1)
mcod_vend := f7lci := f7cci := 0
f7lba := 24
f7cba := 120
li := ci := 0
lb := 15
cb := 52

op_tela(05,0,29,120,memp_resa+SPACE(50)+" Cadastro de Operadores / Outros ",,'*')

f7msele := SELE()
f7morde := INDEXORD()
***********************************************
IF ! AbriArq('insopera','sen');RETURN NIL;ENDIF
SELE('sen');ORDSETFOCUS(2)
GO TOP
***********************************************
oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
ocolprod[7] := TBCOLUMNNEW('Conectado Term.',{||sen->terminal})
ocolprod[8] := TBCOLUMNNEW('Dt.Acess',{||DTOC(sen->data_acess)})
ocolprod[9] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
ocolprod[10] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
ocolprod[11] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
ocolprod[12] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
ocolprod[13] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
f7i:=0
FOR f7i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[f7i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
WHILE .T.
        exibi_prg(mprg)
        IF mop = '*'
                mensagem('<P>esquisa <I>nclusao <ENTER>p/Alterar e Excluir <ESC>Retornar')
        ELSE
                mensagem('<PGUP> <PGDN> <P>esquisa <I>nclusao <ENTER> Conf. <ESC>Retornar')
        ENDIF
        f7nkey := 0
        WHILE f7nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                f7nkey := INKEY(0)
        ENDDO
        IF f7nkey == K_ESC
                mcod_vend := 0
                EXIT
        ELSEIF f7nkey = 73 .OR. f7nkey = 105
                IF ! ver_nivel(mprg,'INCLUSAO DE OPERADORES','1',nivel_acess,,'AMBIE')
                        wvw_lclosewindow()
                        RETURN NIL
                ENDIF
                op_tela(10,10,41,95,' Inclusao ',,'*')
                WHILE .T.
                        mcons_inso := {}
                	sr_getconnection():exec("SELECT * FROM insopera WHERE NOT scod_op = '999' AND NOT scod_op = '111' ORDER BY scod_op",,.t.,@mcons_inso)
                        IF LEN(mcons_inso) = 0
                                mcod_vend = 1
                        ELSE
                                mcod_vend = VAL(mcons_inso[LEN(mcons_inso),1]) + 1
                        ENDIF
                        mnome = SPACE(30)
                        vsenha = ''
                        vnivel1 := vnivel2 := vtipo := vtipo_sis := SPACE(1)
                        mcomissao := mcom_praz := mcom_oper := mcota := mexpira := mestoq_med:=0
                        opcao = 'S'
			mdoc_apagar := mestoq_min := mdat_aniv:=mver_pocket:=' '
                        mendereco := SPACE(40)
                        mnumero := SPACE(6)
                        mcomplemento := SPACE(6)
                        mbairro := SPACE(20)
                        mcidade := SPACE(25)
                        muf  := SPACE(2)
                        mcpf := SPACE(11)
                        mrg := SPACE(15)
                        mfone := SPACE(10)
                        setcor(3)
                        @ li+5,ci TO li+5,120
                        janela(li+5,ci,' Comissao do Vendedor ','*','*')
                        @ li+7,ci TO li+7,120
                        janela(li+7,ci+1,' Comissao do Operador ','*','*')
                        @ li+9,ci TO li+9,120
                        setcor(1)
                        mensagem('Preencha os Campos - <ESC> p/Retornar')
                        DEVPOS(li+1,ci+2);DEVOUT('Cod.Operador..:')
                        DEVPOS(li+2,ci+2);DEVOUT('Nome..........:')
                        DEVPOS(li+3,ci+2);DEVOUT('Tipo..........:')
                        DEVPOS(li+3,ci+21);DEVOUT('Modulo:')
                        DEVPOS(li+4,ci+2);DEVOUT('Nivel.........:   e  ')
                        DEVPOS(li+6,ci+2);DEVOUT('Comissao (%)..:')
                        DEVPOS(li+6,ci+24);DEVOUT('Comissao Aprazo (%):')
                        DEVPOS(li+8,ci+2);DEVOUT('Comissao (%)..:')
                        DEVPOS(li+10,ci+2);DEVOUT('Cota R$.......:')
                        DEVPOS(li+11,ci+2);DEVOUT('Data..........:')
                        DEVPOS(li+12,ci+2);DEVOUT('SENHA.........:')
                        DEVPOS(li+13,ci+2);DEVOUT('Confirma SENHA:')
                        DEVPOS(li+14,ci+2);DEVOUT('Qtd.dias Expira Senha..........:')
                        DEVPOS(li+15,ci+2);DEVOUT('Alerta Documento Apagar........:')
                        DEVPOS(li+16,ci+2);DEVOUT('Alerta Estoque Abaixo do Minimo:')
                        DEVPOS(li+17,ci+2);DEVOUT('Alerta Estoque Media por Dias..:')
                        DEVPOS(li+18,ci+2);DEVOUT('Alerta Clientes Aniversarios...:')
                        DEVPOS(li+19,ci+2);DEVOUT('Verificar Pedido APP......[S/N]:')
                        DEVPOS(li+20,ci+2);DEVOUT('Digite o Email.................:')
                        DEVPOS(li+21,ci+2);DEVOUT('Endereco.......................:')
                        DEVPOS(li+22,ci+2);DEVOUT('Numero.........................:')
                        DEVPOS(li+23,ci+2);DEVOUT('Complemento....................:')
                        DEVPOS(li+24,ci+2);DEVOUT('Bairro.........................:')
                        DEVPOS(li+25,ci+2);DEVOUT('Cidade.........................:')
                        DEVPOS(li+26,ci+2);DEVOUT('Estado.........................:')
                        DEVPOS(li+27,ci+2);DEVOUT('Fone...........................:')
                        DEVPOS(li+28,ci+2);DEVOUT('CPF............................:')
                        DEVPOS(li+29,ci+2);DEVOUT('Carteira de Identidade.........:')

                        @ li+1,ci+18 GET mcod_vend PICT '999' VALID IF(EMPTY(mcod_vend),.F.,.T.)
                        READ
                        IF LASTKEY() = 27
                                EXIT
                        ENDIF
                        mcons_inso := {}
                	sr_getconnection():exec("SELECT * FROM insopera WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_vend,3)),,.t.,@mcons_inso)
                        IF LEN(mcons_inso) > 0
                                atencao('Codigo ja Existe no cadastro !!!')
                                LOOP
                        ENDIF
                        setcor(3)
                        mdata_cad = mdata_sis
                        DEVPOS(li+1,ci+18);DEVOUT(STRZERO(mcod_vend,3))
                        DEVPOS(li+10,ci+18);DEVOUT(mdata_cad)
                        setcor(1)
                        @ li+2,ci+18 GET mnome PICT '@!'
                        @ li+3,ci+18 GET vtipo PICT '@!' VALID vtipo $ 'O,V,G,A,B' .AND. lim_get() WHEN men_get(li+4,ci,'[O]perador - [V]endedor - [G]erente - [A]dministrador - [B]loqueado')
                        @ li+3,ci+28 GET vtipo_sis PICT '@!' VALID vtipo_sis $ 'S,V,C,M' .AND. lim_get() WHEN men_get(li+4,ci,'[S]iscom - [V]enda - [C]aixa - [M]Caixa/Venda')
                        @ li+4,ci+18 GET vnivel1 PICT '9'      //VALID vnivel $ '1,2,3,4,5,6,7,8,9,0'
                        @ li+4,ci+22 GET vnivel2 PICT '9'      //VALID vnivel $ '1,2,3,4,5,6,7,8,9,0'
                        @ li+6,ci+18 GET mcomissao PICT '99.99'
                        @ li+6,ci+45 GET mcom_praz PICT '99.99'
                        @ li+8,ci+18 GET mcom_oper PICT '99.99'
                        @ li+10,ci+18 GET mcota PICT '99,999,999.99'
                        READ
                        IF LASTKEY() = 27
                                LOOP
                        ENDIF
                        WHILE .T.
                                vsenha := vsenha1 := ''
                                mensagem('Digite sua Senha')
                                pegasenha(@vsenha,li+12,ci+18,setcor(2))
                                setcor(1)
                                IF LEN(vsenha) <= 1 .OR. EMPTY(vsenha)
                                        LOOP
                                ENDIF
                                IF vsenha = 'NAO'
                                        EXIT
                                ENDIF
                                mensagem('Digite Novamente sua Senha')
                                pegasenha(@vsenha1,li+13,ci+18,setcor(2))
                                setcor(1)
                                IF LEN(vsenha1) <= 1
                                        LOOP
                                ENDIF
                                IF vsenha1 = 'NAO'
                                        EXIT
                                ENDIF
				mdoc_apagar := mestoq_min := ' '

                                WVW_DrawBoxGet(,li+14,ci+25,3)
                                @ li+14,ci+35 GET mexpira PICT '999'
                                @ li+15,ci+35 GET mdoc_apagar PICT '@!' VALID mdoc_apagar $ ' ,X' .AND. lim_get() WHEN men_get(0,0,'Marque com um [X] ou deixe em branco')
                                @ li+16,ci+35 GET mestoq_min PICT '@!' VALID mestoq_min $ ' ,X'   .AND. lim_get() WHEN men_get(0,0,'Marque com um [X] ou deixe em branco')
                                @ li+17,ci+35 GET mestoq_med PICT '999'
                                @ li+18,ci+35 GET mdat_aniv PICT '@!' VALID mdat_aniv $ ' ,X' .AND. lim_get() WHEN men_get(0,0,'Marque com um [X] ou deixe em branco')
                                @ li+19,ci+35 GET mver_pocket PICT '@!' VALID mver_pocket $ 'S,N'
                                @ li+20,ci+35 GET memail PICT '@S50'
                                @ li+21,ci+35 GET mendereco PICT '@!'
                                @ li+22,ci+35 GET mnumero PICT '@!'
                                @ li+23,ci+35 GET mcomplemento PICT '@!'
                                @ li+24,ci+35 GET mbairro PICT '@!'
                                @ li+25,ci+35 GET mcidade PICT '@!'
                                @ li+26,ci+35 GET muf PICT '@!'
                                @ li+27,ci+35 GET mfone PICT '@!'
                                @ li+28,ci+35 GET mcpf PICT '@!'
                                @ li+29,ci+35 GET mrg PICT '@!'
                                READ
                                IF vsenha == vsenha1
                                        opcao := op_simnao('S','Confirma a Inclusao do Operador:')
                                        IF opcao = 'N'
                                                EXIT
                                        ELSE
                                                sr_getconnection():exec('INSERT INTO insopera ('+;
                                                        'scod_op,'+;
                                                        'stipo,'+;
                                                        'stipo_sis,'+;
                                                        'snome,'+;
                                                        'ssenha,'+;
                                                        'sdata_cad ,'+;
                                                        'snivel ,'+;
                                                        'scomissao,'+;
                                                        'scom_oper,'+;
                                                        'scom_praz,'+;
                                                        'scota,'+;
                                                        'sult_e_c,'+;
                                                        'sexpira,'+;
                                                        'doc_apagar,'+;
                                                        'estoq_min,'+;
                                                        'estoq_med,'+;
                                                        'email,'+;
                                                        'dat_aniv,'+;
                                                        'ver_pocket,'+;
                                                        'endereco,'+;
                                                        'numero,'+;
                                                        'complemento,'+;
                                                        'bairro,'+;
                                                        'cidade,'+;
                                                        'uf,'+;
                                                        'fone,'+;
                                                        'cpf,'+;
                                                        'rg,'+;
                                                        'plug,'+;
                                                        'SR_DELETED )'+;
                                                        ' VALUES ('+;
                                                        sr_cdbvalue(STRZERO(mcod_vend,3))+','+; //1
                                                        sr_cdbvalue(vtipo)+','+; //2
                                                        sr_cdbvalue(vtipo_sis)+','+; //3
                                                        sr_cdbvalue(mnome)+','+; //4
                                                        sr_cdbvalue(CRIPTO(vsenha))+','+; //5
                                                        sr_cdbvalue(mdata_sis)+','+; //6
                                                        sr_cdbvalue(vnivel1+vnivel2)+','+; //7
                                                        sr_cdbvalue(mcomissao)+','+; //7
                                                        sr_cdbvalue(mcom_oper)+','+; //7
                                                        sr_cdbvalue(IF(EMPTY(mcom_praz),mcomissao,mcom_praz))+','+; //7
                                                        sr_cdbvalue(mcota)+','+; //7
                                                        sr_cdbvalue(mdata_sis)+','+; //7
                                                        sr_cdbvalue(mexpira)+','+; //7
                                                        sr_cdbvalue(mdoc_apagar)+','+; //7
                                                        sr_cdbvalue(mestoq_min)+','+; //7
                                                        sr_cdbvalue(mestoq_med)+','+; //7
                                                        sr_cdbvalue(memail)+','+; //7
                                                        sr_cdbvalue(mdat_aniv)+','+; //7
                                                        sr_cdbvalue(mver_pocket)+','+; //7
                                                        sr_cdbvalue(mendereco)+','+; //7
                                                        sr_cdbvalue(mnumero)+','+; //7
                                                        sr_cdbvalue(mcomplemento)+','+; //7
                                                        sr_cdbvalue(mbairro)+','+; //7
                                                        sr_cdbvalue(mcidade)+','+; //7
                                                        sr_cdbvalue(muf)+','+; //7
                                                        sr_cdbvalue(mfone)+','+; //7
                                                        sr_cdbvalue(mcpf)+','+; //7
                                                        sr_cdbvalue(mrg)+','+; //7
                                                        sr_cdbvalue(vsenha)+','+; //5
                                                        sr_cdbvalue(' ')+')',,.f.)
                                                        sr_getconnection():exec("COMMIT",,.f.)
                                                EXIT
                                        ENDIF
                                ELSE
                                        atencao('Senha Digitada Errada, Tente novamente !!!')
                                        LOOP
                                ENDIF
                        ENDDO
                        *************
                        sen->(DBCLOSEAREA())
                        IF ! AbriArq('insopera','sen');RETURN NIL;ENDIF
                        SELE('sen');ORDSETFOCUS(2)
                        GO TOP
                        *************
                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                        ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                        ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                        ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                        ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                        ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                        ocolprod[7] := TBCOLUMNNEW('Conectado Term.',{||sen->terminal})
                        ocolprod[8] := TBCOLUMNNEW('Dt.Acess',{||DTOC(sen->data_acess)})
                        ocolprod[9] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                        ocolprod[10] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                        ocolprod[11] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                        ocolprod[12] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                        ocolprod[13] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                        f7i:=0
                        FOR f7i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                        EXIT
                ENDDO
                wvw_lclosewindow()
        ELSEIF f7nkey == K_ENTER
                mreg := RECNO()
                mcod_ven := VAL(sen->scod_op)
                mcod_vend := VAL(sen->scod_op)
                IF mop = '*'
                        op_tela(10,10,49,95,' Alteracao ',,'*')
                        setcor(3)
                        @ li+5,ci TO li+5,120
                        janela(li+4,ci,' Comissao do Vendedor ','*','*')
                        @ li+7,ci TO li+7,120
                        janela(li+7,ci+1,' Comissao do Operador ','*','*')
                        @ li+9,ci TO li+9,120
                        setcor(1)
                        mensagem('Preencha os Campos - <ESC> p/Retornar')
                        DEVPOS(li+1,ci+2);DEVOUT('Cod.Operador..:')
                        DEVPOS(li+2,ci+2);DEVOUT('Nome..........:')
                        DEVPOS(li+3,ci+2);DEVOUT('Tipo..........:')
                        DEVPOS(li+3,ci+21);DEVOUT('Modulo:')
                        DEVPOS(li+4,ci+2);DEVOUT('Nivel.........:   e  ')
                        DEVPOS(li+6,ci+2);DEVOUT('Comissao (%)..:')
                        DEVPOS(li+6,ci+24);DEVOUT('Comissao Aprazo (%):')
                        DEVPOS(li+8,ci+2);DEVOUT('Comissao (%)..:')
                        DEVPOS(li+10,ci+2);DEVOUT('Cota R$.......:')
                        DEVPOS(li+11,ci+2);DEVOUT('Data..........:')
                        DEVPOS(li+12,ci+2);DEVOUT('SENHA ATUAL...:')
                        DEVPOS(li+13,ci+2);DEVOUT('SENHA.........:')
                        DEVPOS(li+14,ci+2);DEVOUT('Confirma SENHA:')
                        DEVPOS(li+15,ci+2);DEVOUT('Quantidade de dias Expira Senha:')
		        DEVPOS(li+16,ci+2);DEVOUT('Alerta Documento Apagar........:')
                	DEVPOS(li+17,ci+2);DEVOUT('Alerta Estoque Abaixo do Minimo:')
                        DEVPOS(li+18,ci+2);DEVOUT('Alerta Estoque Media por Dias..:')
                        DEVPOS(li+19,ci+2);DEVOUT('Alerta Clientes Aniversarios...:')
                        DEVPOS(li+20,ci+2);DEVOUT('Verificar Pedido APP......[S/N]:')
                        DEVPOS(li+21,ci+2);DEVOUT('Digite o Email.................:')
                        DEVPOS(li+22,ci+2);DEVOUT('Endereco.......................:')
                        DEVPOS(li+23,ci+2);DEVOUT('Numero.........................:')
                        DEVPOS(li+24,ci+2);DEVOUT('Complemento....................:')
                        DEVPOS(li+25,ci+2);DEVOUT('Bairro.........................:')
                        DEVPOS(li+26,ci+2);DEVOUT('Cidade.........................:')
                        DEVPOS(li+27,ci+2);DEVOUT('Estado.........................:')
                        DEVPOS(li+28,ci+2);DEVOUT('Fone...........................:')
                        DEVPOS(li+29,ci+2);DEVOUT('CPF............................:')
                        DEVPOS(li+30,ci+2);DEVOUT('Carteira de Identidade.........:')
                        @ li+31,ci TO li+31,120
                        DEVPOS(li+32,ci+2);DEVOUT('Conectador no Terminal.........:')
                        DEVPOS(li+33,ci+2);DEVOUT('Conectador no Dia..............:')
                        DEVPOS(li+34,ci+2);DEVOUT('Conectador no Horas............:')

                        setcor(3)
                        DEVPOS(li+1,ci+18);DEVOUT(sen->scod_op)
                        DEVPOS(li+2,ci+18);DEVOUT(sen->snome)
                        DEVPOS(li+3,ci+18);DEVOUT(sen->stipo)
                        DEVPOS(li+3,ci+28);DEVOUT(sen->stipo_sis)
                        DEVPOS(li+4,ci+18);DEVOUT(SUBSTR(sen->snivel,1,1))
                        DEVPOS(li+4,ci+22);DEVOUT(SUBSTR(sen->snivel,2,1))
                        DEVPOS(li+6,ci+18);DEVOUTPICT(sen->scomissao,'99.99')
                        DEVPOS(li+6,ci+45);DEVOUTPICT(sen->scom_praz,'99.99')
                        DEVPOS(li+8,ci+18);DEVOUTPICT(sen->scom_oper,'99.99')
                        DEVPOS(li+10,ci+18);DEVOUTPICT(sen->scota,'99,999,999.99')
                        DEVPOS(li+11,ci+18);DEVOUT(sen->sdata_cad )
                        DEVPOS(li+15,ci+35);DEVOUT(sen->sexpira)
                        DEVPOS(li+19,ci+35);DEVOUT(sen->dat_aniv)
                        DEVPOS(li+20,ci+35);DEVOUT(sen->ver_pocket)
                        DEVPOS(li+21,ci+35);DEVOUT(SUBSTR(sen->email,1,50))
                        DEVPOS(li+22,ci+35);DEVOUT(sen->endereco)
                        DEVPOS(li+23,ci+35);DEVOUT(sen->numero)
                        DEVPOS(li+24,ci+35);DEVOUT(sen->complemento)
                        DEVPOS(li+25,ci+35);DEVOUT(sen->bairro)
                        DEVPOS(li+26,ci+35);DEVOUT(sen->cidade)
                        DEVPOS(li+27,ci+35);DEVOUT(sen->uf)
                        DEVPOS(li+28,ci+35);DEVOUT(sen->fone)
                        DEVPOS(li+29,ci+35);DEVOUT(sen->cpf)
                        DEVPOS(li+30,ci+35);DEVOUT(sen->rg)
                        DEVPOS(li+32,ci+35);DEVOUT(sen->terminal)
                        DEVPOS(li+33,ci+35);DEVOUT(sen->data_acess)
                        DEVPOS(li+34,ci+35);DEVOUT(sen->hora_acess)
                        setcor(1)
                        botao1(li+36,ci+2,li+38,ci+12)
                        botao1(li+36,ci+15,li+38,ci+25)
                        botao1(li+36,ci+28,li+38,ci+38)
                        @ li+37,ci+4  PROMPT 'Alterar'
                        @ li+37,ci+17 PROMPT 'Excluir'
                        @ li+37,ci+30 PROMPT 'Liberar'
                        SET INTEN ON
                        MENU TO f7opcao

                        IF LASTKEY() = 27
                                wvw_lclosewindow()
                                LOOP
                        ELSEIF f7opcao = 1
                                IF ! ver_nivel(mprg,'ALTERACAO DE OPERADORES','1',nivel_acess,,'AMBIE')
                                        EXIT
                                ENDIF
                                IF cod_operado <> '999' .AND. sen->scod_op = '999'
                                        atencao('Nao e possivel alterar este OPERADOR')
                                        wvw_lclosewindow()
                                        LOOP
                                ENDIF
                                CLEAR GETS
                                WHILE .T.
                                        mnome = SPACE(30)
                                        vnivel1 := vnivel2 := vtipo := SPACE(1)
                                        opcao = SPACE(1)
                                        mcomissao := mcom_praz := mcom_oper := ;
                                        mcota := 0
                                        vsenha := vsenha1 := ''
                                        mensagem('Digite o Codigo do Operador a ser Alterado - <ESC> p/Abandonar')

                                        vsenha := ''
                                        mnome := sen->snome
                                        vtipo   := sen->stipo
                                        vtipo_sis   := sen->stipo_sis
                                        vnivel1 := SUBSTR(sen->snivel,1,1)
                                        vnivel2 := SUBSTR(sen->snivel,2,1)
                                        mcomissao := sen->scomissao
                                        mcom_praz := sen->scom_praz
                                        mcom_oper := sen->scom_oper
                                        mcota := sen->scota
                                        msituacao := sen->sh_i_c
                                        mexpira   := sen->sexpira
					mdoc_apagar := sen->doc_apagar
					mestoq_min := sen->estoq_min
					mestoq_med := sen->estoq_med
					memail := sen->email
					mdat_aniv := sen->dat_aniv
					mendereco    := sen->endereco
					mnumero      := sen->numero
					mcomplemento:= sen->complemento
					mbairro      := sen->bairro
					mcidade      := sen->cidade
					muf          := sen->uf
					mfone        := sen->fone
					mcpf         := sen->cpf
					mrg          := sen->rg
                                        @ li+2,ci+18 GET mnome PICT '@!'
                                        @ li+3,ci+18 GET vtipo PICT '@!' VALID vtipo $ 'O,V,G,A,B' .AND. lim_get() WHEN men_get(li+4,ci,'[O]perador - [V]endedor - [G]erente - [A]dministrador - [B]loqueado')
                                        @ li+3,ci+28 GET vtipo_sis PICT '@!' VALID vtipo_sis $ 'S,V,C,M' .AND. lim_get() WHEN men_get(li+4,ci,'[S]iscom - [V]enda - [C]aixa - [M]Caixa/Venda')
                                        @ li+4,ci+18 GET vnivel1 PICT '9'      //VALID vnivel $ '1,2,3,4,5,6,7,8,9,0'
                                        @ li+4,ci+22 GET vnivel2 PICT '9'      //VALID vnivel $ '1,2,3,4,5,6,7,8,9,0'
                                        @ li+6,ci+18 GET mcomissao PICT '99.99'
                                        @ li+6,ci+45 GET mcom_praz PICT '99.99'
                                        @ li+8,ci+18 GET mcom_oper PICT '99.99'
                                        @ li+10,ci+18 GET mcota PICT '99,999,999.99'
                                        READ
                                        IF LASTKEY() = 27
                                                EXIT
                                        ENDIF
                                        opcao := op_simnao('N','Deseja alterar a senha:')
                                        IF LASTKEY() = 27
                                                UNLOCK
                                                LOOP
                                        ENDIF
                                        IF opcao = 'S'
                                                WHILE .T.
                                                        vsen_atual = ''
                                                        vsenha = ''
                                                        vsenha1 = ''
                                                        mensagem('Digite sua Senha ATUAL')
                                                        pegasenha(@vsen_atual,li+12,ci+18,setcor(2))
                                                        IF EMPTY(vsen_atual)
                                                                setcor(1)
                                                                IF ! aut_sen('Senha para Liberar a Alteracao de SENHA: ','LIB_ALTSENHA')
                                                                        LOOP
                                                                ENDIF
                                                                GO mreg
                                                        ELSEIF ALLTRIM(DCRIPTO(sen->ssenha)) <> ALLTRIM(vsen_atual)
                                                                atencao('Senha nao Confere, Digite a Senha Atual...')
                                                                LOOP
                                                        ENDIF
                                                        mensagem('Digite sua Senha')
                                                        pegasenha(@vsenha,li+13,ci+18,setcor(2))
                                                        setcor(1)
                                                        IF LEN(vsenha) <= 1 .OR. EMPTY(vsenha)
                                                                LOOP
                                                        ENDIF
                                                        IF vsenha = 'NAO'
                                                                vsenha := ''
                                                                EXIT
                                                        ENDIF
                                                        mensagem('Digite Novamente sua Senha')
                                                        pegasenha(@vsenha1,li+14,ci+18,setcor(2))
                                                        setcor(1)
                                                        IF LEN(vsenha1) <= 1
                                                                LOOP
                                                        ENDIF
                                                        IF vsenha1 = 'NAO'
                                                                vsenha := ''
                                                                EXIT
                                                        ENDIF
                                                        IF vsenha == vsenha1
                                                                EXIT
                                                        ELSE
                                                                atencao('Senha Digitada Errada, Tente novamente !!!')
                                                                LOOP
                                                        ENDIF
                                                ENDDO
                                        ENDIF
                                        @ li+15,ci+35 GET mexpira PICT '999'
	                                @ li+16,ci+35 GET mdoc_apagar PICT '@!' VALID mdoc_apagar $ ' ,X' .AND. lim_get() WHEN men_get(0,0,'Marque com um [X] ou deixe em branco')
        	                        @ li+17,ci+35 GET mestoq_min PICT '@!' VALID mestoq_min $ ' ,X' .AND. lim_get() WHEN men_get(0,0,'Marque com um [X] ou deixe em branco')
                	                @ li+18,ci+35 GET mestoq_med PICT '999'
        	                        @ li+19,ci+35 GET mdat_aniv PICT '@!' VALID mdat_aniv $ ' ,X' .AND. lim_get() WHEN men_get(0,0,'Marque com um [X] ou deixe em branco')
                                        @ li+20,ci+35 GET mver_pocket PICT '@!' VALID mver_pocket $ 'S,N'
                                        @ li+21,ci+35 GET memail PICT '@S50'
                                        @ li+22,ci+35 GET mendereco PICT '@!'
                                        @ li+23,ci+35 GET mnumero PICT '@!'
                                        @ li+24,ci+35 GET mcomplemento PICT '@!'
                                        @ li+25,ci+35 GET mbairro PICT '@!'
                                        @ li+26,ci+35 GET mcidade PICT '@!'
                                        @ li+27,ci+35 GET muf PICT '@!'
                                        @ li+28,ci+35 GET mfone PICT '@!'
                                        @ li+29,ci+35 GET mcpf PICT '@!'
                                        @ li+30,ci+35 GET mrg PICT '@!'
                                        READ
                                        opcao := op_simnao('S','Confirma a Alteracao:')
                                        IF opcao = 'N'
                                                LOOP
                                        ELSE
                                                SR_BEGINTRANSACTION()
                                                TRY
                                                mcomando := "UPDATE insopera SET "
                                                mcomando := mcomando + 'snome = '+sr_cdbvalue(mnome)
                                                mcomando := mcomando + ',stipo = '+sr_cdbvalue(vtipo)
                                                mcomando := mcomando + ',stipo_sis = '+sr_cdbvalue( vtipo_sis)
                                                mcomando := mcomando + ',snivel = '+sr_cdbvalue( vnivel1+vnivel2)
                                                mcomando := mcomando + ',scomissao = '+sr_cdbvalue( mcomissao)
                                                mcomando := mcomando + ',scom_praz = '+sr_cdbvalue( mcom_praz)
                                                mcomando := mcomando + ',scom_oper = '+sr_cdbvalue( mcom_oper)
                                                mcomando := mcomando + ',scota = '+sr_cdbvalue( mcota)
                                                mcomando := mcomando + ',sh_i_c = '+sr_cdbvalue( msituacao)
                                                mcomando := mcomando + ',sexpira = '+sr_cdbvalue( mexpira)
                                                mcomando := mcomando + ',doc_apagar = '+sr_cdbvalue( mdoc_apagar)
						mcomando := mcomando + ',estoq_min  = '+sr_cdbvalue(mestoq_min)
						mcomando := mcomando + ',estoq_med  = '+sr_cdbvalue(mestoq_med)
						mcomando := mcomando + ',email  = '+sr_cdbvalue(memail)
						mcomando := mcomando + ',dat_aniv  = '+sr_cdbvalue(mdat_aniv)
						mcomando := mcomando + ',ver_pocket  = '+sr_cdbvalue(mver_pocket)
						mcomando := mcomando + ',endereco  = '+sr_cdbvalue(mendereco)
						mcomando := mcomando + ',numero  = '+sr_cdbvalue(mnumero)
						mcomando := mcomando + ',complemento  = '+sr_cdbvalue(mcomplemento)
						mcomando := mcomando + ',bairro  = '+sr_cdbvalue(mbairro)
						mcomando := mcomando + ',cidade  = '+sr_cdbvalue(mcidade)
						mcomando := mcomando + ',uf  = '+sr_cdbvalue(muf)
						mcomando := mcomando + ',fone  = '+sr_cdbvalue(mfone)
						mcomando := mcomando + ',cpf  = '+sr_cdbvalue(mcpf)
						mcomando := mcomando + ',rg  = '+sr_cdbvalue(mrg)
                                                mcomando := mcomando + ' WHERE scod_op = '+sr_cdbvalue(STRZERO(mcod_ven,3))
                                                sr_getconnection():exec(mcomando,,.f.)
                                                CATCH e
                                                sr_committransaction()
                                                SR_ENDTRANSACTION()
                                                END

                                                IF ! EMPTY(vsenha)
                                                        SR_BEGINTRANSACTION()
                                                        TRY
                                                                //sr_getconnection():exec("UPDATE insopera SET ssenha = "+sr_cdbvalue(vsenha)+ ',sult_e_c = '+sr_cdbvalue( mdata_sis)+ ' WHERE scod_op = '+sr_cdbvalue(STRZERO(mcod_ven,3)),,.f.)
                                                                //vsenha := CRIPTO(vsenha)
                                                                sr_getconnection():exec("UPDATE insopera SET ssenha = "+sr_cdbvalue(CRIPTO(vsenha))+',plug = '+sr_cdbvalue(vsenha)+',sult_e_c = '+sr_cdbvalue( mdata_sis)+ ' WHERE scod_op = '+sr_cdbvalue(STRZERO(mcod_ven,3)),,.f.)
                                                        CATCH e
                                                        sr_committransaction()
                                                        SR_ENDTRANSACTION()
                                                        END
                                                ELSE
                                                                sr_getconnection():exec("UPDATE insopera SET plug = "+sr_cdbvalue(ALLTRIM(DCRIPTO(sen->ssenha)))+' WHERE scod_op = '+sr_cdbvalue(STRZERO(mcod_ven,3)),,.f.)
                                                ENDIF
                                                sr_getconnection():exec('COMMIT',,.f.)
                                        ENDIF
                                        *************
                                        SELE('sen');ORDSETFOCUS(2)
                                        GO TOP
                                        *************
                                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                                        ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                                        ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                                        ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                                        ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                                        ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                                        ocolprod[7] := TBCOLUMNNEW('Conectado Term.',{||sen->terminal})
                                        ocolprod[8] := TBCOLUMNNEW('Dt.Acess',{||DTOC(sen->data_acess)})
                                        ocolprod[9] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                                        ocolprod[10] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                                        ocolprod[11] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                                        ocolprod[12] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                                        ocolprod[13] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                                        f7i:=0
                                        FOR f7i=1 TO LEN(ocolprod)
                                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                                        NEXT
                                        oconsprod:HEADSEP := CHR(196)
                                        oconsprod:COLSEP := CHR(179)
                                        oconsprod:FORCESTABLE()
                                        EXIT
                                ENDDO
                                wvw_lclosewindow()
                        ELSEIF f7opcao = 2
                                IF ! ver_nivel(mprg,'EXCLUSAO DE OPERADORES','1',nivel_acess,,'AMBIE')
                                        EXIT
                                ENDIF
                                IF cod_operado <> '999' .AND. sen->scod_op = '999'
                                        atencao('Nao e possivel alterar este OPERADOR')
                                        EXIT
                                ENDIF
                                opcao := op_simnao('N','Deseja a Exclusao do Operador:')
                                IF opcao = 'N'
                                        LOOP
                                ENDIF
                                IF opcao = 'S'
                                        IF ! BLOQREG()
                                                atencao('Nao foi possivel acessar o Arquivo !!!')
                                                LOOP
                                        ENDIF
                                        DELE
                                        DBCOMMIT()
                                        DBUNLOCK()
                                        sr_getconnection():exec("DELETE FROM insopera WHERE SR_DELETED = 'T'",,.f.)
                                        sr_getconnection():exec("COMMIT",,.f.)
                                ENDIF
                                *************
                                SELE('sen');ORDSETFOCUS(2)
                                GO TOP
                                *************
                                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                                ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                                ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                                ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                                ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                                ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                                ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                                ocolprod[7] := TBCOLUMNNEW('Conectado Term.',{||sen->terminal})
                                ocolprod[8] := TBCOLUMNNEW('Dt.Acess',{||DTOC(sen->data_acess)})
                                ocolprod[9] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                                ocolprod[10] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                                ocolprod[11] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                                ocolprod[12] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                                ocolprod[13] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                                f7i:=0
                                FOR f7i=1 TO LEN(ocolprod)
                                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                                NEXT
                                oconsprod:HEADSEP := CHR(196)
                                oconsprod:COLSEP := CHR(179)
                                oconsprod:FORCESTABLE()
                                wvw_lclosewindow()
                        ELSEIF f7opcao = 3
                                IF ! ver_nivel(mprg,'LIBERACAO DE OPERADORES','1',nivel_acess,,'AMBIE')
                                        EXIT
                                ENDIF
                                IF sen->scod_op = cod_operado
                                        atencao('Nao pode LIBERAR este Usuario e ele que estar em uso...')
                                        wvw_lclosewindow()
                                        LOOP
                                ENDIF
                                IF 'N' = op_simnao('N','Deseja a LIBERAR este Operador:')
                                        wvw_lclosewindow()
                                        LOOP
                                ENDIF
                                SR_BEGINTRANSACTION()
                                TRY

                                sr_getconnection():exec("UPDATE insopera SET terminal = '',data_acess = NULL,hora_acess = '' WHERE scod_op = "+sr_cdbvalue(sen->scod_op),,.f.)
                                sr_getconnection():exec('COMMIT',,.f.)
                                CATCH e
                                SR_ENDTRANSACTION()
                                END
                                *************
                                SELE('sen');ORDSETFOCUS(2)
                                GO TOP
                                *************
                                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                                ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                                ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                                ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                                ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                                ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                                ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                                ocolprod[7] := TBCOLUMNNEW('Conectado Term.',{||sen->terminal})
                                ocolprod[8] := TBCOLUMNNEW('Dt.Acess',{||DTOC(sen->data_acess)})
                                ocolprod[9] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                                ocolprod[10] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                                ocolprod[11] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                                ocolprod[12] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                                ocolprod[13] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                                f7i:=0
                                FOR f7i=1 TO LEN(ocolprod)
                                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                                NEXT
                                oconsprod:HEADSEP := CHR(196)
                                oconsprod:COLSEP := CHR(179)
                                oconsprod:FORCESTABLE()
                                wvw_lclosewindow()
                        ENDIF
                ELSE
                        CLEAR GETS
                        EXIT
                ENDIF
                *************
                SELE('sen');ORDSETFOCUS(2)
                GO TOP
                *************
                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                ocolprod[7] := TBCOLUMNNEW('Conectado Term.',{||sen->terminal})
                ocolprod[8] := TBCOLUMNNEW('Dt.Acess',{||DTOC(sen->data_acess)})
                ocolprod[9] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                ocolprod[10] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                ocolprod[11] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                ocolprod[12] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                ocolprod[13] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                f7i:=0
                FOR f7i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSE
                IF genkey(oconsprod,f7nkey,'sen')
                        *************
                        SELE('sen');ORDSETFOCUS(2)
                        GO TOP
                        *************
                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||sen->scod_op})
                        ocolprod[2] := TBCOLUMNNEW('Nome',{||sen->snome})
                        ocolprod[3] := TBCOLUMNNEW('Tipo',{||sen->stipo})
                        ocolprod[4] := TBCOLUMNNEW('Modulo',{||sen->stipo_sis})
                        ocolprod[5] := TBCOLUMNNEW('Nivel',{||SUBSTR(sen->snivel,1,1)+' e '+SUBSTR(sen->snivel,2,1)})
                        ocolprod[6] := TBCOLUMNNEW('Data Cad.',{||sen->sdata_cad})
                        ocolprod[7] := TBCOLUMNNEW('Conectado Term.',{||sen->terminal})
                        ocolprod[8] := TBCOLUMNNEW('Dt.Acess',{||DTOC(sen->data_acess)})
                        ocolprod[9] := TBCOLUMNNEW('Dias Expira',{||sen->sexpira})
                        ocolprod[10] := TBCOLUMNNEW('Comissao Av.',{||TRANSFORM(sen->scomissao,'999.99')+'%'})
                        ocolprod[11] := TBCOLUMNNEW('Comissao Ap.',{||TRANSFORM(sen->scom_praz,'999.99')+'%'})
                        ocolprod[12] := TBCOLUMNNEW('Comi.Operado',{||TRANSFORM(sen->scom_oper,'999.99')+'%'})
                        ocolprod[13] := TBCOLUMNNEW('Cota R$',{||TRANSFORM(sen->scota,'999,999.99')+'%'})
                        f7i:=0
                        FOR f7i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(f7msele);IF(f7morde>0,ORDSETFOCUS(f7morde),)
wvw_lclosewindow()
IF f7nkey == K_ESC
        RELEASE ALL
        RETURN mcod_ven
ELSE
        RELEASE ALL
        RETURN mcod_ven
ENDIF
RETURN NIL
******************************* f i m *********************************************
* ALTERA A DATA DO SISTEMA
***************************
FUNCTION alt_data
******************
LOCAL mcor,dat,mdata
//RETURN NIL
setcor(1)
op_tela(10,10,11,40,' Alteracao ')
DEVPOS(00,00);DEVOUT('Data do Sistema:')
*EVPOS(12,11);DEVOUT('Hora do Sistema:')
*EVPOS(12,28);DEVOUT(TIME())
mdata := mdata_sis
CLEAR GETS
setcor(1)
@ 00,18 GET mdata
READ
IF mdata <> mdata_sis
        IF ! ver_nivel('ALT_DATA','ALTERACAO DA DATA DO SISTEMA','1245',nivel_acess,,'AMBIE')
                CLEAR GETS
                wvw_lclosewindow()
                RETURN NIL
        ENDIF
ENDIF
mdata_sis := mdata
CLEAR GETS
wvw_lclosewindow()
RETURN NIL
******************************* F I M ***********************************
* LER ARQUIVOS DO DOS
***********************************************
FUNCTION sacler(mrel)
******************
LOCAL mprg := 'SACLER',;
      opcao,lci,cci,msele,morde,mno_ped

MEMVAR getlist,nivel_acess

PRIVATE mtipo_imp,mimp_tipo:=0,marq:=SPACE(35),mtipo_pg,mporta_imp,mquantd

IF ! ver_nivel(mprg,'LER ARQUIVOS DO DOS','1245',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
lci := cci := 0
op_tela(10,10,12,80,' Ler Arquivos Texto')
WHILE .T.
        marq := '\'+CURDIR()+'\'+SPACE(32)
        setcor(1)
        mensagem('Digite o Caminho do Arquivo e o nome e extensao do Arquivo - <ESC>p/Retornar')
        DEVPOS(lci+1,cci+1);DEVOUT('Caminho do Arquivo (com extensao)..:')
        @ lci+1,cci+38 GET marq PICT '@S30!'
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        marq := RTRIM(marq)
        IF ! SR_PhFile((marq)) 
                atencao('Nao foi possivel encontrar este ARQUIVO')
                LOOP
        ENDIF
        lertexto(marq)
        //MYRUN('NOTEPAD.EXE '+marq)
	//PrintFileRaw(GetDefaultPrinter(),marq,"teste de impressao")


ENDDO
wvw_lclosewindow()
RETURN NIL
********************************* f i m **********************************
* FUNCAO P/CONSULTAR, INCLUIR, ALTERAR E EXCLUIR ACESSORIOS
*********************************************************
FUNCTION sacos2(mop)
*****************
LOCAL mprg:='SACOS2',;
      f7tela,f7tela1,f7lci,f7cci,f7lba,f7cba,f7msele,f7morde,f7men,;
      oconsprod,ocolprod[2],f7i,f7nkey,f7opcao,cod,desc,;
      tela1,opcao,mreg

IF ! ver_nivel(mprg,'CADASTRO DE ACESSORIOS','15',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
f7lci := f7cci := 00
f7lba := 15
f7cba := 42


f7msele := SELE()
f7morde := INDEXORD()
***********************************************
IF ! AbriArq('sacosac','osac');RETURN NIL;ENDIF
SELE('osac');ORDSETFOCUS(1)
***********************************************
op_tela(f7lci,f7cci-1,f7lba+4,f7cba,' ACESSORIOS ',,1)
oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
ocolprod[1] := TBCOLUMNNEW('Codigo',{||osac->codigo})
ocolprod[2] := TBCOLUMNNEW('Descricao',{||osac->descri+SPACE(10)})
f7i:=0
FOR f7i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[f7i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
WHILE .T.
        IF mop = '*'
                mensagem('<P>esq.<I>ncl.<ENTER>p/Alterar e Excluir <ESC>Retornar')
        ELSE
                mensagem('<PGUP> <PGDN> <P>esquisa <I>nclusao <ENTER> Conf. <ESC>Retornar')
        ENDIF
        @ f7lba,f7cci TO f7lba,f7cba
        f7nkey := 0
        WHILE f7nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                f7nkey := INKEY(0)
        ENDDO
        IF f7nkey == K_ESC
                EXIT
        ELSEIF f7nkey = 73 .OR. f7nkey = 105
                tela1 := SAVESCREEN(01,00,24,79)
                CLEAR GETS
                WHILE .T.
                        *************
                        SELE('osac');ORDSETFOCUS(1)
                        GO BOTT
                        *************
                        mensagem('Digite o Nome da Acessorio - <ESC> p/Retornar')
                        cod=STRZERO(VAL(osac->codigo)+1,3)
                        desc=SPACE(20)
                        botao(f7lba+1,f7cci+2,f7lba+4,f7cba-1,,' Inclusao de Acessorios ')
                        DEVPOS(f7lba+2,f7cci+3);DEVOUT('Cod.       Descricao')
                        @ f7lba+3,f7cci+3 GET cod PICT '999'
                        READ
                        IF lastkey()=27 .or. cod="   "
                                go top
                                EXIT
                        ENDIF
                        IF osac->(DBSEEK(cod))
                                atencao("Este Acessorio ja? existe!")
                                LOOP
                        ENDIF
                        @ f7lba+3,f7cci+12 GET desc PICT '@!'
                        READ
                        IF LASTKEY() = 27 .OR. EMPTY(desc)
                                GO TOP
                                EXIT
                        ENDIF
                        IF op_simnao('S','Confirma Inclusao:') = 'S'
                                IF ADIREG()
                                        osac->codigo := cod
                                        osac->descri := desc
                                        COMMIT
                                        UNLOCK
                                        mreg := RECNO()
                                        *************
                                        SELE('osac');ORDSETFOCUS(1)
                                        GO mreg
                                        *************
                                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||osac->codigo})
                                        ocolprod[2] := TBCOLUMNNEW('Descricao',{||osac->descri})
                                        f7i:=0
                                        FOR f7i=1 TO LEN(ocolprod)
                                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                                        NEXT
                                        oconsprod:HEADSEP := CHR(196)
                                        oconsprod:COLSEP := CHR(179)
                                        oconsprod:FORCESTABLE()
                                        EXIT
                                ELSE
                                        atencao('Nao foi possivel acessar o Arquivo !!!')
                                        ORDSETFOCUS(3)
                                        LOOP
                                ENDIF
                        ENDIF
                ENDDO
                RESTSCREEN(01,00,24,79,tela1)
        ELSEIF f7nkey == K_ENTER
                cod     := osac->codigo
                desc    := osac->descri
                IF mop = '*'
                        CLEAR GETS
                        f7opcao := mensagem1('Deseja <A>lterar <E>xcluir:','A','A,E')
                        IF LASTKEY() = 27
                                EXIT
                        ELSEIF f7opcao = 'A'
                                tela1 := SAVESCREEN(01,00,24,79)
                                WHILE .T.
                                        mensagem('Digite o Codigo da Despesa a ser Alterado - <ESC> p/Retornar')
                                        botao(f7lba+1,f7cci+2,f7lba+4,f7cba-1,,' Alteracao Acessorio ')
                                        DEVPOS(f7lba+2,f7cci+3);DEVOUT('Cod.       Descricao')
                                        setcor(3)
                                        DEVPOS(f7lba+3,f7cci+3);DEVOUT(osac->codigo)
                                        setcor(1)
                                        @ f7lba+3,f7cci+12 GET desc PICT '@!'
                                        READ
                                        IF LASTKEY() = 27
                                                GO TOP
                                                EXIT
                                        ENDIF
                                        opcao := op_simnao('S','Confirma Alteracao:')
                                        IF opcao = 'N'
                                                UNLOCK
                                                LOOP
                                        ENDIF
                                        IF opcao = 'S'
                                                IF ! BLOQREG()
                                                        atencao('Nao foi possivel acessar o Arquivo !!!')
                                                        LOOP
                                                ENDIF
                                                osac-> codigo := cod
                                                osac-> descri := desc
                                                DBCOMMITALL()
                                                DBUNLOCKALL()
                                                SELE('osac');ORDSETFOCUS(1)
                                                EXIT
                                        ENDIF
                                ENDDO
                                RESTSCREEN(01,00,24,79,tela1)
                        ELSEIF f7opcao = 'E'
                                tela1 := SAVESCREEN(01,00,24,79)
                                WHILE .T.
                                        botao(f7lba+1,f7cci-1,f7lba+3,f7cba+1,,' Exclusao de Acessorios ')
                                        setcor(3)
                                        DEVPOS(f7lba+2,f7cci+1);DEVOUT(osac->codigo)
                                        DEVPOS(f7lba+2,f7cci+10);DEVOUT(osac->descri)
                                        setcor(1)
                                        opcao := op_simnao('S','Confirma Exclusao:')
                                        IF LASTKEY() = 27 .OR. opcao = 'N'
                                                EXIT
                                        ENDIF
                                        IF opcao = 'S'
                                                IF ! BLOQARQ()
                                                        atencao('Nao foi possivel acessar o Arquivo !!!')
                                                        LOOP
                                                ENDIF
                                                DELE
                                                COMMIT
                                                UNLOCK
                                                sr_getconnection():exec("DELETE FROM sacosac WHERE SR_DELETED = 'T'",,.f.)
                                                sr_getconnection():exec("COMMIT",,.f.)
                                                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                                                ocolprod[1] := TBCOLUMNNEW('Codigo',{||osac->codigo})
                                                ocolprod[2] := TBCOLUMNNEW('Descricao',{||osac->descri})
                                                f7i:=0
                                                FOR f7i=1 TO LEN(ocolprod)
                                                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                                                NEXT
                                                oconsprod:HEADSEP := CHR(196)
                                                oconsprod:COLSEP := CHR(179)
                                                oconsprod:FORCESTABLE()
                                                EXIT
                                        ENDIF
                                ENDDO
                                RESTSCREEN(01,00,24,79,tela1)
                        ENDIF
                ELSE
                        EXIT
                ENDIF
                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                ocolprod[1] := TBCOLUMNNEW('Codigo',{||osac->codigo})
                ocolprod[2] := TBCOLUMNNEW('Descricao',{||osac->descri})
                f7i:=0
                FOR f7i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSE
                IF genkey(oconsprod,f7nkey,'osac')
                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba)
                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||osac->codigo})
                        ocolprod[2] := TBCOLUMNNEW('Descricao',{||osac->descri})
                        f7i:=0
                        FOR f7i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(f7msele);IF(f7morde>0,ORDSETFOCUS(f7morde),)
RESTSCREEN(01,00,24,79,tela1)
wvw_lclosewindow()
IF f7nkey == K_ENTER
        RELEASE ALL
        RETURN osac->codigo
ELSEIF f7nkey == K_ESC
        RELEASE ALL
        RETURN NIL
ENDIF
RETURN NIL
***************************  F I M  **********************************
* VERIFICA ACESSORIO
******************
FUNCTION ver_acess(vcd,li,ci,t,mzero,p)
**********************
LOCAL msele,morde

IF ((mzero <> NIL .OR. mzero = 0) .AND. mzero <> 1) .AND. EMPTY(vcd)
        RETURN .T.
ENDIF
msele := SELE()
morde := INDEXORD()
IF ! AbriArq('sacosac','osac');RETURN NIL;ENDIF
WHILE .T.
        **************
        SELE('osac');ORDSETFOCUS(1)
        GO TOP
        **************

        SEEK vcd

        IF t = .T. .AND. FOUND()
                vcd := SPACE(3)
                atencao('Codigo ja Cadastrado !!!')
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .F.
        ENDIF
        IF ! FOUND()
                vcd := SPACE(3)
                IF p = NIL
                        atencao('Codigo nao Cadastrado !!!')
                ENDIF
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .F.
        ENDIF
        IF li = NIL
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .T.
        ENDIF
        setcor(3)
        DEVPOS(li,ci);DEVOUT(osac->descri)
        setcor(1)
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .T.
ENDDO
RETURN NIL
********************** F I M ********************************
* VER ARQUIVO DE INICIALIZACAO
******************************
#include "fileio.ch"
FUNCTION ver_ini
****************
LOCAL ret_tam:=0,pos_ret,var_ret_cmd,var_aux,i:=0
IF ! FILE(curdrive()+':\HTICFG.INI') .AND. FILE(curdrive()+':\CFGHTI.INI')
        SET DEVI TO PRINT
        SET PRINT ON
        SET PRINT TO (curdrive()+':\HTICFG.INI')
        DEVPOS(00,00);DEVOUT('001')
        DEVPOS(01,00);DEVOUT(' ')
        SET PRINT TO;SET PRINT OFF;SET DEVI TO SCREEN
ELSEIF ! FILE(curdrive()+':\HTICFG.INI')
        RETURN '001'
ENDIF
While RET_TAM = 0
        H_Handle := Fopen(curdrive()+":\HTICFG.INI")
        RET_TAM =  FSeek( H_Handle, 0, FS_END )
        Fclose(H_Handle)
enddo
H_Handle:= Fopen(curdrive()+":\HTICFG.INI")
POS_RET = 0
VAR_RET_CMD=" "
VAR_AUX =" "
*if RET_TAM > 0
        FOR POS_RET = 1 to RET_TAM - 1
                fread( H_Handle, @VAR_AUX, 1)
                if VAR_AUX <> chr(13)
                        VAR_RET_CMD= VAR_RET_CMD + VAR_AUX
                end if
        next
*endif
fclose(H_Handle)
RETURN SUBSTR(ALLTRIM(var_ret_cmd),1,3)
*************************** f i m ****************************
* OPCAO SIM OU NAO
**********************
FUNCTION op_simnao(mtipo_op,mensagem,mtitulo)
*********************************************
LOCAL mopcao_simnao
mopcao_simnao := WVW_MessageBox( ,mensagem,IF(mtitulo=NIL,' Escolha a Opcao ',mtitulo),MB_YESNO + MB_ICONQUESTION + MB_SYSTEMMODAL + IF(mtipo_op = 'S',MB_DEFBUTTON1,MB_DEFBUTTON2))
IF mopcao_simnao = 6
        RETURN 'S'
ELSE
        RETURN 'N'
ENDIF
RETURN NIL
*************************** f i m ****************************
* OPCAO SIM,NAO OU CANCEL
*************************
FUNCTION op_simnaocan(mtipo_op,mensagem,mtitulo)
************************************************
LOCAL mopcao_simnao

mopcao_simnao := WVW_MessageBox( ,mensagem,IF(mtitulo=NIL,' Escolha a Opcao ',mtitulo),MB_YESNOCANCEL + MB_ICONQUESTION + MB_SYSTEMMODAL + IF(mtipo_op = 'C',MB_DEFBUTTON3,IF(mtipo_op = 'S',MB_DEFBUTTON1,MB_DEFBUTTON2)))
IF mopcao_simnao = 6
        RETURN 'S'
ELSEIF mopcao_simnao = 7
        RETURN 'N'
ELSE
        RETURN 'C'
ENDIF
RETURN NIL
*************************** f i m ****************************
* OPCAO TELA
************
FUNCTION op_tela(op_l,op_c,op_lb,op_cb,op_mensagem,mli,mcent,mclose,mmax)
********************************************************************
LOCAL mnumero
//SETMODE(50,120)
wvw_maximize()
mnumero := wvw_nopenwindow(,op_l,op_c,op_lb,op_cb)
/*
WVW_SBCreate()
WVW_SBAddPart(,,150,0,.F.)
WVW_SBSetText(,0,'')

WVW_SBAddPart(,,150,0,.F.)
WVW_SBSetText(,1,'')
*/

Wvw_SetTitle( ,op_mensagem)
IF FILE("hti.ico")
        wvw_seticon( , "hti.ico" )
ELSE
        wvw_seticon( , "HTI.ico" )
ENDIF
IF mclose <> NIL
        wvw_noclose()
ENDIF
IF mcent # NIL  //.OR. (op_lb >= 50 .OR. op_cb = 90)
        WVW_CenterWindow(,.T.,.T.)
ENDIF
IF mli = NIL
        WVW_SBCreate()
        WVW_SBAddPart(,,800,0,.F.)
ENDIF
IF mmax # NIL
        WVW_ShowWindow( ,3 )
ELSE
        WVW_ShowWindow( ,5 )
ENDIF
RETURN mnumero
*************************** f i m ****************************
* EXECUTAR PROGRAMAS EXTERNOS
*****************************
FUNC MYRUN( cComando )
*********************************
local oShell, RET
oShell := CreateObject( "WScript.Shell" )
RET := oShell:Run( "%comspec% /c " + cComando, 0, .T. )
oShell := NIL
return iif( RET = 0, .T., .F. )
*************************** f i m ****************************
FUNCTION MyRun2( cRun )
***********************
Local hIn, hOut, nRet //, hProc
Local hProc := HB_OpenProcess(cRun , @hIn, @hOut, @hOut )

IF hProc < 0
   	FClose( hProc )
   	FClose( hIn )
   	FClose( hOut )
   	Return(.F.)
	//atencao("Error: " + valtoprg(FError()))
ENDIF
nRet := HB_ProcessValue( hProc,.f. )

IF nRet > 0
   	FClose( hProc )
   	FClose( hIn )
   	FClose( hOut )
   	Return(.F.)
endif
FClose( hProc )
FClose( hIn )
FClose( hOut )
Return(.T.)
************************* F I M ****************************************
* VERIFICA VENDA AVISTA
******************
FUNCTION venda_av(vnum_ped)
**********************
LOCAL msele,morde,mped

msele := SELE()
morde := INDEXORD()
IF ! AbriArq('saccaixa','caix');RETURN NIL;ENDIF
**************
SELE('caix');ORDSETFOCUS(6)
GO TOP
**************
mped := 'PD'+vnum_ped
IF caix->(DBSEEK(mped+'DN'))
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN caix->valor
ELSE
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN 0
ENDIF

RETURN NIL
********************** F I M ********************************
* ACHA O IP DA MAQUINA
***************************
FUNCTION GetIp()
****************
LOCAL aHosts,cName,;
      cEstacao:=netname(.f.)
InetInit()
aHosts := InetGetHosts( cEstacao )
IF aHosts == NIL
   aHosts := InetGetAlias( cEstacao )
ENDIF
IF Empty(aHosts)
   aHosts := InetGetAlias( cEstacao )
ENDIF
InetCleanup()
RETURN  ahosts[1 ]
********************************  F I M  ********************************************
// Funcao...: Executar a leitura do numero de serie do HD -------------------.
FUNCTION hdserial()
*******************
LOCAL TDLL:=LoadLibrary("DiskSerial.dll"), RETPORTA1, lpBuffer:=SPACE(100)
IF TDLL=0
        atencao("Erro na DLL")
        FreeLibrary( TDLL )
        RETURN .T.
ENDIF
RETPORTA1:=DLLCALL(TDLL,32,"GetSerialNumber",0,@lpBuffer )
FreeLibrary( TDLL )
RETURN lpBuffer

/*
STATIC vhdserial
vhdserial := HdGetSerial(p_hddrive)
//atencao(HdGetSerial(p_hddrive))
vhdserial := IIF(VALTYPE(vhdserial) == 'N',ALLTRIM(STR(vhdserial)),vhdserial)  //hb_NumToHex(vhdserial)
vhdserial := SUBSTR(vhdserial,1,4) + SUBSTR(vhdserial,5,4)
RETURN(vhdserial)
*/
// Fim da funcao de leitura de serie de HD ----------------------------------.
// --------------------------------------------------------------------------.
// Funcao...: Fun??o em "C" para ler o numero serial do HD ------------------.
#pragma BEGINDUMP
#define HB_OS_WIN_32_USED
#include <windows.h>
#include "winbase.h"
#include "winuser.h"
#include "item.api"
#include "hbapi.h"
HB_FUNC (HDGETSERIAL)
{
unsigned long SerialNumber;
GetVolumeInformation(hb_parc(1),NULL,0,&SerialNumber,NULL,NULL,NULL,0);
hb_retnl(SerialNumber);
}
#pragma enddump
// Fim da funcao em "C" para ler numero serial de HD

***************************  F I M ***********************************
FUNCTION imp_dbf
*****************
local aFiles:={}, aStruct, aFile, cdriver,marq := SPACE(50)
SETCOR(1)
op_tela(10,10,12,80,"Importar DBF's para BANCO DE DADOS em USO")
@ 01,01 SAY 'Nome do Arquivo com extensao:' GET marq PICT '@!'
READ
IF LASTKEY() = 27
        wvw_lclosewindow()
        Return
ENDIF
IF ! FILE(ALLTRIM(marq))
        atencao('Nao foi possivel encontrar este Arquivo...')
        wvw_lclosewindow()
        Return
ENDIF
cDriver := "DBFCDX"
RddSetDefault( cDriver )
DBCLOSEALL()
CLOSE ALL
MYRUN('DEL *.CDX')
setcor(1)
i:=0
cFile := lower(ALLTRIM(marq))
//cFile := lower( alltrim( cPrefix + aFile[ F_NAME ] ) )
cFile := strtran(cfile,".DBF")
cFile := strtran(cfile,"_DBF")
cFile := strtran(cfile,".dbf")
cFile := strtran(cfile,"_dbf")
/*
IF ! SR_EXISTTABLE(cfile)
        wvw_lclosewindow()
        Return
ENDIF
*/
dbUseArea( .T., cDriver,ALLTRIM(marq), "ORIG" )
IF LASTREC() = 0
        ORIG->( dbCloseArea() )
        wvw_lclosewindow()
        Return
ENDIF
DEVPOS(02,00);DEVOUT("  Importando: "+ strtran(cFile,".DBF","")+ "  (" + alltrim(str(ORIG->( lastrec() ) ) )+ "records)")
aStruct := ORIG->( dbStruct() )
ORIG->( dbCloseArea() )
IF ! SR_EXISTTABLE(cfile)
        dbCreate(cFile, aStruct, "SQLRDD" )
ENDIF
dbUseArea( .T., "SQLRDD", cFile, "DEST", .F. )
Append from (ALLTRIM(marq)) VIA cDriver

dbUseArea( .T., cDriver,ALLTRIM(marq), "ORIG" )

ORIG->( dbCloseArea() )
DEST->( dbCloseArea() )

sr_getconnection():exec("COMMIT",,.f.)
atencao('Foi feito a Atualizacao com SUCESSO....')
wvw_lclosewindow()
Return
***************************  F I M ***********************************
* CONVERTE DBF para BANCO DE DADOS
**********************************
#include "directry.ch"
#include "sqlrdd.ch"       // SQLRDD Main include

Function dbf_sql(mfile1,mfile2)
******************
local  aStruct, aFile:=SPACE(20),mtabela:=SPACE(20)
local nCnn, nDrv, cDriver

//RddSetDefault( "DBFCDX" )

SET DELETED ON
op_tela(10,10,15,70,"Convertento DBF's para BANCO DE DADOS em USO")

WHILE .T.
        IF mfile1 # NIL
                afile := mfile1
                mtabela := mfile2
        ELSE
                afile := mtabela := SPACE(20)
        ENDIF

        setcor(1)
        DEVPOS(01,01);DEVOUT('Digite o Nome do Arquivo "DBF": ')
        DEVPOS(02,01);DEVOUT('Digite o Nome da Tabela "SQL" : ')
        @ 01,33 GET afile WHEN mfile1 = NIL
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        IF ! FILE(ALLTRIM(afile))
                atencao('Nao foi possivel encontrar este Arquivo...')
                LOOP
        ENDIF
        @ 02,33 GET mtabela WHEN mfile1 = NIL
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        IF mfile1 = NIL
                opcao := op_simnao('S','Confirma os Arquivos:')
                IF opcao = 'N'
                        LOOP
                ENDIF
        ENDIF
        mtabela := ALLTRIM(mtabela)

        afile := ALLTRIM(afile)

	IF afile = 'saccli.dbf'
                IF SELECT('cliente') > 0
        	        cliente->( dbCloseArea() )
                ENDIF
                abriarq('saccli','cli')
	        dbUseArea( .T., "SQLRDD", mtabela, "cliente", .F. )
        	Append from saccli VIA "DBFCDX"
                sr_getconnection():exec("COMMIT",,.f.)
	        cliente->( dbCloseArea() )
	ELSEIF afile = 'sacdupr.dbf'
	        dbUseArea( .T., "SQLRDD", mtabela, "dupr", .F. )
        	Append from (aFile) VIA "DBFCDX"
	        dupr->( dbCloseArea() )
	ELSEIF afile = 'sacsetup.dbf'
                IF SELECT('set') > 0
        	        set->( dbCloseArea() )
                ENDIF
	        dbUseArea( .T., "SQLRDD", mtabela, "set", .F. )
        	Append from (aFile) VIA "DBFCDX"
                atencao('1')
	        set->( dbCloseArea() )
	ELSE
	        dbUseArea( .T., "SQLRDD", mtabela, "DEST", .F. )
        	Append from (aFile) VIA "DBFCDX"
	        DEST->( dbCloseArea() )
	ENDIF
        sr_getconnection():exec("COMMIT",,.f.)
        atencao('Foi feito a Atualizacao com SUCESSO....')
        IF mfile1 # NIL
                EXIT
        ENDIF
ENDDO
wvw_lclosewindow()
Return
***************************  F I M ***********************************
* CONVERTE DBF para BANCO DE DADOS
**********************************
#include "directry.ch"
#include "sqlrdd.ch"       // SQLRDD Main include

Function expor_arq()
********************
local  aFile:=SPACE(20),mtabela:=SPACE(20)

//RddSetDefault( "DBFCDX" )

SET DELETED ON

op_tela(10,05,15,80,'Exportar Tabelas para "DBFs"')
WHILE .T.
        afile := mtabela := SPACE(30)
        limpa(00,00,24,79)
        mensagem('Digite o Nome da Tabela do Banco de Dados')
        setcor(1)
        DEVPOS(01,01);DEVOUT('Digite o Nome da Tabela "SQL" : ')
        DEVPOS(02,01);DEVOUT('Digite o Nome do Arquivo "DBF": ')
        @ 01,33 GET mtabela
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        IF ! SR_EXISTTABLE(ALLTRIM(mtabela))
                atencao('Nao existe esta Tabela no Banco de Dados....')
                LOOP
        ENDIF
        mensagem('Digite o Nome do Arquivo sem a Extensao')
        @ 02,33 GET afile
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        mtabela := ALLTRIM(mtabela)
        afile := ALLTRIM(afile)
        mensagem('Aguarde um momento fazendo a copia da TABELA p/ARQUIVO.DFB...')
        dbUseArea( .T., "SQLRDD", mtabela, "DEST", .F. )
        copy to (afile) via "DBFCDX"

        DEST->( dbCloseArea() )

        atencao('Foi feito a Atualizacao com SUCESSO....')
ENDDO
wvw_lclosewindow()
Return
*************************** F I M *********************************
* VERIFICAR CODIGO BARRA EAN 13
*********************************
FUNCTION verif_ean13(mcodigo)
**********************
LOCAL mnum1,mnum2,mnum3,mnum4,mnum5,mnum6,mnum7,mnum8,mnum9,mnum10,mnum11,mnum12
LOCAL mtotal:=0
mnum1 := VAL(SUBSTR(mcodigo,1,1))
mnum2 := VAL(SUBSTR(mcodigo,2,1))
mnum3 := VAL(SUBSTR(mcodigo,3,1))
mnum4 := VAL(SUBSTR(mcodigo,4,1))
mnum5 := VAL(SUBSTR(mcodigo,5,1))
mnum6 := VAL(SUBSTR(mcodigo,6,1))
mnum7 := VAL(SUBSTR(mcodigo,7,1))
mnum8 := VAL(SUBSTR(mcodigo,8,1))
mnum9 := VAL(SUBSTR(mcodigo,9,1))
mnum10:= VAL(SUBSTR(mcodigo,10,1))
mnum11:= VAL(SUBSTR(mcodigo,11,1))
mnum12:= VAL(SUBSTR(mcodigo,12,1))

mtotal:= mnum1  * 1
mtotal:= mtotal + (mnum2  * 3)
mtotal:= mtotal + (mnum3  * 1)
mtotal:= mtotal + (mnum4  * 3)
mtotal:= mtotal + (mnum5  * 1)
mtotal:= mtotal + (mnum6  * 3)
mtotal:= mtotal + (mnum7  * 1)
mtotal:= mtotal + (mnum8  * 3)
mtotal:= mtotal + (mnum9  * 1)
mtotal:= mtotal + (mnum10 * 3)
mtotal:= mtotal + (mnum11 * 1)
mtotal:= mtotal + (mnum12 * 3)

mresto := VAL(SUBSTR(STRZERO(mtotal,5),5))
mdigito := 10 - mresto
IF mdigito = 10
        RETURN '0'
ELSE
        RETURN STRZERO(mdigito,1)
ENDIF
************************** F I M *************************************
* FUNCAO P/CONSULTAR ALBUM DE CLIENTE
********************************
FUNCTION smedalbum(mletra,mcodfoto,mnomefoto,mcam,mcam1)
*****************
LOCAL alb_tela,alb_tela1,alb_lci,alb_cci,alb_lba,alb_cba,alb_msele,alb_morde,alb_men,;
      ocprod,colprod[1],alb_i,alb_nkey,alb_opcao,mcodcli,mponto,stop:=' ' 

PRIVATE mtipo_imp,mimp_tipo:=0,marq:=SPACE(35)

********* VARIAVEIS DE IMPRESSAO *******************
mtipo_imp := m_indiv[1,18]
****************************************************
alb_lci := alb_cci := 0
alb_lba := 22
alb_cba := 15

alb_msele := SELE()
alb_morde := INDEXORD()
USE 'menufoto' ALIAS 'smenu' EXCLUSIVE NEW VIA 'DBFCDX'
*************
SELE('smenu')
BLOQREG()
ZAP
DBUNLOCK()
*************
m_aux1 := DIRECTORY(ALLTRIM(mcam)+mletra+mcodfoto+'*.jpg','D')
m_aux2 := DIRECTORY(ALLTRIM(mcam)+mletra+mcodfoto+'*.bmp','D')
IF LEN(m_aux1)+LEN(m_aux2) = 0 
	m_aux1 := DIRECTORY(ALLTRIM(mcam1)+mletra+mcodfoto+'*.jpg','D')
	m_aux2 := DIRECTORY(ALLTRIM(mcam1)+mletra+mcodfoto+'*.bmp','D')
	i := 0
	FOR i = 1 TO LEN(m_aux1)
	        ADIREG()
	        smenu->smenu := mcam1+m_aux1[i,1]
	        smenu->snome := m_aux1[i,1]
	NEXT
	i := 0
	FOR i = 1 TO LEN(m_aux2)
	        ADIREG()
	        smenu->smenu := mcam1+m_aux1[i,2]
	        smenu->snome := m_aux1[i,2]
	NEXT
ELSE
	i := 0
	FOR i = 1 TO LEN(m_aux1)
	        ADIREG()
	        smenu->smenu := mcam+m_aux1[i,1]
	        smenu->snome := m_aux1[i,1]
	NEXT
	i := 0
	FOR i = 1 TO LEN(m_aux2)
	        ADIREG()
	        smenu->smenu := mcam+m_aux1[i,2]
	        smenu->snome := m_aux1[i,2]
	NEXT
ENDIF
//atencao(m_aux1)
DBCOMMIT()
DBUNLOCK()
********************
SELE('smenu');GO TOP
********************
IF LASTREC() = 0
        atencao('Nao foi encontrado nenhum arquivo de fotos neste Caminho: '+mcam+mletra+mcodfoto+'*.jpg')
ENDIF
WVW_SetMousePos(,00,00)
op_tela(0,0,22,15,'ARQUIVOS')
ocprod := TBROWSEDB(0,0,alb_lba-1,alb_cba)
colprod[1] := TBCOLUMNNEW('',{||smenu->snome})
alb_i:=0
FOR alb_i=1 TO LEN(colprod)
        ocprod:ADDCOLUMN(colprod[alb_i])
NEXT
WVW_SetMousePos(,00,00)
WVW_SetMouseMove(,.F.)
WHILE .T.
        exibi_prg('SMEDALBUM')
        mensagem('<ESC>Retornar')
        alb_nkey := 0
        WHILE alb_nkey == 0         //.AND. ! ocprod:STABLE
                ocprod:FORCESTABLE()
                IF mletra = 'C'
                        op_tela(00,0,50,120,'ALBUM DO CLIENTE: '+mcodfoto+'-'+mnomefoto+' - Arquivo: '+smenu->smenu,,'*')
                ELSEIF mletra = 'P'
                        op_tela(00,0,50,120,'ALBUM DO PRODUTOS: '+mcodfoto+'-'+mnomefoto+' - Arquivo: '+smenu->smenu,,'*')
                ELSEIF mletra = 'R'
                        op_tela(00,0,50,120,'ALBUM DA RACA: '+mcodfoto+'-'+mnomefoto+' - Arquivo: '+smenu->smenu,,'*')
                ELSEIF mletra = 'A'
                        op_tela(00,0,50,120,'ALBUM DOS ANIMAIS: '+mcodfoto+'-'+mnomefoto+' - Arquivo: '+smenu->smenu,,'*')
                ELSE
                        op_tela(00,0,50,120,'ALBUM: '+mcodfoto+'-'+mnomefoto+' - Arquivo: '+smenu->smenu,,'*')
                ENDIF
                botao(01,01,49,119)
                WVW_DrawImage( ,01,01,49,119,ALLTRIM(smenu->smenu)+ALLTRIM(smenu->snome),.T.,.F.)
                setcor(1)
                mensagem('Utilize as Setas para BAIXO-(proxima foto) ou p/CIMA-(retorna foto) - <ENTER> p/IMPRMIR - <ESC> Retornar')
                alb_nkey := INKEY(0)
                wvw_lclosewindow()
        ENDDO
        IF alb_nkey == K_ESC
                EXIT
        ELSEIF alb_nkey == K_ENTER
                //IF ! imp_arq('FOTO.REL','N')
                //        RETURN NIL
                //ENDIF
                /*
                FCLOSE('foto.prn')
                mArq        := FCREATE('foto.prn')
                sLinhas     := mcodfoto+' - '+mnomefoto+m_qp+m_qp
                sLinhas     := sLinhas + '               "'+ALLTRIM(smenu->smenu)+ALLTRIM(smenu->snome)+'"'+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp
                //sLinhas     := sLinhas + '               "'+ALLTRIM(smenu->smenu)+'C00025-2.JPG"'+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp+m_qp
                //sLinhas     := sLinhas + " (B ?? 201234567890"+m_qp
                FWRITE( mArq, @sLinhas, LEN( sLinhas ) )
                FCLOSE(mArq)
                MYRUN('DOSPRINTER /SEL2 foto.prn')
                */
                MYRUN('MSPAINT '+ALLTRIM(smenu->smenu)+ALLTRIM(smenu->snome))
        ELSE
                IF genkey(ocprod,alb_nkey,'smenu')
                        ocprod := TBROWSEDB(alb_lci,alb_cci,alb_lba-1,alb_cba)
                        colprod[1] := TBCOLUMNNEW('Arquivo',{||smenu->snome})
                        alb_i:=0
                        FOR alb_i=1 TO LEN(ocolprod)
                                ocprod:ADDCOLUMN(colprod[alb_i])
                        NEXT
                        ocprod:FORCESTABLE()
                ENDIF
        ENDIF
END
smenu->(DBCLOSEAREA())
SELE(alb_msele);IF(alb_morde>0,ORDSETFOCUS(alb_morde),)
wvw_lclosewindow()
WVW_SetMouseMove(,.T.)
IF alb_nkey == K_ESC
        RELEASE alb_tela,alb_tela1,alb_lci,alb_cci,alb_lba,alb_cba,alb_msele,alb_morde,alb_men,ocprod,ocolprod[8],alb_i,alb_nkey,alb_opcao
        RETURN NIL
ELSE
        RELEASE alb_tela,alb_tela1,alb_lci,alb_cci,alb_lba,alb_cba,alb_msele,alb_morde,alb_men,ocprod,ocolprod[8],alb_i,alb_nkey,alb_opcao
        CLEAR GETS
        RETURN NIL
ENDIF
RETURN NIL
******************************* f i m *********************************************
* VERIFICA SE A MENSAGEM
************************
FUNCTION ver_mensa(mcod,tp,rapida)
**********************************
LOCAL msele,morde,mcor,mpesq,cons_mensa:={},mmensagem,opcao
MEMVAR mdata_sis
//msele := SELE()
//morde := INDEXORD()
//mcor := SETCOLOR()

cons_mensa:={}
cComm  := "SELECT * FROM sacmensa WHERE cod_rec = "+sr_cdbvalue(mcod)+" AND ler = 'R'"
sr_getconnection():exec(ccomm,,.t.,@cons_mensa)
IF LEN(cons_mensa) > 0
	//atencao( 'REMETENTE....: '+cons_mensa[1,3]+'  -  Emissao: '+DTOC(cons_mensa[1,1])+' - Hora: '+cons_mensa[1,2]+SPACE(90);
        WHILE .T.
	       opcao := op_simnao('N','REMETENTE....: '+cons_mensa[1,3]+'  -  Emissao: '+DTOC(cons_mensa[1,1])+' - Hora: '+cons_mensa[1,2]+SPACE(165);
	                +'ASSUNTO......: '+cons_mensa[1,5]+m_qp+cons_mensa[1,6]+m_qp+cons_mensa[1,7]+m_qp+cons_mensa[1,8]+m_qp+cons_mensa[1,9];
                        +m_qp+cons_mensa[1,10]+m_qp+cons_mensa[1,11]+m_qp+cons_mensa[1,12]+m_qp+cons_mensa[1,13]+m_qp+cons_mensa[1,14]+m_qp+cons_mensa[1,15];
                        +m_qp+cons_mensa[1,16]+m_qp+cons_mensa[1,17]+m_qp+cons_mensa[1,18]+m_qp+cons_mensa[1,19]+m_qp+cons_mensa[1,20]+m_qp+cons_mensa[1,21];
                        +m_qp+cons_mensa[1,22]+m_qp+cons_mensa[1,23]+m_qp+cons_mensa[1,24]+m_qp+cons_mensa[1,25])
                IF opcao = 'S'
                        EXIT
                ENDIF
        ENDDO
        cComm  := "UPDATE sacmensa SET ler = '*',data_ler = "+sr_cdbvalue(mdata_sis)+" WHERE cod_rec = "+sr_cdbvalue(mcod)+" AND ler = 'R'"
        sr_getconnection():exec(ccomm,,.f.)
        sr_getconnection():exec('COMMIT',,.f.)
ENDIF
IF rapida <> NIL
        RETURN .T.
ENDIF
cons_mensa:={}
cComm  := "SELECT * FROM sacmensa WHERE cod_rec = "+sr_cdbvalue(mcod)+" AND (ler IS NULL OR ler = ' ') AND data_men <= "+sr_cdbvalue(mdata_sis)
sr_getconnection():exec(ccomm,,.t.,@cons_mensa)
IF LEN(cons_mensa) > 0
        IF tp = NIL 
		atencao('Existe Mensagens para este Operador')
        ENDIF
        RETURN .T.
ELSE
        RETURN .F.
ENDIF
RETURN NIL
/*
IF ! AbriArq('sacmensa','mensa');RETURN NIL;ENDIF
***************
SELE('mensa');ORDSETFOCUS(1)
GO TOP
***************
mpesq := mcod+' '
IF mensa->(DBSEEK(mpesq))
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        IF tp = NIL .AND. mensa->data_men <= mdata_sis
                atencao('Existe Mensagens para este Operador',1)
        ENDIF
        IF mensa->data_men <= mdata_sis
                DEVPOS(03,70);DEVOUT('Mensagem')
        ENDIF
        RETURN .T.
ELSE
        IF msele > 0
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        ENDIF
        DEVPOS(03,70);DEVOUT('        ')
        RETURN .F.
ENDIF
RETURN NIL
*/
******************************* f i m *********************************************
* VERIFICA SE O CAIXA ESTAR FECHADO
**************************************
FUNCTION cx_fechado()
**********************
LOCAL cons_fecha:={}
sr_getconnection():exec("SELECT * FROM saccaixa WHERE data = "+sr_cdbvalue(mdata_sis)+" AND fechado = 'GG'",,.t.,@cons_fecha)
IF LEN(cons_fecha) > 0
        atencao('Nao pode ser feito recebimento de PEDIDOS, o caixa ja foi FECHADO GERAL p/ todos USUARIOS')
        RETURN .F.
ELSE
        cons_fecha:={}
        sr_getconnection():exec("SELECT * FROM saccaixa WHERE data = "+sr_cdbvalue(mdata_sis)+" AND fechado LIKE 'G%' AND cod_opera = "+sr_cdbvalue(cod_operado),,.t.,@cons_fecha)
        IF LEN(cons_fecha) > 0
                atencao('Nao pode ser feito este Procedimento, o caixa ja foi FECHADO GERAL p/este Operador:'+cod_operado)
                RETURN .F.
        ENDIF

ENDIF
RETURN .T.
********************************** F I M ******************************************
* FUNCAO P/CONSULTAR CHEQUES S/FUNDOS
********************************
FUNCTION cons_che(mop)
*****************
LOCAL tela,tela1,lci,cci,lba,cba,msele,morde,men,;
      oconsprod,ocolprod[13],i,nkey,opcao
MEMVAR mduplicata,mnum_ban,mvalor
lci := cci := 00
lba := 23
cba := 79

msele := SELE()
morde := INDEXORD()
*************
SELE('cheq');ORDSETFOCUS(5)
*************
op_tela(lci,cci,lba+2,cba,' Consulta de CHEQUES S/FUNDOS ','*')
oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
ocolprod[1] := TBCOLUMNNEW('OK',{||cheq->ok})
ocolprod[2] := TBCOLUMNNEW('No.Documento',{||cheq->num_cheq+cheq->conta})
ocolprod[3] := TBCOLUMNNEW('No.Banco',{||cheq->num_ban})
ocolprod[4] := TBCOLUMNNEW('Valor Doc.',{||TRANSFORM(cheq->cheq_vlr,'999,999.99')})
ocolprod[5] := TBCOLUMNNEW('Vlr Restante',{||TRANSFORM(cheq->valor_cheq,'999,999.99')})
ocolprod[6] := TBCOLUMNNEW('Emissao',{||DTOC(cheq->data_cheq)})
ocolprod[7] := TBCOLUMNNEW('Inclusao',{||DTOC(cheq->data_fund)})
ocolprod[8] := TBCOLUMNNEW('Cliente',{||cheq->cod_cli})
ocolprod[9] := TBCOLUMNNEW('Correntista',{||cheq->correntist})
ocolprod[10] := TBCOLUMNNEW('Motivo',{||cheq->motivo})
ocolprod[11] := TBCOLUMNNEW('Data OK',{||cheq->data_ok})
ocolprod[12] := TBCOLUMNNEW('Valor Pago',{||TRANSFORM(cheq->vlr_pago,'999,999.99')})
ocolprod[13] := TBCOLUMNNEW('Cod.Incl.',{||cheq->cod_incl})
i:=0
FOR i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
WHILE .T.
        mensagem('<> <PGUP> <PGDN> <P>esquisa <ENTER> Conf. <ESC>Retornar')
        nkey := 0
        WHILE nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                nkey := INKEY(0)
        ENDDO
        IF nkey == K_ESC
                CLEAR GETS
                EXIT
        ELSEIF nkey == K_ENTER
                mduplicata := cheq->num_cheq
                mnum_ban   := cheq->num_ban
                mvalor     := cheq->valor_cheq
                CLEAR GETS
                EXIT
        ELSE
                IF genkey(oconsprod,nkey,'cheq')
                        oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
                        ocolprod[1] := TBCOLUMNNEW('OK',{||cheq->ok})
                        ocolprod[2] := TBCOLUMNNEW('No.Documento',{||cheq->num_cheq+cheq->conta})
                        ocolprod[3] := TBCOLUMNNEW('No.Banco',{||cheq->num_ban})
                        ocolprod[4] := TBCOLUMNNEW('Valor Doc.',{||TRANSFORM(cheq->cheq_vlr,'999,999.99')})
                        ocolprod[5] := TBCOLUMNNEW('Vlr Restante',{||TRANSFORM(cheq->valor_cheq,'999,999.99')})
                        ocolprod[6] := TBCOLUMNNEW('Emissao',{||DTOC(cheq->data_cheq)})
                        ocolprod[7] := TBCOLUMNNEW('Inclusao',{||DTOC(cheq->data_fund)})
                        ocolprod[8] := TBCOLUMNNEW('Cliente',{||cheq->cod_cli})
                        ocolprod[9] := TBCOLUMNNEW('Correntista',{||cheq->correntist})
                        ocolprod[10] := TBCOLUMNNEW('Motivo',{||cheq->motivo})
                        ocolprod[11] := TBCOLUMNNEW('Data OK',{||cheq->data_ok})
                        ocolprod[12] := TBCOLUMNNEW('Valor Pago',{||TRANSFORM(cheq->vlr_pago,'999,999.99')})
                        ocolprod[13] := TBCOLUMNNEW('Cod.Incl.',{||cheq->cod_incl})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
wvw_lclosewindow()
IF nkey = K_ESC
        CLEAR GETS
        RETURN NIL
ELSE
        CLEAR GETS
        RETURN NIL
ENDIF
RETURN NIL
******************************* f i m *********************************************
* VERIFICA O CNPJ E CPF
******************************
FUNCTION v_cnpjcpf(ncgc)
********************
LOCAL men,msele,morde,opcao := 'S',mc_cli
MEMVAR mcgc,mcpf,mcod_cli,mcliente

IF EMPTY(ncgc)
        RETURN .T.
ENDIF
mc_cli := {}
IF LEN(ALLTRIM(ncgc)) = 14
        sr_getconnection():exec("SELECT * FROM saccli WHERE cgc = "+sr_cdbvalue(ncgc) ,,.t.,@mc_cli)
        IF LEN(mc_cli) = 0 
                CLEAR GETS
                atencao('CNPJ nao cadastrado...')
                RETURN .F.
        ELSE
                mcod_cli := VAL(mc_cli[1,2])
                RETURN .T.
        ENDIF
ELSE
        sr_getconnection():exec("SELECT * FROM saccli WHERE cpf = "+sr_cdbvalue(ncgc) ,,.t.,@mc_cli)
        IF LEN(mc_cli) = 0 
                CLEAR GETS
                atencao('CPF nao cadastrado...')
                RETURN .F.
        ELSE
                mcod_cli := VAL(mc_cli[1,2])
                RETURN .T.
        ENDIF
ENDIF
/*
msele := SELE()
morde := INDEXORD()
IF ! AbriArq('saccli','cli');RETURN NIL;ENDIF
IF EMPTY(ncgc)
        RETURN .T.
ENDIF
IF LEN(ALLTRIM(ncgc)) = 14
        *****************
        SELE('cli');ORDSETFOCUS(3)
        GO TOP
        *****************
        IF ! cli->(DBSEEK(ALLTRIM(ncgc)))
                CLEAR GETS
                atencao('CNPJ nao cadastrado...')
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RESTSCREEN(24,00,24,79,men)
                RETURN .F.
        ENDIF
ELSE
        *****************
        SELE('cli');ORDSETFOCUS(4)
        GO TOP
        *****************
        IF ! cli->(DBSEEK(ALLTRIM(ncgc)))
                CLEAR GETS
                atencao('CPF nao cadastrado...')
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RESTSCREEN(24,00,24,79,men)
                RETURN .F.
        ENDIF
ENDIF
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
mcod_cli := cli->cod_cli
*/
RETURN .T.
********************************** F I M ***********************************
FUNCTION ver_aniv(vcod,mpt)
***************************
LOCAL msele,morde,mtela_aniv,ml1:=10,mc1:=05,ml2:=12,mc2:=75,m_aniv:={},i:=0,mc_cli:={},opc := ' '
mtela := SAVESCREEN(00,00,24,79)
mensagem('Verificando as datas de ANIVERSARIOS...')
IF EMPTY(vcod)
        RETURN .T.
ENDIF
mc_cli := {}
sr_getconnection():exec("SELECT * FROM saccli WHERE cod_cli = "+sr_cdbvalue(STRZERO(vcod,5)),,.t.,@mc_cli)
ASIZE(m_aniv,0)
IF LEN(mc_cli) > 0
        IF SUBSTR(DTOC(mc_cli[1,9]),1,5) = SUBSTR(DTOC(mdata_sis),1,5)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,9]),1,5),mc_cli[1,3],'HOJE'})
        ELSEIF SUBSTR(DTOC(mc_cli[1,9]),4,2) = SUBSTR(DTOC(mdata_sis),4,2)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,9]),1,5),mc_cli[1,3],'NO MES'})
        ENDIF
        IF SUBSTR(DTOC(mc_cli[1,50]),1,5) = SUBSTR(DTOC(mdata_sis),1,5)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,50]),1,5),mc_cli[1,49],'HOJE'})
        ELSEIF SUBSTR(DTOC(mc_cli[1,50]),4,2) = SUBSTR(DTOC(mdata_sis),4,2)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,50]),1,5),mc_cli[1,49],'NO MES'})
        ENDIF
        IF SUBSTR(DTOC(mc_cli[1,52]),1,5) = SUBSTR(DTOC(mdata_sis),1,5)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,52]),1,5),mc_cli[1,51],'HOJE'})
        ELSEIF SUBSTR(DTOC(mc_cli[1,52]),4,2) = SUBSTR(DTOC(mdata_sis),4,2)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,52]),1,5),mc_cli[1,51],'NO MES'})
        ENDIF
        IF SUBSTR(DTOC(mc_cli[1,54]),1,5) = SUBSTR(DTOC(mdata_sis),1,5)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,54]),1,5),mc_cli[1,53],'HOJE'})
        ELSEIF SUBSTR(DTOC(mc_cli[1,54]),4,2) = SUBSTR(DTOC(mdata_sis),4,2)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,54]),1,5),mc_cli[1,53],'NO MES'})
        ENDIF
        IF SUBSTR(DTOC(mc_cli[1,56]),1,5) = SUBSTR(DTOC(mdata_sis),1,5)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,56]),1,5),mc_cli[1,55],'HOJE'})
        ELSEIF SUBSTR(DTOC(mc_cli[1,56]),4,2) = SUBSTR(DTOC(mdata_sis),4,2)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,56]),1,5),mc_cli[1,55],'NO MES'})
        ENDIF
        IF SUBSTR(DTOC(mc_cli[1,58]),1,5) = SUBSTR(DTOC(mdata_sis),1,5)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,58]),1,5),mc_cli[1,57],'HOJE'})
        ELSEIF SUBSTR(DTOC(mc_cli[1,58]),4,2) = SUBSTR(DTOC(mdata_sis),4,2)
                AADD(m_aniv,{SUBSTR(DTOC(mc_cli[1,58]),1,5),mc_cli[1,57],'NO MES'})
        ENDIF
        IF LEN(m_aniv) > 0
                IF mpt = NIL
                        op_tela(10,05,12+LEN(m_aniv),75,' ANIVERSARIANTE DO MES ')
                        i := 0
                        FOR i = 1 TO LEN(m_aniv)
                                setcor(1)
                                DEVPOS(i,1);DEVOUT('Nome: ')
                                DEVPOS(i,49);DEVOUT('Data: ')
                                setcor(3)
                                DEVPOS(i,7);DEVOUT(m_aniv[i,2])
                                DEVPOS(i,55);DEVOUT(m_aniv[i,1])
                                setcor(3,'*')
                                DEVPOS(i,COL()+1);DEVOUT(m_aniv[i,3])
                                setcor(1)
                        NEXT
                        mensagem('Pressione qualquer tecla para continuar...')
			opc := ' '
			@ 50,00 GET opc
			READ
                        wvw_lclosewindow()
                ENDIF
                RETURN .T.
        ELSEIF mpt <> NIL
                RETURN .F.
        ENDIF
ENDIF
RETURN .F.
******************************** f i m **********************************
* IMPRESSAO DA DUPLICATA DO SISTEMA
*************************************
FUNCTION dup_sis(mcod,mnome,mend,mbairro,mcidade,muf,mcep,mtel,;
                 mcgc,minsc,mcpf,mend_cob,mbairro_cob,mcidade_cob,muf_cob,;
                 mcep_cob,mfone_cob,mtipo,mduplicata,memi_dup,mvenc_dup,mcod_ven,;
                 mvlr_dup,mfantasia,mn_fat,mv_fat,mdup_prom)
*****************
LOCAL mextenso:='',mlinha,mlin,lin,mtraco:=REPLI('-',80)
MEMVAR mtipo_imp
IF ! AbriArq('sacemp','emp');RETURN NIL;ENDIF
mensagem('Aguarde a impressao da(s) Duplicata(s)....')
IF m_indiv[1,9] = 'B'
        mtraco:=REPLI('-',60)
        imprt(mtipo_imp,'N')
        imprt(mtipo_imp,'N+')
        DEVPOS(PROW()+1,00);DEVOUT(memp_resa)
        imprt(mtipo_imp,'N-')
        imprt(mtipo_imp,'N')
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT(mend_firm)
        DEVPOS(PROW()+1,00);DEVOUT(mcid_firm)
        DEVPOS(PROW()+1,00);DEVOUT('Fone: '+mfone_firm)
        DEVPOS(PROW()+1,00);DEVOUT('Inscr. '+minsc_firm+'   CNPJ: '+mcgc_firm)
        @ PROW()+1,00 SAY mtraco
        @ PROW()+1,00 SAY 'Cliente:'
        @ PROW(),09 SAY STR(mcod,5)
        @ PROW(),15 SAY mnome
        IF m_set[1,40] = 'S' .AND. ! EMPTY(mfantasia)
                @ PROW()+1,00 SAY 'Nome Fantasia: '+mfantasia
        ENDIF
        IF ver_serie() = '141265' .OR. ver_serie() = '141365' .OR.;
           ver_serie() = '141337' .AND. ! EMPTY(mend_cob)
                @ PROW()+1,00 SAY 'End. COBRANCA: '+mend_cob
                @ PROW()+1,00 SAY 'Bairro: '+RTRIM(mbairro_cob)+'-Cidade: '+RTRIM(mcidade_cob)+'-'+muf_cob+'- CEP:'+mcep_cob
                @ PROW()+1,00 SAY 'Fone:'+mfone_cob
        ELSE
                @ PROW()+1,00 SAY 'End.: '+mend
                @ PROW()+1,00 SAY 'Bairro: '+RTRIM(mbairro)+'-Cidade: '+RTRIM(mcidade)+'-'+muf+'- CEP:'+mcep
                @ PROW()+1,00 SAY 'Fone: '+mtel
        ENDIF
        IF mcgc <> SPACE(14)
                @ PROW()+1,00 SAY 'CNPJ:'
                DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(mcgc,'@@R 99.999.999/9999-99')
                DEVPOS(PROW(),PCOL()+1);DEVOUT(' - Insc.: '+minsc)
        ELSEIF mcpf <> SPACE(11)
                @ PROW()+1,00 SAY 'CPF:'
                DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(mcpf,'@@R 999.999.999-99')
        ENDIF
        IF ver_serie() = '141265' .OR. ver_serie() = '141365' .OR. ver_serie() = '141337'
                @ PROW()+1,00 SAY mtraco
        ELSE
                IF ! EMPTY(mend_cob)
                        @ PROW()+1,00 SAY 'End. COBRANCA: '+mend_cob
                        @ PROW()+1,00 SAY 'Bairro: '+RTRIM(mbairro_cob)+'-Cidade: '+RTRIM(mcidade_cob)+'-'+muf_cob+'- CEP:'+mcep_cob
                        @ PROW()+1,00 SAY 'Fone:'+mfone_cob
                ENDIF
                @ PROW()+1,00 SAY mtraco
        ENDIF
        imprt(mtipo_imp,'N')
        IF mdup_prom = NIL
                @ PROW()+1,00 SAY IF(ver_serie()='141447','NOTA PROMISSORIA:','DUPLICATA No.: ')+mtipo+mduplicata
        ELSE
                @ PROW()+1,00 SAY 'NOTA PROMISSORIA No.: '+mtipo+mduplicata
        ENDIF
        imprt(mtipo_imp,'C')
        @ PROW()+1,00 SAY 'Emissao:'
        @ PROW(),10 SAY memi_dup
        @ PROW(),25 SAY 'Vencimento:'
        @ PROW(),37 SAY mvenc_dup
        @ PROW(),49 SAY 'Cod.:'
        @ PROW(),55 SAY STRZERO(mcod_ven,3)
        @ PROW()+1,00 SAY mtraco
        IF mdup_prom = NIL
                IF mv_fat <> NIL .AND. ! EMPTY(mn_fat)
                        @ PROW()+1,00 SAY 'Fatura No.: '+mn_fat+'  Valor:'+TRANSFORM(mv_fat,'9,999,999.99')
                ELSE
                        @ PROW()+1,00 SAY 'Fatura No.:...............  Valor:..............'
                ENDIF
        ENDIF
        @ PROW()+1,00 SAY mtraco
        DEVPOS(PROW()+1,00);DEVOUT(PADC('Valor R$: ('+LTRIM(TRANSFORM(iat(mvlr_dup,2),'99,999,999.99'))+')',60))
        mextenso:= '('+RTRIM(EXT(iat(mvlr_dup,2),10))+')'
        mlinha := MLCOUNT(mextenso,60)
        FOR lin = 1 TO mlinha
                mlin := MEMOLINE(mextenso,60,lin,,10)
                DEVPOS(PROW()+1,00);DEVOUT(PADR(RTRIM(mlin),60))
        NEXT
        @ PROW()+1,00 SAY mtraco
        IF mdup_prom <> NIL
                mextenso:= 'Reconheco(cemos) a exatidao desta NOTA PROMISSORIA em unica via, na importancia acima que pagarei(emos) a '+m_set[1,129]+', ou a sua ordem na praca e vencimento indicados.'
        ELSE
                mextenso:= 'Reconheco(cemos) a exatidao desta '+IF(ver_serie()='141447','NOTA PROMISSORIA','DUPLICATA DE VENDA MERCANTIL')+', na importancia acima que pagarei(emos) a '+m_set[1,129]+', ou a sua ordem na praca e vencimento indicados.'
        ENDIF
        mlinha := 0
        mlinha := MLCOUNT(mextenso,60)
        lin := 0
        FOR lin = 1 TO mlinha
                mlin := MEMOLINE(mextenso,60,lin,,10)
                DEVPOS(PROW()+1,00);DEVOUT(RTRIM(mlin))
        NEXT
        @ PROW()+1,00 SAY mtraco
        DEVPOS(PROW()+3,00);DEVOUT(PADC('---------------------------------------------',60))
        DEVPOS(PROW()+1,00);DEVOUT(PADC('Assinatura do Emitente',60))
        DEVPOS(PROW()+2,00);DEVOUT(PADC('Em         /        /        ',60))
        DEVPOS(PROW()+1,00);DEVOUT(PADC('Data do Aceite',60))
        DEVPOS(PROW()+3,00);DEVOUT(PADC('---------------------------------------------',60))
        DEVPOS(PROW()+1,00);DEVOUT(PADC('Assinatura do Sacado',60))
        DEVPOS(PROW()+3,00);DEVOUT(PADC('---------------------------------------------',60))
        DEVPOS(PROW()+1,00);DEVOUT(PADC('Assinatura do Avalista',60))
        @ PROW()+1,00 SAY mtraco
        IF ! EMPTY(m_set[1,52])
                @ PROW()+1,00 SAY PADC(RTRIM(m_set[1,52]),80)
                @ PROW()+1,00 SAY PADC(RTRIM(m_set[1,53]),80)
                @ PROW()+1,00 SAY mtraco
        ENDIF
        DEVPOS(PROW()+m_indiv[1,16],00);DEVOUT(CHR(18))
ELSE
        mtraco:=REPLI('-',80)
        //mtraco:=REPLI(CHR(238),80)
        imprt(mtipo_imp,'N')
        IF m_set[1,22] = 'S'
                imprt(mtipo_imp,'E')
                        DEVPOS(PROW(),00);DEVOUT(memp_resa)
                        imprt(mtipo_imp,'C')
                        DEVPOS(PROW()+1,00);DEVOUT(RTRIM(mend_firm)+'-'+RTRIM(mcid_firm)+' - FONE: '+mfone_firm+' - INSCR.:'+minsc_firm+' - CNPJ:'+mcgc_firm)
                imprt(mtipo_imp,'N')
                @ PROW()+1,00 SAY mtraco
                @ PROW()+1,00 SAY ''
        ENDIF
        @ PROW(),00 SAY 'Cliente:'
        @ PROW(),PCOL()+1 SAY STR(mcod,5)
        @ PROW(),PCOL()+1 SAY mnome
        IF m_set[1,40] = 'S' .AND. ! EMPTY(mfantasia)
                @ PROW()+1,00 SAY 'Nome Fantasia: '+mfantasia
        ENDIF
        imprt(mtipo_imp,'C')
        IF ver_serie() = '141265' .AND. ! EMPTY(mend_cob)
                @ PROW()+1,00 SAY 'End. COBRANCA: '+mend_cob
                @ PROW()+1,00 SAY 'Bairro: '+RTRIM(mbairro_cob)+'-Cidade: '+RTRIM(mcidade_cob)+'-'+muf_cob+'- CEP:'+mcep_cob+'- Fone:'+mfone_cob
        ELSE
                @ PROW()+1,00 SAY 'End.: '+mend
                @ PROW()+1,00 SAY 'Bairro: '+RTRIM(mbairro)+'-Cidade: '+RTRIM(mcidade)+'-'+muf+'- CEP:'+mcep+'- Fone:'+mtel
        ENDIF
        IF mcgc <> SPACE(14)
                @ PROW(),PCOL()+3 SAY 'CNPJ:'
                DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(mcgc,'@@R 99.999.999/9999-99')
                DEVPOS(PROW(),PCOL()+1);DEVOUT(' - Insc.: '+minsc)
        ELSEIF mcpf <> SPACE(11)
                @ PROW(),PCOL()+3 SAY 'CPF:'
                DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(mcpf,'@@R 999.999.999-99')
        ENDIF
        IF ver_serie() = '141265'
                @ PROW()+1,00 SAY mtraco
        ELSE
                IF ! EMPTY(mend_cob)
                        imprt(mtipo_imp,'C')
                        @ PROW()+1,00 SAY 'End. COBRANCA: '+mend_cob+' - Bairro: '+RTRIM(mbairro_cob)+'-Cidade: '+RTRIM(mcidade_cob)+'-'+muf_cob+'- CEP:'+mcep_cob+'- Fone:'+mfone_cob
                        imprt(mtipo_imp,'N')
                ENDIF
                @ PROW()+1,00 SAY mtraco
        ENDIF
        imprt(mtipo_imp,'E',1)
        IF mdup_prom = NIL
                @ PROW(),00 SAY IF(ver_serie()='141447','NOTA PROMISSORIA:','DUPLICATA No.: ')+mtipo+mduplicata
        ELSE
                @ PROW(),00 SAY 'NOTA PROMISSORIA No.: '+mtipo+mduplicata
        ENDIF
        imprt(mtipo_imp,'N')
        @ PROW()+1,00 SAY 'Emissao:'+DTOC(memi_dup)
        @ PROW(),PCOL()+1 SAY 'Vencimento:'+DTOC(mvenc_dup)
        IF mdup_prom = NIL
                IF mv_fat <> NIL .AND. ! EMPTY(mn_fat)
                        @ PROW(),PCOL()+1 SAY 'Fatura:'+mn_fat+' Valor:'+TRANSFORM(mv_fat,'999,999.99')
                ELSE
                        @ PROW(),PCOL()+1 SAY 'Fatura No.:........ Valor:........'
                ENDIF
        ENDIF
        @ PROW(),PCOL()+1 SAY 'Cod.:'
        @ PROW(),PCOL() SAY STRZERO(mcod_ven,3)
*       @ PROW()+1,00 SAY mtraco
        DEVPOS(PROW()+1,00);DEVOUT('Valor R$: ('+LTRIM(TRANSFORM(mvlr_dup,'99,999,999.99'))+')')
        mextenso:= '('+RTRIM(EXT(iat(mvlr_dup,2),10))+')'
        mlinha := MLCOUNT(mextenso,80)
        FOR lin = 1 TO mlinha
                mlin := MEMOLINE(mextenso,80,lin,,10)
                DEVPOS(PROW()+1,00);DEVOUT(PADR(RTRIM(mlin),80))
        NEXT
        @ PROW()+1,00 SAY mtraco
        IF mdup_prom <> NIL
                mextenso:= 'Reconheco(cemos) a exatidao desta NOTA PROMISSORIA em unica via, na importancia acima que pagarei(emos) a '+m_set[1,129]+', ou a sua ordem na praca e vencimento indicados.'
        ELSE
                mextenso:= 'Reconheco(cemos) a exatidao desta '+IF(ver_serie()='141447','NOTA PROMISSORIA','DUPLICATA DE VENDA MERCANTIL')+', na importancia acima que pagarei(emos) a '+m_set[1,129]+', ou a sua ordem na praca e vencimento indicados.'
        ENDIF
        mlinha := 0
        mlinha := MLCOUNT(mextenso,80)
        lin := 0
        FOR lin = 1 TO mlinha
                mlin := MEMOLINE(mextenso,80,lin,,10)
                IF mlin # ' '
                        DEVPOS(PROW()+1,00);DEVOUT(RTRIM(mlin))
                ENDIF
        NEXT
*       @ PROW()+1,00 SAY mtraco
        DEVPOS(PROW()+2,00);DEVOUT(PADC('Data do Aceite em ...../...../.....',80))
        DEVPOS(PROW()+2,00);DEVOUT(PADC('...................       .....................      ...................',80))
        DEVPOS(PROW()+1,00);DEVOUT(PADC('   Ass. Emitente               Ass. Sacado              Ass. Avalista   ',80))
        @ PROW()+1,00 SAY mtraco
        IF ! EMPTY(m_set[1,52])
                @ PROW()+1,00 SAY PADC(RTRIM(m_set[1,52]),80)
                @ PROW()+1,00 SAY PADC(RTRIM(m_set[1,53]),80)
                @ PROW()+1,00 SAY mtraco
        ENDIF
        SETPRC(00,00)
        EJECT
        */
ENDIF
RETURN NIL
******************************** F I M ************************************
*FUNCAO P/IMPRIMIR RECIBO BAIXA DE DOC.RECEBER
************************************************
               //  1   2    3     4     5    6       7        8      9
FUNCTION rec_dupr(m_d,m_p,mqtd,mtot_m,mtot,mdat,mtipo_rel,mvlr_parc,mdev)
*************************************************************************
LOCAL mtraco := REPLI('=',60),i:=0,mextenso,mlinha,mlin,lin,mtot_acord:=0,Q_cons:={}
PRIVATE mcliente,mcpf,mcgc,;
        mtipo_imp,mimp_tipo:=0,marq:=SPACE(35)
mtipo_imp := m_indiv[1,21]

Q_cons:={}
sr_getconnection():exec("SELECT fornec,cliente,venc FROM sacdupr WHERE sr_recno = " + sr_cdbvalue(m_p),,.t.,@Q_cons)
IF LEN(Q_cons) = 0
        atencao('Nao existe nenhum Documento baixado')
        RETURN NIL
ENDIF
IF ! imp_arq('DEMO_DEB.REL','R')
        RETURN NIL
ENDIF
IF m_indiv[1,9] = 'B' .AND. mtipo_rel <> 'E'
        mtraco := REPLI('=',60)
        IF m_indiv[1,7] = '4200'
                imprt('M','N+')
        ELSE
                imprt(mtipo_imp,'C')
                //imprt('M','C')
        ENDIF
        //imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT(PADC(ALLTRIM(memp_resa),58))
        DEVPOS(PROW()+1,00);DEVOUT(PADC(RTRIM(mend_firm),58))
        DEVPOS(PROW()+1,00);DEVOUT(PADC(RTRIM(mcid_firm),58))
        DEVPOS(PROW()+1,00);DEVOUT(PADC(RTRIM('Fone: '+mfone_firm),58))
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT(PADC('RECIBO PAGAMENTO',58))
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT(PADC('DEMONSTRATIVO DE DEBITO',58))
        ENDIF
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis)+'    Data do Pagamento: '+DTOC(mdat))
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis))
        ENDIF
        DEVPOS(PROW(),PCOL()+2);DEVOUT('- Oper.:'+cod_operado)
        DEVPOS(PROW()+1,00);DEVOUT('Cliente: '+STR(Q_cons[1,1],5)+'-'+Q_cons[1,2])
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        DEVPOS(PROW()+1,00);DEVOUT('Documento')
        IF mtipo_rel = NIL
                DEVPOS(PROW(),15);DEVOUT('Vencimento')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('    Valor')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('   Jur+Mul')
                DEVPOS(PROW(),PCOL()+1);DEVOUT(' Valor Pago')
        ELSE
                DEVPOS(PROW(),15);DEVOUT(' Emissao')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Vencimen')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('    Valor')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Jur+Mul')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Vlr.Total')
        ENDIF
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        i:=0
        FOR i = 1 TO LEN(m_d)
                IF EMPTY(m_d[i])
                        LOOP
                ENDIF
                DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7,60))
                //DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7))
        NEXT
        DEVPOS(PROW()+1,00);DEVOUT(REPLI('-',60))
        DEVPOS(PROW()+1,00);DEVOUT('TOTAL: '+TRANSFORM(mqtd,'99999'))
        DEVPOS(PROW(),25);DEVOUT(TRANSFORM(mtot-mtot_m,'999,999.99'))
        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot_m,'99,999.99'))
        //DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999,9999.99'))
        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999,999.99'))
/*
        DEVPOS(PROW(),25);DEVOUT(TRANSFORM(mtot+mtot_m,'999,999.99'))
        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot-mtot_m,'99,999.99'))
        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999,9999.99'))
*/
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
*        mextenso:= '('+RTRIM(extenso(iat(mtot,2),10))+')'
        mextenso:= '('+RTRIM(EXTENSO(iat(mtot,2),.T.,'real','reais'))+')'

        mlinha := MLCOUNT(mextenso,60)
        lin := 0
        FOR lin = 1 TO mlinha
                mlin := MEMOLINE(mextenso,60,lin,,10)
                DEVPOS(PROW()+1,00);DEVOUT(PADR(RTRIM(mlin),60))
        NEXT
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT('Recebemos o valor acima descrito, pelo qual damos quitacao.')
        ENDIF
        IF mdev > 0 //mdev # NIL .OR.
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Saldo Devedor: '+TRANSFORM(mdev,'999,999.99'))
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        ENDIF
        DEVPOS(PROW()+3,00);DEVOUT(PADC('----------------------------------------',58))
        DEVPOS(PROW()+1,00);DEVOUT(PADC('                 Local e data           ',58))
        DEVPOS(PROW()+3,00);DEVOUT(PADC(REPLI('-',LEN(ALLTRIM(memp_resa))+4),58))
        DEVPOS(PROW()+1,00);DEVOUT(PADC(ALLTRIM(memp_resa),58))

        IF mtipo_rel = NIL .AND. m_set[1,48] = 'S'
                DEVPOS(PROW()+4,00);DEVOUT(PADC(ALLTRIM(memp_resa),58))
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT(PADC('COMPROVANTE RECIBO PAGAMENTO',58))
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis)+'        Data do Pagamento: '+DTOC(mdat))
                DEVPOS(PROW()+1,00);DEVOUT('Cliente: '+STR(Q_cons[1,1],5)+'-'+Q_cons[1,2])
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Documento')
                DEVPOS(PROW(),15);DEVOUT('Vencimento')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('    Valor')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('   Jur+Mul')
                DEVPOS(PROW(),PCOL()+1);DEVOUT(' Valor Pago')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                i:=0
                FOR i = 1 TO LEN(m_d)
                        IF EMPTY(m_d[i])
                                LOOP
                        ENDIF
                        DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7,60))
                NEXT
                DEVPOS(PROW()+1,00);DEVOUT(REPLI('-',60))
                DEVPOS(PROW()+1,00);DEVOUT('Qtd.Doc.: '+TRANSFORM(mqtd,'99999'))
                DEVPOS(PROW(),25);DEVOUT(TRANSFORM(mvlr_parc,'999,999.99'))
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot_m,'99,999.99'))
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999,999.99'))
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        ENDIF
        DEVPOS(PROW()+m_indiv[1,16],00);DEVOUT(CHR(18))
ELSEIF m_indiv[1,9] = 'F' .OR. m_indiv[1,9] = 'G' .AND. mtipo_rel <> 'E'
        mtraco := REPLI('=',80)
        imprt(mtipo_imp,'E')
        DEVPOS(PROW()+1,00);DEVOUT(memp_resa)
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT(RTRIM(m_set[1,132])+'-'+RTRIM(m_set[1,133])+'-'+RTRIM(m_set[1,134])+'-'+RTRIM(m_set[1,19])+' - Fone: '+m_set[1,136])
        imprt(mtipo_imp,'N')
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT(PADC('RECIBO PAGAMENTO',80))
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT(PADC('DEMONSTRATIVO DE DEBITO',80))
        ENDIF
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis)+'        Data do Pagamento: '+DTOC(mdat))
        ELSE
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis))
        ENDIF
        DEVPOS(PROW(),PCOL()+2);DEVOUT(' - Oper.:'+cod_operado)
        DEVPOS(PROW()+1,00);DEVOUT('Cliente: '+STR(Q_cons[1,1],5)+'-'+Q_cons[1,2])
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        DEVPOS(PROW()+1,00);DEVOUT('Documento')
        DEVPOS(PROW(),15);DEVOUT(' Emissao')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('Vencimen')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('    Valor')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('Jur+Mul')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('Vlr.Total')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('LP')
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        i:=0
        FOR i = 1 TO LEN(m_d)
                IF EMPTY(m_d[i])
                        LOOP
                ENDIF
*               DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7,55))
                DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7))
        NEXT
        DEVPOS(PROW()+1,00);DEVOUT(REPLI('-',80))
        DEVPOS(PROW()+1,00);DEVOUT('Qtd.Doc.: '+TRANSFORM(mqtd,'99999'))
        DEVPOS(PROW(),32);DEVOUT(TRANSFORM(mtot-mtot_m,'999,999.99'))
        DEVPOS(PROW(),PCOL());DEVOUT(TRANSFORM(mtot_m,'99999.99'))
        DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999999.99'))
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
*        mextenso:= '('+RTRIM(extenso(iat(mtot,2),10))+')'
        mextenso:= '('+RTRIM(EXTenso(iat(mtot,2),.T.,'real','reais'))+')'

        mlinha := MLCOUNT(mextenso,60)
        lin := 0
        FOR lin = 1 TO mlinha
                mlin := MEMOLINE(mextenso,60,lin,,10)
                DEVPOS(PROW()+1,00);DEVOUT(PADR(RTRIM(mlin),60))
        NEXT
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        IF mtipo_rel = NIL
                DEVPOS(PROW()+1,00);DEVOUT('Recebemos o valor acima descrito, pelo qual damos quitacao.')
        ENDIF
        IF mdev > 0 //mdev # NIL .OR.
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Saldo Devedor: '+TRANSFORM(mdev,'999,999.99'))
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        ENDIF
        DEVPOS(PROW()+3,00);DEVOUT(PADC('----------------------------------------',80))
        DEVPOS(PROW()+1,00);DEVOUT(PADC('                Local e data            ',80))
        DEVPOS(PROW()+3,00);DEVOUT(PADC(REPLI('-',LEN(ALLTRIM(memp_resa))+4),80))
        DEVPOS(PROW()+1,00);DEVOUT(PADC(ALLTRIM(memp_resa),80))
        IF mtipo_rel = NIL .AND. m_set[1,48] = 'S'
                imprt(mtipo_imp,'N')
                DEVPOS(PROW()+3,00);DEVOUT(PADC(ALLTRIM(memp_resa),38))
                imprt(mtipo_imp,'C')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                imprt(mtipo_imp,'N')
                DEVPOS(PROW()+1,00);DEVOUT(PADC('COMPROVANTE RECIBO PAGAMENTO',38))
                imprt(mtipo_imp,'C')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Data: '+DTOC(mdata_sis)+'        Data do Pagamento: '+DTOC(mdat))
                DEVPOS(PROW()+1,00);DEVOUT('Cliente: '+STR(Q_cons[1,1],5)+'-'+Q_cons[1,2])
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+1,00);DEVOUT('Documento')
                DEVPOS(PROW(),15);DEVOUT(' Emissao')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Vencimen')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('    Valor')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Jur+Mul')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('Vlr.Total')
                DEVPOS(PROW(),PCOL()+1);DEVOUT('LP')
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                i:=0
                FOR i = 1 TO LEN(m_d)
                        IF EMPTY(m_d[i])
                                LOOP
                        ENDIF
                        DEVPOS(PROW()+1,00);DEVOUT(SUBSTR(m_d[i],7))
                NEXT
                DEVPOS(PROW()+1,00);DEVOUT(REPLI('-',60))
                DEVPOS(PROW()+1,00);DEVOUT('Qtd.Doc.: '+TRANSFORM(mqtd,'99999'))
                DEVPOS(PROW(),32);DEVOUT(TRANSFORM(mtot-mtot_m,'999,999.99'))
                DEVPOS(PROW(),PCOL());DEVOUT(TRANSFORM(mtot_m,'99999.99'))
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(mtot,'999999.99'))
                DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                DEVPOS(PROW()+m_indiv[1,16],00);DEVOUT(CHR(18))
        ENDIF
        SETPRC(00,00)
        EJECT
ELSEIF mtipo_rel = 'E'
        mtraco := REPLI('=',80)
        mtot_acord := i := 0
        FOR i = 1 TO LEN(m_dupr)
                mbaixa := 'S'
                IF m_pos[i,2] <> 'X'
                        LOOP
                ENDIF
                IF m_set[1,22] = 'S'
                        imprt(m_indiv[1,21],'E')
                        DEVPOS(PROW(),00);DEVOUT(memp_resa)
                        imprt(m_indiv[1,21],'C')
                        DEVPOS(PROW()+1,00);DEVOUT(mend_firm+'-'+mcid_firm+  +'Fone: '+mfone_firm)
                        DEVPOS(PROW()+1,00);DEVOUT('Inscr. '+minsc_firm+'   CNPJ: '+mcgc_firm)
                        imprt(m_indiv[1,21],'N')
                        @ PROW()+1,00 SAY mtraco
                        @ PROW()+1,00 SAY ' '
                ENDIF
                imprt(m_indiv[1,21],'N')
                ver_cli(VAL(aret[i,7]),,,'*')
                @ PROW(),00 SAY 'Cliente......:'
                @ PROW(),PCOL()+1 SAY aret[i,7]
                @ PROW(),PCOL()+1 SAY aret[i,8]
                @ PROW()+1,00 SAY 'Nome Fantasia:'
                @ PROW(),PCOL()+1 SAY cli->nome
                @ PROW()+1,00 SAY 'Responsavel..:'
                @ PROW(),PCOL()+1 SAY cli->comprado
                @ PROW()+1,00 SAY 'End.: '+cli->endereco+', '+RTRIM(cli->numero)+IF(! EMPTY(RTRIM(cli->complemento)),' - Compl.:'+RTRIM(cli->complemento),'')
                @ PROW()+1,00 SAY 'Bairro: '+RTRIM(cli->bairro)+'-Cidade: '+RTRIM(cli->cidade)+'-'+cli->uf
                @ PROW()+1,00 SAY 'CEP:'+cli->cep+'- Fone:'+cli->tel1
                imprt(m_indiv[1,21],'N')
                IF ! EMPTY(cli->cgc)
                        @ PROW()+1,00 SAY 'CNPJ:'
                        DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(cli->cgc,'@@R 99.999.999/9999-99')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(' - Insc.: '+cli->insc)
                ELSE
                        @ PROW()+1,00 SAY 'CPF:'
                        DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(cli->cpf,'@@R 999.999.999-99')
                ENDIF
                @ PROW()+1,00 SAY mtraco
                @ PROW()+1,00 SAY ''
                imprt(m_indiv[1,21],'E')
                @ PROW(),00 SAY IF(ver_serie()='141447','NOTA PROMISSORIA:','DUPLICATA No.:')+aret[i,4]
                imprt(m_indiv[1,21],'N')
                @ PROW()+1,00 SAY 'Emissao:'
                @ PROW(),09 SAY aret[i,10]
                @ PROW(),20 SAY 'Vencimento:'
                @ PROW(),32 SAY aret[i,11]
                @ PROW()+1,00 SAY mtraco
                DEVPOS(PROW()+1,00);DEVOUT(PADC('Valor R$: ('+LTRIM(TRANSFORM(aret[i,19],'99,999,999.99'))+')',80))
*                mextenso:= '('+RTRIM(extenso(dupr->valor,10))+')'
                mextenso:= '('+RTRIM(EXTenso(iat(aret[i,19],2),.T.,'real','reais'))+')'

                mlinha := MLCOUNT(mextenso,80)
                FOR lin = 1 TO mlinha
                        mlin := MEMOLINE(mextenso,80,lin,,10)
                        DEVPOS(PROW()+1,00);DEVOUT(PADR(RTRIM(mlin),80))
                NEXT
                @ PROW()+1,00 SAY mtraco
                @ PROW()+1,00 SAY 'Descricao:'
                @ PROW(),00 SAY 'Descricao:'
                mextenso:= m_set[1,29]+m_set[1,30]+m_set[1,31]+m_set[1,32]
                mlinha := 0
                mlinha := MLCOUNT(mextenso,60)
                lin := 0
                FOR lin = 1 TO mlinha
                        mlin := MEMOLINE(mextenso,80,lin,,10)
                        IF mlin # ' '
                                DEVPOS(PROW()+1,00);DEVOUT(RTRIM(mlin))
                        ENDIF
                NEXT
                @ PROW()+1,00 SAY mtraco
                imprt(m_indiv[1,21],'N')
                DEVPOS(PROW()+1,00);DEVOUT('OBSERVACAO:')
                DEVPOS(PROW(),00);DEVOUT('OBSERVACAO:')
                DEVPOS(PROW()+1,00);DEVOUT('Maiores informacoes dirija-se ao '+memp_resa+'.')
                imprt(m_indiv[1,21],'C')
                DEVPOS(PROW()+1,00);DEVOUT('(Para quitacao da mesma, pois a nao quitacao implicara no bloqueio do seu credito e a inclusao no SPC e SERASA)')
                imprt(m_indiv[1,21],'N')
                @ PROW()+1,00 SAY mtraco
                @ PROW()+7,00 SAY ' '
                mtot_acord := mtot_acord + dupr->valor
        NEXT
        // COMPROVANTE DE RECEBIMENTOS
        imprt(m_indiv[1,21],'E')
        DEVPOS(PROW(),00);DEVOUT(memp_resa)
        imprt(m_indiv[1,21],'C')
        DEVPOS(PROW()+1,00);DEVOUT(mend_firm+'-'+mcid_firm+  +'Fone: '+mfone_firm)
        DEVPOS(PROW()+1,00);DEVOUT('Inscr. '+minsc_firm+'   CNPJ: '+mcgc_firm)
        imprt(m_indiv[1,21],'N')
        @ PROW()+1,00 SAY mtraco
        @ PROW()+1,00 SAY PADC('COMPROVANTE DE RECEBIMENTO DOS BOLETOS',80)
        @ PROW()+1,00 SAY mtraco
        mextenso:= 'Eu,'+aret[1,7]+'-'+RTRIM(aret[1,8])+' portador do '
        IF ! EMPTY(cli->cgc)
                mextenso := mextenso + 'CNPJ:'+TRANSFORM(cli->cgc,'99.999.999/9999-99')
        ELSE
                mextenso := mextenso + 'CPF:'+TRANSFORM(cli->cpf,'999.999.999-99')
        ENDIF
        mextenso := mextenso + ', Estou ciente e de acordo que a nao quitacao do valor de R$:'+ALLTRIM(TRANSFORM(mtot_acord,'999,999.99'))+' no vencimento e valor determinado nos documentos abaixo citados, ocorrera a inclusao no SPC e SERASA.'
        mlinha := MLCOUNT(mextenso,80)
        FOR lin = 1 TO mlinha
                mlin := MEMOLINE(mextenso,80,lin,,10)
                DEVPOS(PROW()+1,00);DEVOUT(PADR(RTRIM(mlin),80))
        NEXT
        @ PROW()+1,00 SAY mtraco
        @ PROW()+1,00 SAY 'Relacao dos Documentos'
        @ PROW()+1,00 SAY REPLI('-',80)
        i := 0
        FOR i = 1 TO LEN(m_dupr)
                mbaixa := 'S'
                IF m_pos[i,2] <> 'X'
                        LOOP
                ENDIF
                @ PROW()+1,00 SAY 'No.Doc.:'+m_pos[i,7]+' Venc.:'+DTOC(m_pos[i,8])+' Valor: '+TRANSFORM(m_pos[i,3],'999,999.99')
        NEXT
        @ PROW()+1,00 SAY REPLI('-',80)
        @ PROW()+3,00 SAY PADC(RTRIM(m_set[1,134])+', ....../ ....../ ........',80)
        @ PROW()+3,00 SAY PADC('..............................................',80)
        @ PROW()+1,00 SAY PADC('            Assinatura do Cliente             ',80)
        @ PROW()+7,00 SAY ' '
        EJECT
ENDIF
imprt(mtipo_imp,'N')
SET DEVICE TO SCREEN;SET PRINT TO;SET PRINT OFF
conf_impressao('DEMO_DEB.REL')
RETURN NIL
***************************  F I M ******************************************
* FUNCAO P/CONSULTAR CONTA DESPESA
********************************
FUNCTION f9_conta(mop)
*****************
LOCAL lci,cci,lba,cba,msele,morde,men,;
      oconsprod,ocolprod[3],i,nkey,opcao,;
      mdesc1 := SPACE(25),mtipo  := SPACE(1),tela1
MEMVAR mcodconta
lci := cci := 00
lba := 40
cba := 60
op_tela(00,00,45,60,memp_resa+SPACE(10)+"CADASTRO DE CONTA DESPESAS",,"*")

msele := SELE()
morde := INDEXORD()
IF ! AbriArq('sacdesp','cdesp');RETURN NIL;ENDIF
*************
SELE('cdesp');ORDSETFOCUS(1)
*************
setcor(3)
oconsprod := TBROWSEDB(lci,cci,lba,cba)
ocolprod[1] := TBCOLUMNNEW('Codigo',{||TRANSFORM(cdesp->codigo,'9999')})
ocolprod[2] := TBCOLUMNNEW('Descricao da Despesa',{||cdesp->desc1})
ocolprod[3] := TBCOLUMNNEW('Tipo',{||cdesp->tipo})
i:=0
FOR i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
WHILE .T.
        IF mop = '*'
                mensagem('<P>esquisa <I>nclusao <ENTER>p/Alterar e Excluir <ESC>Retornar')
        ELSE
                mensagem('<PGUP> <PGDN> <P>esquisa <I>nclusao <ENTER> Conf. <ESC>Retornar')
        ENDIF
        botao(lba+1,cci,lba+3,cba,,' Conta Despesas ')
        nkey := 0
        WHILE nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                nkey := INKEY(0)
        END
        IF nkey == K_ESC
                EXIT
        ELSEIF nkey == K_ENTER
                IF mop = '*'
                        opcao := mensagem1('Deseja <A>lterar <E>xcluir:','A','A,E')
                        IF LASTKEY() = 27
                                LOOP
                        ELSEIF opcao = 'A'
                                mensagem('Digite a descricao - <ESC> p/Retornar')
                                mcodconta := SPACE(4)
                                mdesc1 := SPACE(25)
                                mtipo  := SPACE(1)
                                botao(lba+1,cci,lba+3,cba,,' Inclusao Despesas ')
                                DEVPOS(lba+2,cci+2);DEVOUT('Cod.:')
                                DEVPOS(lba+2,cci+15);DEVOUT('Descricao:')
                                DEVPOS(lba+2,cci+53);DEVOUT('Tipo:')
                                setcor(3)
                                DEVPOS(lba+2,cci+8);DEVOUTPICT(cdesp->codigo,'9999')
                                setcor(1)
                                IF LASTKEY() = 27
                                        EXIT
                                ENDIF
                                mdesc1 := cdesp->desc1
                                mtipo  := cdesp->tipo
                                @ lba+2,cci+26 GET mdesc1 PICT '@!'
                                @ lba+2,cci+58 GET mtipo PICT '@!' VALID mtipo $ 'D,V,F,I, ' .AND. lim_get() WHEN men_get(0,0,'<V>ariavel <F>ixas  <I>nvestimento  <D>esconto Func.  < >em branco')
                                READ
                                IF LASTKEY() = 27 .OR. EMPTY(mdesc1)
                                        EXIT
                                ENDIF
                                opcao := op_simnao('S','Confirma Alteracao:')
                                IF opcao = 'N'
                                        LOOP
                                ENDIF
                                ccomm :="UPDATE sacdesp SET desc1 = "+sr_cdbvalue(mdesc1) +",tipo = "+sr_cdbvalue(mtipo) +" WHERE codigo = "+sr_cdbvalue(cdesp->codigo)
                                sr_getconnection():exec(ccomm,,.f.)
                                sr_getconnection():exec('COMMIT',,.f.)
                        ELSEIF opcao = 'E'
                                opcao := mensagem1('Confirma a Exclusao da Conta Despesa','N','S,N')
                                IF opcao = 'S'
                                        sr_getconnection():exec("DELETE FROM sacdesp WHERE codigo = "+sr_cdbvalue(cdesp->codigo),,.f.)
                                        sr_getconnection():exec("COMMIT",,.f.)
                                        sr_getconnection():exec("DELETE FROM sacdesp WHERE SR_DELETED = 'T'",,.f.)
                                        sr_getconnection():exec("COMMIT",,.f.)
                                ENDIF
                        ENDIF
                        setcor(3)
                        oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||TRANSFORM(cdesp->codigo,'9999')})
                        ocolprod[2] := TBCOLUMNNEW('Descricao da Despesa',{||cdesp->desc1})
                        ocolprod[3] := TBCOLUMNNEW('Tipo',{||cdesp->tipo})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ELSE
                        mcodconta := cdesp->codigo
                        EXIT
                ENDIF
        ELSEIF nkey = 105 .OR. nkey = 73
                WHILE .T.
                        mensagem('Digite o Codigo da despesa e faca a descricao - <ESC> p/Retornar')
                        mcodconta := SPACE(4)
                        mdesc1 := SPACE(25)
                        mtipo  := SPACE(1)
                        botao(lba+1,cci,lba+3,cba,,' Inclusao Despesas ')
                        DEVPOS(lba+2,cci+2);DEVOUT('Cod.:')
                        DEVPOS(lba+2,cci+15);DEVOUT('Descricao:')
                        DEVPOS(lba+2,cci+53);DEVOUT('Tipo:')
                        @ lba+2,cci+8 GET mcodconta PICT '9999'
                        READ
                        IF LASTKEY() = 27
                                EXIT
                        ENDIF
                        IF EMPTY(mcodconta)
                                LOOP
                        ENDIF
                        *************
                        SELE('cdesp');ORDSETFOCUS(1)
                        GO TOP
                        *************
                        IF cdesp->(DBSEEK(mcodconta))
                                atencao('Conta Despesa ja Cadastrada')
                                LOOP
                        ENDIF
                        @ lba+2,cci+26 GET mdesc1 PICT '@!'
                        @ lba+2,cci+58 GET mtipo PICT '@!' VALID mtipo $ 'D,V,F,I, ' .AND. lim_get() WHEN men_get(0,0,'<V>ariavel <F>ixas  <I>nvestimento  <D>esconto Func.  < >em branco')
                        READ
                        IF LASTKEY() = 27 .OR. EMPTY(mdesc1)
                                LOOP
                        ENDIF
                        opcao := op_simnao('S','Confirma Inclusao:')
                        IF opcao = 'N'
                                LOOP
                        ENDIF
                        IF ADIREG()
                                Cdesp-> codigo := mcodconta
                                Cdesp-> desc1 := mdesc1
                                Cdesp-> tipo  := mtipo
                                COMMIT
                                UNLOCK
                        ELSE
                                atencao('Nao foi possivel acessar o Arquivo !!!')
                                ORDSETFOCUS(3)
                                LOOP
                        ENDIF
                        setcor(3)
                        oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||TRANSFORM(cdesp->codigo,'9999')})
                        ocolprod[2] := TBCOLUMNNEW('Descricao da Despesa',{||cdesp->desc1})
                        ocolprod[3] := TBCOLUMNNEW('Tipo',{||cdesp->tipo})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDDO
        ELSE
                setcor(3)
                IF genkey(oconsprod,nkey,'cdesp')
                        oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
                        ocolprod[1] := TBCOLUMNNEW('Codigo',{||TRANSFORM(cdesp->codigo,'9999')})
                        ocolprod[2] := TBCOLUMNNEW('Descricao da Despesa',{||cdesp->desc1})
                        ocolprod[3] := TBCOLUMNNEW('Tipo',{||cdesp->tipo})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
CLEAR GETS
wvw_lclosewindow()
IF nkey == K_ESC
        RETURN NIL
ELSE
        RETURN mcodconta
ENDIF
RETURN NIL
******************************* f i m *********************************************
* VERIFICA CODIGO
******************
FUNCTION ver_cod(vgru,li,ci,t,mzero,p)
**********************
LOCAL msele,morde,posicao:=0

IF ((mzero <> NIL .OR. mzero = 0) .AND. mzero <> 1) .AND. EMPTY(vgru)
        RETURN .T.
ENDIF

msele := SELE()
morde := INDEXORD()
IF RECNO() > 0 .AND. msele > 0
        posicao := RECNO()
ENDIF
IF ! AbriArq('sacmerc','merc');RETURN NIL;ENDIF
**************
SELE('merc');ORDSETFOCUS(1)
GO TOP
**************
SEEK STRZERO(vgru,5)

IF t = .T. .AND. FOUND()
        vgru := 0
        atencao('Este Codigo: '+STRZERO(vgru,5)+' ja Cadastrado !!!')
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        IF posicao > 0 .AND. msele > 0 .AND. morde > 0 .AND. msele <> SELE('merc')
                GO posicao
        ENDIF
        RETURN .F.
ENDIF
IF ! FOUND()
        vgru := 0
        IF p = NIL
                atencao('Codigo: '+STRZERO(vgru,5)+' nao Cadastrado !!!')
        ENDIF
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        IF posicao > 0 .AND. msele > 0 .AND. morde > 0 .AND. msele <> SELE('merc')
                GO posicao
        ENDIF
        RETURN .F.
ENDIF
IF li = NIL
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        IF posicao > 0 .AND. msele > 0 .AND. morde > 0 .AND. msele <> SELE('merc')
                GO posicao
        ENDIF
        RETURN .T.
ENDIF
setcor(3)
DEVPOS(li,ci);DEVOUT(merc->merc)
setcor(1)
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
IF posicao > 0 .AND. msele > 0 .AND. morde > 0 .AND. msele <> SELE('merc')
        GO posicao
ENDIF
RETURN .T.
********************** F I M ********************************
* FUNCAO P/CONSULTAR DOCUMENTOS A APAGAR
********************************
FUNCTION cons_apag(mop)
***********************
LOCAL tela,tela1,lci,cci,lba,cba,msele,morde,men,;
      mdias_atras:=0,mmulta:=0,mjuros:=0,mvlpago:=0,;
      oconsprod,ocolprod[9],i,nkey,opcao
MEMVAR mduplicata,mcod_cli,mtipo,mdata_sis
lci := cci := 0
lba := 23
cba := 78

msele := SELE()
morde := INDEXORD()
*************
IF ! AbriArq('sacdupp','dupp');RETURN NIL;ENDIF
SELE('dupp');ORDSETFOCUS(2)
*************
op_tela(lci,cci,lba,cba,' Consulta de DOCUMENTOS CONTAS APAGAR ','*')
oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
ocolprod[1] := TBCOLUMNNEW('Tipo',{||dupp->tipo})
ocolprod[2] := TBCOLUMNNEW('No.Docuemnto',{||dupp->duplicata})
ocolprod[3] := TBCOLUMNNEW('Valor Doc.',{||TRANSFORM(dupp->valor,'999,999.99')})
ocolprod[4] := TBCOLUMNNEW('Vencimento',{||DTOC(dupp->venc)})
ocolprod[5] := TBCOLUMNNEW('Emissao',{||DTOC(dupp->emissao)})
ocolprod[6] := TBCOLUMNNEW('Data Pag.',{||dupp->datpag})
ocolprod[7] := TBCOLUMNNEW('Cod.',{||dupp->fornec})
ocolprod[8] := TBCOLUMNNEW('Forncedor/Despesas',{||dupp->cliente})
ocolprod[9] := TBCOLUMNNEW('Tipo Conta',{||dupp->tip_for})
i:=0
FOR i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
WHILE .T.
        IF mop = '*'
                mensagem('< > <P>esquisa <I>nclusao <ENTER>p/Alterar e Excluir <ESC>Retornar')
        ELSE
                mensagem('<> <PGUP> <PGDN> <P>esquisa <I>nclusao <ENTER> Conf. <ESC>Retornar')
        ENDIF
        nkey := 0
        WHILE nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                nkey := INKEY(0)
        END
        IF nkey == K_ESC
                CLEAR GETS
                EXIT
        ELSEIF nkey == K_ENTER
                mduplicata := dupp->duplicata
                mcod_cli   := VAL(dupp->fornec)
                mtipo      := dupp->tipo
                IF mop = '*'
                        mdias_atras := mmulta := mjuros := mvlpago := 0
                        mdias_atras := mdata_sis-dupp->venc
                        mvlpago=dupp->valor+mjuros+mmulta
                        tela1 := SAVESCREEN(00,00,24,79)
                        botao(05,00,22,79,,' Codigo da Empresa: '+dupp->empresa+'  ')
                        DEVPOS(06,01);DEVOUT('Cliente.............:')
                        DEVPOS(07,01);DEVOUT('No.da Documento ....:')
                        DEVPOS(08,01);DEVOUT('Data Emissao........:')
                        DEVPOS(09,01);DEVOUT('Data Vencimento.....:')
                        DEVPOS(10,01);DEVOUT('Vlr. Documento ...R$:')

                        DEVPOS(11,01);DEVOUT('Operador............:')
                        DEVPOS(12,01);DEVOUT('OBS.:')

                        setcor(3)
                        DEVPOS(06,23);DEVOUT(dupp->fornec+'-'+dupp->cliente)
                        DEVPOS(07,23);DEVOUT(dupp->tipo+dupp->duplicata)
                        DEVPOS(08,23);DEVOUT(DTOC(dupp->emissao))
                        DEVPOS(09,23);DEVOUT(DTOC(dupp->venc))
                        DEVPOS(10,23);DEVOUT(TRANSFORM(dupp->valor,'9,999,999.99'))
                        DEVPOS(11,23);DEVOUT(dupp->operador)
                        DEVPOS(12,07);DEVOUT(dupp->obs)

                        IF ! EMPTY(dupp->datpag) .OR. dupp->pago <> ' '
                                setcor(1)
                                DEVPOS(13,01);DEVOUT('Data Pagamento .....:')
                                DEVPOS(14,01);DEVOUT('Pago efetuado Com...:')
                                DEVPOS(15,01);DEVOUT('Juros Pago .......R$:')
                                DEVPOS(16,01);DEVOUT('Desconto .........R$:')
                                DEVPOS(17,01);DEVOUT('Valor Pago .......R$:')
                                setcor(3)
                                DEVPOS(13,23);DEVOUT(DTOC(dupp->datpag))
                                DEVPOS(14,23);DEVOUT(STRZERO(dupp->datpag-dupp->venc,3)+' Dias.')
                                DEVPOS(15,23);DEVOUT(TRANSFORM(dupp->juros,'9,999,999.99'))
                                DEVPOS(16,23);DEVOUT(TRANSFORM(dupp->desconto,'9,999,999.99'))
                                DEVPOS(17,23);DEVOUT(TRANSFORM(dupp->vlpago,'9,999,999.99'))
                        ELSE
                                setcor(1)
                                DEVPOS(13,01);DEVOUT('Prazo estipulado....:')
                                DEVPOS(15,01);DEVOUT('Vlr. Multa+Juros..R$:')
                                DEVPOS(16,01);DEVOUT('Vlr. a Pagar......R$:')
                                IF mdata_sis<dupp->venc
                                        setcor(1)
                                        DEVPOS(14,01);DEVOUT('Faltam p/ Vencimento:')
                                        setcor(3)
                                        DEVPOS(14,23);DEVOUT(STRZERO(dupp->venc-mdata_sis,3)+' Dias.')
                                ELSE
                                        setcor(1)
                                        DEVPOS(14,01);DEVOUT('Atrazo do vencimento:')
                                        setcor(3)
                                        DEVPOS(14,23);DEVOUT(STRZERO(mdata_sis-dupp->venc,3)+' Dias.')
                                ENDIF
                                setcor(3)
                                DEVPOS(13,23);DEVOUT(STRZERO(dupp->venc-dupp->emissao,3)+' Dias.')
                                DEVPOS(15,23);DEVOUT(TRANSFORM(mmulta+mjuros,'9,999,999.99'))
                                DEVPOS(16,23);DEVOUT(TRANSFORM(mvlpago,'9,999,999.99'))
                        ENDIF
                        setcor(1)
                        mensagem('Pressione qualquer tecla p/retornar')
                        INKEY(0)
                        RESTSCREEN(00,00,24,79,tela1)
                        LOOP
                ELSE
                        CLEAR GETS
                        EXIT
                ENDIF
                GO TOP
                oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
                ocolprod[1] := TBCOLUMNNEW('Tipo',{||dupp->tipo})
                ocolprod[2] := TBCOLUMNNEW('No.Docuemnto',{||dupp->duplicata})
                ocolprod[3] := TBCOLUMNNEW('Valor Doc.',{||TRANSFORM(dupp->valor,'999,999.99')})
                ocolprod[4] := TBCOLUMNNEW('Vencimento',{||DTOC(dupp->venc)})
                ocolprod[5] := TBCOLUMNNEW('Emissao',{||DTOC(dupp->emissao)})
                ocolprod[6] := TBCOLUMNNEW('Data Pag.',{||dupp->datpag})
                ocolprod[7] := TBCOLUMNNEW('Cod.',{||dupp->fornec})
                ocolprod[8] := TBCOLUMNNEW('Forncedor/Despesas',{||dupp->cliente})
                ocolprod[9] := TBCOLUMNNEW('Tipo Conta',{||dupp->tip_for})
                i:=0
                FOR i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSE
                IF genkey(oconsprod,nkey,'dupp')
                        oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
                        ocolprod[1] := TBCOLUMNNEW('Tipo',{||dupp->tipo})
                        ocolprod[2] := TBCOLUMNNEW('No.Docuemnto',{||dupp->duplicata})
                        ocolprod[3] := TBCOLUMNNEW('Valor Doc.',{||TRANSFORM(dupp->valor,'999,999.99')})
                        ocolprod[4] := TBCOLUMNNEW('Vencimento',{||DTOC(dupp->venc)})
                        ocolprod[5] := TBCOLUMNNEW('Emissao',{||DTOC(dupp->emissao)})
                        ocolprod[6] := TBCOLUMNNEW('Data Pag.',{||dupp->datpag})
                        ocolprod[7] := TBCOLUMNNEW('Cod.',{||dupp->fornec})
                        ocolprod[8] := TBCOLUMNNEW('Forncedor/Despesas',{||dupp->cliente})
                        ocolprod[9] := TBCOLUMNNEW('Tipo Conta',{||dupp->tip_for})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
wvw_lclosewindow()
CLEAR GETS
RETURN NIL
******************************* f i m *********************************************
********************************
* FIM DA TECLA DE ATALHO
********************************
FUNCTION fimset()
*****************
SET KEY -2 TO
SET KEY -4 TO
SET KEY -5 TO
SET KEY -6 TO
SET KEY -7 TO
SET KEY -8 TO
SET KEY -40 TO
RETURN NIL
****************************** F I M **************************************
********************
* VALOR DO PEDIDO
***********************
FUNCTION juros_ped(mnum)
************************
LOCAL msele,morde,mvalor_p,malor_v,mvlr

msele := SELE()
morde := INDEXORD()

IF ! AbriArq('sacped_s','ped_s');RETURN NIL;ENDIF
***************
SELE('ped_s');ORDSETFOCUS(1)
GO TOP
***************
mvalor_p:=mvalor_v := mvlr := 0
IF ped_s->(DBSEEK(mnum))
        WHILE mnum = ped_s->pnum_ped .AND. ! EOF()
                mvalor_p := mvalor_p + (ped_s->pquantd*ped_s->ppre_venda)
                mvalor_v := mvalor_v + (ped_s->pquantd*ped_s->pvlr_fat)
                SKIP
        ENDDO
ENDIF
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
mvlr := mvalor_v - mvalor_p
RETURN mvlr
***************************** F I M ****************************************
* VER TOTAL DE COMPRAS
*************************
FUNCTION ver_compras(mcod)
**************************
LOCAL ver_compras:={}
sr_getconnection():exec("SELECT SUM(valor) FROM sacdupr WHERE fornec = "+sr_cdbvalue(STRZERO(mcod,5))+" AND datpag IS NULL",,.t.,@ver_compras)
RETURN ver_compras[1,1]
******************************** F I M ******************************
* VERIFICA O PEDIDO
*******************
FUNCTION ver_ped(mnum,mcodprod,mmen,mtpo,mver)
**********************************************
LOCAL msele,morde

msele := SELE()
morde := INDEXORD()

IF ! AbriArq('sacped_s','ped_s');RETURN NIL;ENDIF
***************
SELE('ped_s');ORDSETFOCUS(1)
GO TOP
***************
IF mver <> NIL
        IF ped_s->(DBSEEK(mnum))
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .T.
        ELSE
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .F.
        ENDIF
ENDIF

IF mcodprod = NIL
        IF ped_s->(DBSEEK(mnum))
                WHILE mnum = ped_s->pnum_ped .AND. mtpo <> '*'
                        DEVPOS(PROW()+1,00);DEVOUT('Produto: '+ped_s->pcod_merc+'-'+ped_s->pmerc+'  Quantd.: '+TRANSFORM(ped_s->pquantd,'99,999.99')+' Pr.Unit.: '+TRANSFORM(ped_s->pvlr_fat,'99,999.99')+' Total: '+TRANSFORM(ped_s->pquantd*ped_s->pvlr_fat,'999,999.99') )
                        SKIP
                ENDDO
        ELSE
                IF mmen <> NIL
                        atencao('Nao existe este PEDIDO em nossos arquivos')
                        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                        RETURN .F.
                ENDIF
        ENDIF
ELSE
        IF ! ped_s->(DBSEEK(mnum+mcodprod))
                atencao('Este Produto nao existe neste PEDIDO')
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .F.
        ENDIF
ENDIF
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
RETURN .T.
******************************** f i m **********************************
* FUNCAO P/CONSULTAR CLIENTES
******************************
#include "inkey.ch"              // constantes de codigos das teclas
FUNCTION f7_cli(mop)
*****************
LOCAL f7lci,f7cci,f7lba,f7cba,f7msele,f7morde,mprg:='F7_CLI',;
      oconsprod,ocolprod[6],f7i,f7nkey,f7opcao,mcodcli,mponto,mmens:='',c_cli:={},m_cli:={},;
      mcidade:=SPACE(20),point:=0,mcpfcnpj,mtelefone,mcolor,f7_contrato,mpesquisa:=SPACE(50),;
      nPBid1,nPBid2,nPBid3
MEMVAR mcod_cli
PRIVATE mcompras:=0

IF ! ver_nivel(mprg,'CONSULTA DE CLIENTES','12345',nivel_acess,,'AMBIE')
        RELEASE ALL
        wvw_lclosewindow()
        RETURN NIL
ENDIF

f7lci := f7cci := 0
f7lba := 37
f7cba := 120

f7msele := SELE()
f7morde := INDEXORD()
IF ! AbriArq('saccli','cli');RETURN NIL;ENDIF
IF ! AbriArq('sacdupr','dupr');RETURN NIL;ENDIF
/*
*************
SELE('cli');ORDSETFOCUS(2)
*************
mponto := RECNO()
*************
SELE('cli');ORDSETFOCUS(1)
GO BOTT
mcodcli:=STR(cli->cod_cli,5)
*************
*/
*************
SELE('cli');ORDSETFOCUS(2)
//GO mponto
*************
setcor(1)
op_tela(00,01,52,120,memp_resa+SPACE(10)+' CLIENTES              -  Quantidades: '+TRANSFORM(LASTREC(),'999,999'),,1)
oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba,'cli')
//oconsprod:colorspec := 'B/W,W/B,,,N/W'
//oconsprod:colorspec :="N*/W , W+/BG , W+/B , R+*/W , W*/W+ , RJ/W , W/B , R/N , B+*/W , RW*/W , N+*/W, BG+*/W, RG+*/W"
//          1       2      3      4       5       6     7     8      9       10      11     12      13
mcolor := "B/W*+ , W+/R+ , W*/B , R+/W+ , W*/W+ , RJ/W , W/B , R/N , B+*/W , RW*/W , N+*/W, BG+*/W, RG+*/W"
oconsprod:colorspec := mcolor

oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP  := CHR(179)
oconsprod:gotopblock({|| dbGoTop()})
oconsprod:gobottomblock({|| dbGoBottom()})
***brw:skipblock({|_1| MOV_PTR(_1)})
oconsprod:skipBlock:= {|nSkip| DbSkipper(nSkip) }

ocolprod[1] := TBCOLUMNNEW('Razao Social',{||cli->razao})
ocolprod[2] := TBCOLUMNNEW('Nome Fantasia',{||cli->nome})
ocolprod[3] := TBCOLUMNNEW('Cod.',{||STR(cli->cod_cli,5)})
ocolprod[4] := TBCOLUMNNEW('Tipo',{||cli->tipo})
ocolprod[5] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(cli->cgc),'CNPJ: '+TRANSFORM(cli->cgc,'@@R 99.999.999/9999-99'),'CPF: '+TRANSFORM(cli->cpf,'@@R 999.999.999-99     '))})
ocolprod[6] := TBCOLUMNNEW('Ult.Atua.',{||DTOC(cli->data_atu)})
f7i:=0
FOR f7i=1 TO LEN(ocolprod)
        //oconsprod:ColorBlock := { || iif( oconsprod:RowPos % 2 > 0, {1,2},{3,4} ) }
        //oconsprod:ColorBlock := { || if ( mod(recno())>0, {1,2},{3,4} ) }
        oconsprod:ADDCOLUMN(ocolprod[f7i])
        //oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S','r/W,W/r,,,r/W*',{2,4})}")
        //oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")
        oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")

NEXT
WVW_SetMousePos(,00,00)
WVW_SetMouseMove(,.F.)
WHILE .T.
        WvW_PBSetFont( NIL, "Courier New", 15, 0,)
        nPBid := wvw_pbCreate(NIL,39,100,40,110, 'CONTRATOS',NIL,{||contratos(cli->cod_cli)})
        nPBid1 := wvw_pbCreate(NIL,42,100,43,110, 'ALTERACAO',NIL,{||sac131(cli->cod_cli)})
        nPBid2 := wvw_pbCreate(NIL,45,100,46,110, 'DOCUMENTO',NIL,{||con244(cli->cod_cli)})
        //WVW_PBEnable( NIL, nPBId, .T. )
        exibi_prg('F7_CLI')
        f7nkey := 0
        WHILE f7nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                mcompras := 0
                mcompras := ver_compras(cli->cod_cli)
                //mmens := ver_debito(cli->cod_cli)
                //botao(f7lba+1,f7cci,f7lba+7,f7cba,,' Detalhe '+IF(cli->bloqueio='S',' *** CREDITO BLOQUEADO *** ',IF(! EMPTY(mmens),mmens,'')))
                botao(f7lba+1,f7cci,52,f7cba)
                setcor(3)
                IF cli->bloqueio='S'
                        DEVPOS(ROW(),COL()+30);DEVOUT(' *** CREDITO BLOQUEADO EM '+DTOC(cli->data_bloq)+' *** ')
                ELSE
                        DEVPOS(ROW(),COL()+30);DEVOUT('                                                       ')
                ENDIF
                DEVPOS(f7lba+2,f7cci+1);DEVOUT('End.:')
                DEVPOS(f7lba+2,f7cci+50);DEVOUT('Bairro:')
                DEVPOS(f7lba+3,f7cci+1);DEVOUT('Cidade:')
                DEVPOS(f7lba+3,f7cci+30);DEVOUT('UF:')
                DEVPOS(f7lba+3,f7cci+37);DEVOUT('Tel.:')
                DEVPOS(f7lba+3,f7cci+57);DEVOUT('Tel.:')
                DEVPOS(f7lba+4,f7cci+1);DEVOUT('Limite:')
                DEVPOS(f7lba+4,f7cci+21);DEVOUT('Saldo Devedor:')
                DEVPOS(f7lba+4,f7cci+48);DEVOUT('Saldo:')
                DEVPOS(f7lba+5,f7cci+1);DEVOUT('Tabela de Cond.Pagamento:')
                DEVPOS(f7lba+5,f7cci+57);DEVOUT('Vendedor:')
                DEVPOS(f7lba+6,f7cci+1);DEVOUT('Email.....:')
                DEVPOS(f7lba+7,f7cci+1);DEVOUT('Observacao:')
                setcor(1)
                DEVPOS(f7lba+2,f7cci+6);DEVOUT(cli->endereco+', '+RTRIM(cli->numero)+IF(! EMPTY(RTRIM(cli->complemento)),' - Compl.:'+RTRIM(cli->complemento),''))
                DEVPOS(f7lba+2,f7cci+57);DEVOUT(cli->bairro)
                DEVPOS(f7lba+3,f7cci+8);DEVOUT(cli->cidade)
                DEVPOS(f7lba+3,f7cci+33);DEVOUT(cli->uf)
                DEVPOS(f7lba+3,f7cci+42);DEVOUT(cli->tel1)
                DEVPOS(f7lba+3,f7cci+62);DEVOUT(cli->tel2)
                DEVPOS(f7lba+4,f7cci+9);DEVOUTPICT(cli->limite,'999,999.99')
                DEVPOS(f7lba+4,f7cci+36);DEVOUTPICT(mcompras,'999,999.99')
                DEVPOS(f7lba+4,f7cci+55);DEVOUTPICT(cli->limite-mcompras,'999,999.99')
                DEVPOS(f7lba+5,f7cci+27);DEVOUT(cli->cod_cond)
                DEVPOS(f7lba+5,f7cci+67);DEVOUT(cli->codvend)
                ver_cond(VAL(cli->cod_cond),f7lba+5,f7cci+31,'*')
                DEVPOS(f7lba+6,f7cci+13);DEVOUT(cli->email)
                DEVPOS(f7lba+7,f7cci+13);DEVOUT(cli->obs)
                DEVPOS(f7lba+8,f7cci+1);DEVOUT(cli->l_obs1)
                DEVPOS(f7lba+9,f7cci+1);DEVOUT(cli->l_obs2)
                IF ver_aniv(cli->cod_cli,1)
                        setcor(7,'*')
                        DEVPOS(f7lba+10,f7cci+33);DEVOUT(' ANIVERSARIANTE DO MES ')
                ENDIF
                IF mop = '*'
                        mensagem('<P>esquisa - <I>nclusao - <ENTER>p/Alterar e Excluir - <C>Pesquisa por Cidade - <ESC>Retornar')
                ELSE
                        mensagem('<P>esquisa - <I>nclusao - <C>Pesquisa por Cidade - <E>Pesq.p/Endereco - <ENTER> Confirma - <ESC>Retornar')
                ENDIF
                /*
                IF ver_serie() = '141488'
                        IF cli->tipo = 'B'
                                WVW_DrawLabel(,f7lba+10,f7cci+33,'CLIENTE BRILHANTE',,,210,, 'Arial Black',35,20,,,,,)
                        ELSEIF cli->tipo = 'C'
                                WVW_DrawLabel(,f7lba+10,f7cci+33,'CLIENTE          ',,,210,, 'Arial Black',35,20,,,,,)
                        ELSEIF cli->tipo = 'D'
                                WVW_DrawLabel(,f7lba+10,f7cci+33,'CLIENTE DIAMANTE ',,,210,, 'Arial Black',35,20,,,,,)
                        ELSEIF cli->tipo = 'E'
                                WVW_DrawLabel(,f7lba+10,f7cci+33,'CLIENTE EXCLUIDO ',,,210,, 'Arial Black',35,20,,,,,)
                        ELSEIF cli->tipo = 'O'
                                WVW_DrawLabel(,f7lba+10,f7cci+33,'OUTROS           ',,,210,, 'Arial Black',35,20,,,,,)
                        ELSEIF cli->tipo = 'P'
                                WVW_DrawLabel(,f7lba+10,f7cci+33,'CLIENTE PEROLA   ',,,210,, 'Arial Black',35,20,,,,,)
                        ELSEIF cli->tipo = 'R'
                                WVW_DrawLabel(,f7lba+10,f7cci+33,'CLIENTE RUBI     ',,,210,, 'Arial Black',35,20,,,,,)
                        ELSE
                                limpa(47,11,48,50)
                        ENDIF
                ENDIF
                */
                //WVW_DrawLabel(,38,85,'C'+STRZERO(cli->cod_cli,5)+'.jpg',,,,, 'terminal',13,4,,,,,)
                limpa(39,80,48,97)
                botao(39,80,48,97)
                IF FILE(ALLTRIM(m_indiv[1,3])+'C'+STRZERO(cli->cod_cli,5)+'.jpg')
                        WVW_DrawImage( ,39,80,48,97,ALLTRIM(m_indiv[1,3])+'C'+STRZERO(cli->cod_cli,5)+'.jpg',.T.,.F.)
                ELSE
                        WVW_DrawImage( ,39,80,48,97,ALLTRIM(m_indiv[1,3])+'C'+STRZERO(cli->cod_cli,5)+'.bmp',.T.,.F.)
                ENDIF
                WVW_DrawLabel(,51,85,'<ALT+F>p/Ampliar',,,,, 'terminal',13,4,,,,,)
                WVW_DrawLabel(,52,80,ALLTRIM(m_indiv[1,3])+'C'+STRZERO(cli->cod_cli,5)+'.jpg',,,,, 'terminal',13,4,,,,,)
                setcor(1)
                /*
                f7_contrato := {}
                sr_getconnection():exec("SELECT * FROM contrato WHERE codcli = "+sr_cdbvalue(cli->cod_cli),,.t.,@f7_contrato)
                IF LEN(f7_contrato) = 0
                        WVW_PBEnable( NIL, nPBId, .F. )
                ELSE
                        WVW_PBEnable( NIL, nPBId, .T. )
                ENDIF
                */
                f7nkey := INKEY(0)
        ENDDO
        IF f7nkey == K_ESC
                EXIT
        ELSEIF f7nkey = 112 .OR. f7nkey = 80
                op_tela(00,00,43,120,memp_resa+SPACE(40)+' CONSULTA DE CLIENTES ',,'*')
                CLEAR GETS
                WHILE .T.
                        mcod_cl         := 0
                        mrazao          := mfantasia := mcidade := mendereco := SPACE(40)
                        mcpfcnpj        := mtelefone := minsc := SPACE(14)
                        limpa(0,0,43,100)
                        mensagem('Digite a descricao ou *descricao p/Pesquisa qualquer lugar da descricao')
                        setcor(1)
                        DEVPOS(00,01);DEVOUT('Pesquisa Geral:')
                        DEVPOS(01,01);DEVOUT('Codigo Cliente:')
                        DEVPOS(02,01);DEVOUT('Razao Social..:')
                        DEVPOS(03,01);DEVOUT('Nome Fantasia.:')
                        DEVPOS(04,01);DEVOUT('Cidade........:')
                        DEVPOS(05,01);DEVOUT('Endereco......:')
                        DEVPOS(06,01);DEVOUT('CPF/CNPJ......:')
                        DEVPOS(06,32);DEVOUT('Inscricao Est.:')
                        DEVPOS(07,01);DEVOUT('Telefone......:')
                        setcor(3)
                        @ 08,00 TO 08,120
                        DEVPOS(09,01);DEVOUT('Razao Social                             Fantasia                                  Codigo  Cidade                 VEND CPF/CNPJ')
                        @ 10,00 TO 10,120
                        @ 42,00 TO 42,120
                        DEVPOS(43,01);DEVOUT('Total de Clientes:')
                        DEVPOS(43,27);DEVOUT('Tempo da Pesquisa:')
                        setcor(1)
                        @ 00,17 GET mpesquisa PICT '@!KS50'
                        @ 01,17 GET mcod_cl PICT '99999' WHEN EMPTY(mpesquisa)
                        @ 02,17 GET mrazao PICT '@!' WHEN EMPTY(mcod_cl) .AND. EMPTY(mpesquisa)
                        @ 03,17 GET mfantasia PICT '@!' WHEN EMPTY(mcod_cl) .AND. EMPTY(mpesquisa)
                        @ 04,17 GET mcidade PICT '@!' WHEN EMPTY(mcod_cl) .AND. EMPTY(mpesquisa)
                        @ 05,17 GET mendereco PICT '@!' WHEN EMPTY(mcod_cl) .AND. EMPTY(mpesquisa)
                        @ 06,17 GET mcpfcnpj PICT '@!' WHEN EMPTY(mcod_cl) .AND. EMPTY(mrazao) .AND. EMPTY(mfantasia) .AND. EMPTY(mcidade) .AND. EMPTY(mendereco) .AND. EMPTY(mpesquisa) .AND. men_get(0,0,'Digite o CNPJ ou CPF sem pontos e Hifens') VALID  lim_get()
                        @ 06,48 GET minsc PICT '@!' WHEN EMPTY(mcod_cl) .AND. EMPTY(mrazao) .AND. EMPTY(mfantasia) .AND. EMPTY(mcidade) .AND. EMPTY(mendereco) .AND. EMPTY(mpesquisa) .AND. men_get(0,0,'Digite a INSCRICAO sem pontos e Hifens') VALID  lim_get()
                        @ 07,17 GET mtelefone PICT '@!' WHEN EMPTY(mcod_cl) .AND. EMPTY(mcpfcnpj) .AND. EMPTY(minsc) .AND. EMPTY(mpesquisa)
                        READ
                        IF LASTKEY() = 27
                                CLEAR GETS
                                EXIT
                        ENDIF
                        IF EMPTY(mcod_cl) .AND. EMPTY(mrazao) .AND. EMPTY(mfantasia) .AND. EMPTY(mcidade) .AND. EMPTY(mendereco) .AND. EMPTY(mcpfcnpj) .AND. EMPTY(mtelefone) .AND. EMPTY(minsc) .AND. EMPTY(mpesquisa)
                                LOOP
                        ENDIF
                        mcpfcnpj := STRTRAN(mcpfcnpj,'.','')
                        mcpfcnpj := STRTRAN(mcpfcnpj,'-','')
                        mcpfcnpj := STRTRAN(mcpfcnpj,'/','')

                        minsc := STRTRAN(minsc,'.','')
                        minsc := STRTRAN(minsc,'-','')
                        minsc := STRTRAN(minsc,'/','')
                        mhoras := TIME()
                        cComm  := "SELECT * FROM saccli WHERE cod_cli IS NOT NULL"
                        IF ! EMPTY(mpesquisa)
                                ccomm := ccomm + " AND razao LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%')+" OR nome LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                               + " OR cod_cli = "+sr_cdbvalue(STRZERO(VAL(ALLTRIM(mpesquisa)),5));
                                               + " OR cpf LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%') + " OR cgc LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                               + " OR insc LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                               + " OR tel1 LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%')+" OR tel2 LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                               + " OR cidade LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                               + " OR endereco LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%')
                        ELSEIF ! EMPTY(mcod_cl)
                                ccomm := ccomm + " AND cod_cli = "+sr_cdbvalue(STRZERO(mcod_cl,5))
                        ELSE
                                IF ! EMPTY(mcpfcnpj)
                                        IF LEN(ALLTRIM(mcpfcnpj)) < 14
                                                ccomm := ccomm + " AND cpf LIKE "+sr_cdbvalue('%'+ALLTRIM(mcpfcnpj)+'%')
                                        ELSE
                                                ccomm := ccomm + " AND cgc LIKE "+sr_cdbvalue('%'+ALLTRIM(mcpfcnpj)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(minsc)
                                        ccomm := ccomm + " AND insc LIKE "+sr_cdbvalue('%'+ALLTRIM(minsc)+'%')
                                ENDIF
                                IF ! EMPTY(mtelefone)
                                        ccomm := ccomm + " AND (tel1 LIKE "+sr_cdbvalue('%'+ALLTRIM(mtelefone)+'%')+" OR tel2 LIKE "+sr_cdbvalue('%'+ALLTRIM(mtelefone)+'%')+")"
                                ENDIF
                                IF ! EMPTY(mrazao)
                                        IF SUBSTR(mrazao,1,1) = '*'
                                                ccomm := ccomm + " AND razao LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mrazao,2))+'%')+" OR nome LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mrazao,2))+'%')+ " OR cod_cli = "+sr_cdbvalue(STRZERO(VAL(ALLTRIM(SUBSTR(mrazao,2))),5))
                                        ELSE
                                                ccomm := ccomm + " AND razao LIKE "+sr_cdbvalue(ALLTRIM(mrazao)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(mfantasia)
                                        IF SUBSTR(mfantasia,1,1) = '*'
                                                ccomm := ccomm + " AND nome LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mfantasia,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND nome LIKE "+sr_cdbvalue(ALLTRIM(mfantasia)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(mcidade)
                                        IF SUBSTR(mcidade,1,1) = '*'
                                                ccomm := ccomm + " AND cidade LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mcidade,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND cidade LIKE "+sr_cdbvalue(ALLTRIM(mcidade)+'%')
                                        ENDIF
                                ENDIF
                                IF ! EMPTY(mendereco)
                                        IF SUBSTR(mendereco,1,1) = '*'
                                                ccomm := ccomm + " AND endereco LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mendereco,2))+'%')
                                        ELSE
                                                ccomm := ccomm + " AND endereco LIKE "+sr_cdbvalue(ALLTRIM(mendereco)+'%')
                                        ENDIF
                                ENDIF
                        ENDIF
                        ccomm := ccomm + " ORDER BY razao"
                        cons_m := {}
                        sr_getconnection():exec(ccomm,,.t.,@cons_m)
                        IF LEN(cons_m) = 0
                                atencao('Nao foi encontrado nenhum CLIENTE ...')
                                LOOP
                        ENDIF
                        m_prod := {}
                        m_pos  := {}
                        point  := i := 0
                        DEVPOS(43,20);DEVOUT(STRZERO(LEN(cons_m),5))
                        DEVPOS(43,46);DEVOUT(ELAPTIME(mhoras,TIME()))
                        FOR i = 1 TO LEN(cons_m)
                                AADD(m_prod,' '+cons_m[i,3];
                                           +' '+cons_m[i,4];
                                           +'  '+STR(cons_m[i,2],5);
                                           +'  '+cons_m[i,24];
                                           +' '+cons_m[i,106];
                                           +' '+IF(! EMPTY(cons_m[i,32]),cons_m[i,32],cons_m[i,34]))
                                AADD(m_pos,cons_m[i,195])
                        NEXT
                        point := ACHOICE(11,0,40,120,m_prod,,,point)
                        DO CASE
                                CASE LASTKEY()=27
                                        LOOP
                                CASE LASTKEY() = 13
                                        *************
                                        SELE('cli');ORDSETFOCUS(2)
                                        GO m_pos[point]
                                        *************
                                        cons_cli:={}
                                        sr_getconnection():exec("SELECT * FROM saccli WHERE cod_cli = "+sr_cdbvalue(VAL(SUBSTR(m_prod[point],85,5))),,.t.,@cons_cli)
                                        //atencao(cons_cli[1,3])
                                        IF LEN(cons_cli) = 0
                                                atencao('Nao foi encontrado nenhum CLIENTE ...')
                                                LOOP
                                        ENDIF
                                        EXIT
                        ENDCASE
                ENDDO
                wvw_lclosewindow()
                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba,'cli')
                oconsprod:colorspec :=mcolor
                ocolprod[1] := TBCOLUMNNEW('Razao Social',{||cli->razao})
                ocolprod[2] := TBCOLUMNNEW('Nome Fantasia',{||cli->nome})
                ocolprod[3] := TBCOLUMNNEW('Cod.',{||STR(cli->cod_cli,5)})
                ocolprod[4] := TBCOLUMNNEW('Tipo',{||cli->tipo})
                ocolprod[5] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(cli->cgc),'CNPJ: '+TRANSFORM(cli->cgc,'@@R 99.999.999/9999-99'),'CPF: '+TRANSFORM(cli->cpf,'@@R 999.999.999-99     '))})
                ocolprod[6] := TBCOLUMNNEW('Ult.Atua.',{||DTOC(cli->data_atu)})
                f7i:=0
                FOR f7i=1 TO LEN(ocolprod)
                        //oconsprod:ColorBlock := { || iif( oconsprod:RowPos % 2 > 0, {1,2},{3,4} ) }
                        //oconsprod:ColorBlock := { || if ( mod(recno())>0, {1,2},{3,4} ) }
                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                        //oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S','r/W,W/r,,,r/W*',{2,4})}")
                        //oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")
                        oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSEIF f7nkey = 73 .OR. f7nkey = 105     // I
                sac130()
                c_cli:={}
                sr_getconnection():exec("SELECT COUNT(*) FROM saccli",,.t.,@c_cli)
                GO c_cli[1,1]
                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba,'cli')
                oconsprod:colorspec :=mcolor
                ocolprod[1] := TBCOLUMNNEW('Razao Social',{||cli->razao})
                ocolprod[2] := TBCOLUMNNEW('Nome Fantasia',{||cli->nome})
                ocolprod[3] := TBCOLUMNNEW('Cod.',{||STR(cli->cod_cli,5)})
                ocolprod[4] := TBCOLUMNNEW('Tipo',{||cli->tipo})
                ocolprod[5] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(cli->cgc),'CNPJ: '+TRANSFORM(cli->cgc,'@@R 99.999.999/9999-99'),'CPF: '+TRANSFORM(cli->cpf,'@@R 999.999.999-99     '))})
                ocolprod[6] := TBCOLUMNNEW('Ult.Atua.',{||DTOC(cli->data_atu)})
                f7i:=0
                FOR f7i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                        oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSEIF f7nkey = 289
                smedalbum('C',STRZERO(cli->cod_cli,5),cli->razao,m_indiv[1,3],m_indiv[1,3]+'\CLIENTE\')
                WVW_SetMousePos(,00,00)
                WVW_SetMouseMove(,.F.)
        ELSEIF f7nkey == K_ENTER
                *************
                SELE('cli');ORDSETFOCUS(2)
                *************
                mcod_cli := cli->cod_cli
                IF mop = '*'
                        f7opcao := mensagem1('Deseja <A>lterar <E>xcluir:','A','A,E')
                        IF LASTKEY() = 27
                                LOOP
                        ELSEIF f7opcao = 'A'
                                sac131(cli->cod_cli)
                        ELSEIF f7opcao = 'E'
                                sac132()
                        ENDIF
                ELSE
                        cons_cli:={}
                        sr_getconnection():exec("SELECT * FROM saccli WHERE cod_cli = "+sr_cdbvalue(cli->cod_cli),,.t.,@cons_cli)
                        IF LEN(cons_cli) = 0
                                atencao('Nao foi encontrado nenhum CLIENTE ...')
                                LOOP
                        ENDIF
                        CLEAR GETS
                        EXIT
                ENDIF
                setcor(1)
                oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba,'cli')
                oconsprod:colorspec :=mcolor
                ocolprod[1] := TBCOLUMNNEW('Razao Social',{||cli->razao})
                ocolprod[2] := TBCOLUMNNEW('Nome Fantasia',{||cli->nome})
                ocolprod[3] := TBCOLUMNNEW('Cod.',{||STR(cli->cod_cli,5)})
                ocolprod[4] := TBCOLUMNNEW('Tipo',{||cli->tipo})
                ocolprod[5] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(cli->cgc),'CNPJ: '+TRANSFORM(cli->cgc,'@@R 99.999.999/9999-99'),'CPF: '+TRANSFORM(cli->cpf,'@@R 999.999.999-99     '))})
                ocolprod[6] := TBCOLUMNNEW('Ult.Atua.',{||DTOC(cli->data_atu)})
                f7i:=0
                FOR f7i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[f7i])
                        oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSE
                IF genkey(oconsprod,f7nkey,'cli')
                        oconsprod := TBROWSEDB(f7lci,f7cci,f7lba-1,f7cba,'cli')
                        oconsprod:colorspec :=mcolor
                        ocolprod[1] := TBCOLUMNNEW('Razao Social',{||cli->razao})
                        ocolprod[2] := TBCOLUMNNEW('Nome Fantasia',{||cli->nome})
                        ocolprod[3] := TBCOLUMNNEW('Cod.',{||STR(cli->cod_cli,5)})
                        ocolprod[4] := TBCOLUMNNEW('Tipo',{||cli->tipo})
                        ocolprod[5] := TBCOLUMNNEW('  CNPJ/CPF',{||IF(! EMPTY(cli->cgc),'CNPJ: '+TRANSFORM(cli->cgc,'@@R 99.999.999/9999-99'),'CPF: '+TRANSFORM(cli->cpf,'@@R 999.999.999-99     '))})
                        ocolprod[6] := TBCOLUMNNEW('Ult.Atua.',{||DTOC(cli->data_atu)})
                        f7i:=0
                        FOR f7i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[f7i])
                                oconsprod:getcolumn(f7i):colorblock=&("{||IF(cli->bloqueio='S',{6,3},{1,3})}")
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(f7msele);IF(f7morde>0,ORDSETFOCUS(f7morde),)
RELEASE f7tela,f7tela1,f7lci,f7cci,f7lba,f7cba,f7msele,f7morde,f7men,oconsprod,ocolprod[8],f7i,f7nkey,f7opcao,;
        mcompras:=0
WVW_PBDestroy( NIL, nPBId )
WVW_SetMouseMove(,.T.)
wvw_lclosewindow()
IF f7nkey == K_ESC
        RETURN NIL
ELSE
        CLEAR GETS
        RETURN mcod_cli
ENDIF
RETURN NIL
******************************* f i m *********************************************
* CONSULTA DE CLIENTES E PRODUTOS
********************************************
FUNCTION cliprod
****************
LOCAL li,ci,lb,cb,opcao,marq,;
      m_movimento:={},point,msele,morde
MEMVAR mcod_cli

li := ci := 0
lb := 17
cb := 61

msele := SELE()
morde := INDEXORD()
****************
SELE('tabme');ORDSETFOCUS(2)
GO TOP
****************
op_tela(0,0,19,61)

WHILE .T.
        IF ! tabme->(DBSEEK(mcod_cli))
                atencao('Nao existe nenhum PRODUTO cadastrado neste cliente')
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                EXIT
        ENDIF

        WHILE mcod_cli = tabme->cod_cli .AND. ! EOF()
                ver_cod(VAL(tabme->codigo))
                AADD(m_movimento,' '+tabme->codigo+' '+merc->merc+' '+CHR(179)+'     '+TRANSFORM(tabme->desconto,'999.99'))
                SKIP
        ENDDO
        IF LEN(m_movimento) = 0
                atencao('Nao existe PRODUTO cadastrado netse CLIENTES !!!')
                EXIT
        ENDIF
        @ li+1,ci TO li+1,cb
        DEVPOS(li,ci+1);DEVOUT('Produto')
        DEVPOS(li,ci+53);DEVOUT('Desconto')
        setcor(1)
        WHILE .T.
                CLEAR TYPEAHEAD
                mensagem("<ESC> Retorna" )
                point := ACHOICE(li+3,ci+1,lb-1,cb-1,m_movimento)

                DO CASE
                        CASE LASTKEY()=27
                                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                                wvw_lclosewindow()
                                RETURN NIL
                ENDCASE
        ENDDO
ENDDO
wvw_lclosewindow()
RETURN NIL
******************************* F I M ***********************************
* VER PROFISSAO
****************
FUNCTION ver_profi(mcod_p,li,ci)
********************************
LOCAL msele,morde

IF EMPTY(mcod_p); RETURN .T.;END

msele := SELE()
morde := INDEXORD()

***********************************************
IF ! AbriArq('sacprofi','profi');RETURN NIL;ENDIF
SELE('profi');ORDSETFOCUS(2)
GO TOP
***********************************************
IF ! profi->(DBSEEK(STRZERO(mcod_p,5)))
        atencao('Despesa nao Cadastrada !!!')
        mcod_p = 0
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .F.
ELSE
        IF li = NIL
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .T.
        ELSE
                setcor(3)
                DEVPOS(li,ci);DEVOUT(profi->profi)
                setcor(1)
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .T.
        ENDIF
ENDIF
RETURN NIL
************************************ F I M ************************************
* VERIFICA SUB-GRUPO
********************
FUNCTION ver_sgru(vgru,vsgru,ld,cd,t)
**********************
LOCAL mcons_grupo:={},ccomm

IF EMPTY(vsgru)
        RETURN .T.
ENDIF
mcons_grupo:={}
cComm  := "SELECT * FROM sacgrupo WHERE gru_sub = "+sr_cdbvalue(STRZERO(vgru,3)+STRZERO(vsgru,2))
sr_getconnection():exec( cComm,,.t.,@mcons_grupo)

IF t = .T. .AND. LEN(mcons_grupo) > 0
        vsgru := 0
        atencao('Sub-Grupo ja Cadastrado !!!')
        RETURN .F.
ENDIF
IF LEN(mcons_grupo) = 0
        vsgru := 0
        IF t = .T.
                atencao('Sub-Grupo nao Cadastrado !!!')
        ENDIF
        RETURN .F.
ENDIF
setcor(3)
DEVPOS(ld,cd);DEVOUT(mcons_grupo[1,2])
setcor(1)
RETURN .T.
**************** f i m **********************************
* FUNCAO P/CONSULTAR MERCADORIAS
********************************
#include "inkey.ch"              // constantes de codigos das teclas

FUNCTION f4_merc(cons,mdcri,mvar_atac,mpercentual,prod)
******************************************************
LOCAL f4tela,f4tela1,f4lci,f4cci,f4lba,f4cba,f4msele,f4morde,f4men,y,mcod,;
      oconsprod,ocolprod[9],i,nkey,mteste,f4,lin_br,mopcao:=' ',mprec:=0,mcodmerc,mreg,;
      local4,mtela_help,mtela_lin,mcor_ant,mvlr_dolar:=1,stop:=' ',;
      nErr, nPos,cComm,owindows,cons_m:={},m_prod:={},mcondicao:='  ',;
      mhoras:='',menuid,mvalor_fatura:=0,cons_mov,f4_botao,mindice:=' ',;
      nBota

STATIC mdescri := '                                        ',mdesc1:='              ',;
       mpesquisa:= '                                                  '
//LOCAL mdescri := SPACE(30),mdescri1:='              '

MEMVAR mdata_sis,nivel_acess,mcod_merc,mcod_bc,mquantd
PRIVATE mcod_forn := 0,point:=0,m_pos:={}
***********************************************
//IF ! AbriArq('sacmerc','merc');RETURN NIL;ENDIF
***********************************************
Local4:= Space(0)
f4 := '*'
f4lci := 6
f4cci := 0
f4lba := 22
f4cba := 100 //79
f4msele := SELE()
f4morde := INDEXORD()
mcor_ant := SETCOLOR()
mvlr_dolar := IF(ver_dolar(mdata_sis)=0,1,ver_dolar(mdata_sis))
setcor(1)
exibi_prg('F4_MERC')
op_tela(03,00,48,120,memp_resa+SPACE(10)+' PRODUTOS '+IF(mvar_atac='2','Venda ATACADO','Venda VAREJO'),,1)
f4msele := SELE()
f4morde := INDEXORD()
//mflag := 0
CLEAR GETS

//WvW_PBSetFont( NIL, "Courier New", 15, 0,)
//f4_botao := wvw_pbCreate(NIL,39,100,40,110, 'FOTOS',NIL,{||teste()})

WvW_PBSetFont( NIL, 'times', 25, 10,)
IF mdcri <> NIL
        nBota := wvw_pbCreate(NIL,1,90,2,110,'Inclusao Produtos',NIL,{||sac110(,,,mdcri)})
ELSE
        nBota := wvw_pbCreate(NIL,1,90,2,110,'Inclusao Produtos',NIL,{||sac110()})
ENDIF
WVW_PBEnable( NIL, nBota, .T. )

WHILE .T.
        mcod_bc := SPACE(14)
        IF mdcri <> NIL
                mdescri := mdcri
        ENDIF
        mcondicao := 'E '
        mcod_forn := mvalor_fatura := 0
        limpa(0,0,50,120)
        mensagem('Digite: *descricao - #descricao p/(Aplicacao) - R=Descricao p/(Ref.) - [III] Inclusao Prod. - [CTRL+Y]Apagar Descricao')
        setcor(1)
        DEVPOS(00,01);DEVOUT('Pesquisa Geral:')
        DEVPOS(01,01);DEVOUT('Descricao.....:')
        DEVPOS(01,48);DEVOUT('Condicao:')
        DEVPOS(02,01);DEVOUT('Cod.Fabricante:')
        DEVPOS(03,01);DEVOUT('Codigo Produto:')
        setcor(3)
        @ 04,00 TO 04,120
        //DEVPOS(04,01);DEVOUT('Descricao                              Codigo Local          Saldo       Preco  Prc.Aprazo     Referencia  Dp IAT IPPT Aliq.')
        DEVPOS(05,01);DEVOUT('Descricao                              Codigo Local          Saldo       Preco  Prc.Aprazo UND Referencia   Dp 1 2 '+IF(m_set[1,126] = 'S','CSOSN','CST'))
        @ 06,00 TO 06,120
        @ 43,00 TO 43,120
        DEVPOS(44,01);DEVOUT('Total de Produtos:')
        DEVPOS(44,27);DEVOUT('Tempo da Pesquisa:                                                           1->IAT   2->IPPT')
        setcor(1)

        //DEVPOS(04,00);DEVOUT('Cod.Especie...:')
        @ 00,17 GET mpesquisa PICT '@!KS50'
        @ 01,17 GET mdescri PICT '@!KS25' WHEN mdcri = NIL .AND. EMPTY(mpesquisa)
        //@ 01,17 GET mdescri PICT '@!' WHEN mdcri = NIL .AND. EMPTY(mpesquisa)
        @ 01,57 GET mcondicao PICT '@!' VALID mcondicao $ 'OU,E ,  ' WHEN SUBSTR(mdescri,1,1) = '*' .AND. EMPTY(mpesquisa) .AND. men_get(0,0,'Digite: [E] ou [OU]') .AND. mdcri = NIL
        @ 01,60 GET mdesc1 PICT '@!KS14' WHEN SUBSTR(mdescri,1,1) = '*' .AND. ! EMPTY(mcondicao) .AND. EMPTY(mpesquisa) .AND. mdcri = NIL //VALID IF(EMPTY(mdesc1),.F.,.T.)
        @ 02,17 GET mcod_forn PICT '9999' VALID v_fornece(mcod_forn,01,22) WHEN mdcri = NIL .AND. EMPTY(mpesquisa)
        @ 03,17 GET mcod_bc PICT '@!' WHEN EMPTY(mdescri) .AND. EMPTY(mcod_forn) .AND. mdcri = NIL .AND. EMPTY(mpesquisa)
        READ
        IF mdescri = 'III'       // BOTAO INCLUSAO
                sac110()
                Menuid := 0
                mdescri = SPACE(20)
                LOOP
        ENDIF
        IF LASTKEY() = 27
                wvw_lclosewindow()
                CLEAR GETS
                RETURN ' '
        ENDIF

        IF EMPTY(mcod_bc) .AND. EMPTY(mdescri) .AND. EMPTY(mcod_forn) .AND. EMPTY(mpesquisa)
                LOOP
        ENDIF

        mhoras := TIME()
        mensagem('Escolha o produto e tecle <ENTER> ou <ESC> p/Abandonar')
        IF SUBSTR(mpesquisa,1,1) = '*' .OR. (EMPTY(mcod_bc) .AND. EMPTY(mdescri) .AND. EMPTY(mcod_forn) .AND. EMPTY(mpesquisa))
                cComm  := "SELECT * FROM sacmerc "
        ELSE
                cComm  := "SELECT * FROM sacmerc WHERE "
                IF ! EMPTY(mpesquisa)
                        ccomm := ccomm + " (cod_barr = "+sr_cdbvalue(ALLTRIM(mpesquisa));
                                       + " OR cod_merc = "+sr_cdbvalue(STRZERO(VAL(ALLTRIM(mpesquisa)),5));
                                       + " OR merc LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                       + " OR aplic0 LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                       + " OR ref LIKE "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%');
                                       + " OR cod_fab = "+sr_cdbvalue(ALLTRIM(mpesquisa));
                                       + " OR fabrica = "+sr_cdbvalue('%'+ALLTRIM(mpesquisa)+'%')+")"
                ELSEIF ! EMPTY(mcod_bc)
                        IF LEN(RTRIM(mcod_bc)) > 5 .OR. VAL(mcod_bc) = 0
                                ccomm := ccomm + " (cod_barr = "+sr_cdbvalue(ALLTRIM(mcod_bc) + " OR cod_merc = "+sr_cdbvalue(STRZERO(VAL(mcod_bc),5)))+")"
                        ELSE
                                ccomm := ccomm + " cod_merc = "+sr_cdbvalue(STRZERO(VAL(mcod_bc),5))
                        ENDIF
                ELSE
                        IF SUBSTR(mdescri,1,1) = '*'
                                IF ! EMPTY(mcondicao) .AND. ! EMPTY(mdesc1)
                                        IF mcondicao = 'E '
                                                ccomm := ccomm + " (merc LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mdescri,2))+'%')+" AND merc LIKE "+sr_cdbvalue('%'+ALLTRIM(mdesc1)+'%')+")"
                                        ELSE
                                                ccomm := ccomm + " (merc LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mdescri,2))+'%')+" OR merc LIKE "+sr_cdbvalue('%'+ALLTRIM(mdesc1)+'%')+")"
                                        ENDIF
                                ELSE
                                        ccomm := ccomm + " merc LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mdescri,2))+'%')
                                ENDIF
                        ELSEIF SUBSTR(mdescri,1,1) = '#'
                                ccomm := ccomm + " aplic0 LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mdescri,2))+'%')
                        ELSEIF SUBSTR(mdescri,1,2) = 'R='
                                ccomm := ccomm + " ref LIKE "+sr_cdbvalue('%'+ALLTRIM(SUBSTR(mdescri,3))+'%')
                        ELSEIF ! EMPTY(mdescri)
                                ccomm := ccomm + " merc LIKE "+sr_cdbvalue(ALLTRIM(mdescri)+'%')
                        ENDIF
                        IF ! EMPTY(mcod_forn)
                                ccomm := ccomm + IF(! EMPTY(mdescri)," AND ",'')+" cod_fab = "+sr_cdbvalue(STRZERO(mcod_forn,4))
                        ENDIF
                ENDIF
                IF cons = NIL   //.AND. EMPTY(mcod_bc)
                        ccomm := ccomm + " AND NOT disp = 'N'"
                        ccomm := ccomm + " AND NOT descont = 'S'"
                ENDIF
        ENDIF
        ccomm := ccomm + " ORDER BY merc"
        //ATENCAO(CCOMM)
        cons_m := {}
        sr_getconnection():exec(ccomm,,.t.,@cons_m)
        IF LEN(cons_m) = 0
                atencao('Nao foi encontrado nenhum PRODUTO..')
                LOOP
        ENDIF
        /*
        IF cons_m[1,24] = 'N' .AND. cons = NIL //! EMPTY(mcod_bc)
                atencao('Este PRODUTO Nao Disponivel para Venda..')
                LOOP
        ENDIF
        IF cons_m[1,104] = 'S' .AND. (LEN(RTRIM(mcod_bc)) > 5 .OR. VAL(mcod_bc) = 0) .AND. EMPTY(mdescri)
                atencao('PRODUTO: '+cons_m[1,8]+'-'+cons_m[1,9]+' *** D E S C O N T I N U A D O *** ....',3)
                LOOP
        ENDIF
        */
        IF mpercentual = NIL
                //mvar_atac := '1'
                mpercentual:=0
        ENDIF
        m_prod := {}
        m_pos  := {}
        point  := 0
        DEVPOS(44,20);DEVOUT(STRZERO(LEN(cons_m),5))
        DEVPOS(44,46);DEVOUT(ELAPTIME(mhoras,TIME()))
        FOR i = 1 TO LEN(cons_m)
                IF mvar_atac = '2'
                        IF ! EMPTY(cons_m[i,47])
                                mvalor_fatura := iat(cons_m[i,47])
                                mvlr_prz := iat(cons_m[i,47])
                        ELSE
                                mvalor_fatura := iat(cons_m[i,46]*((cons_m[i,50]/100)+1))
                                mvlr_prz := iat(cons_m[i,46]*((cons_m[i,50]/100)+1))
                        ENDIF
                ELSE
                        IF ! EMPTY(cons_m[i,47])
                                mvlr_prz := cons_m[i,47]
                        ELSE
                                mvlr_prz := cons_m[i,46] * ((cons_m[i,50]/100) + 1)
                        ENDIF
                        //mpercentual := 0
                ENDIF
                mvalor_fatura := IAT(mvalor_fatura,cons_m[i,81])
                IF ! EMPTY(cons_m[i,65])
                        mvalor_fatura := mvalor_fatura * ((cons_m[i,65]/100)+1)
                ENDIF

                //IF m_set[1,47] > 0
                        //mvlr_prz := mvalor_fatura * ((cons_m[i,47]/100) + 1)
                //ENDIF

                /*
                IF cons_m[i,61] = 'N'
                        IF ! EMPTY(cons_m[i,62])
                                mindice := TRANSFORM(cons_m[i,62],'99.99')
                        ELSE
                                mindice := TRANSFORM(17,'99.99')
                        ENDIF
                ELSE
                        mindice := '  '+cons_m[i,61]
                ENDIF
                */

                AADD(m_prod,cons_m[i,9];
                           +' '+cons_m[i,8]+' '+cons_m[i,73]+' '+TRANSFORM(cons_m[i,56],'999,999.999');
                           +' '+TRANSFORM(mvalor_fatura,ALLTRIM(m_set[1,98])) + IF(cons_m[i,84] = 'S',' D','');
                           +' '+TRANSFORM(mvlr_prz,ALLTRIM(m_set[1,98]));
                           +' '+cons_m[i,14];
                           +' '+cons_m[i,6];
                           +' '+cons_m[i,24];
                           +' '+cons_m[i,81];
                           +' '+cons_m[i,91];
                           +' '+cons_m[i,68])
                           //+' '+vercst(cons_m[i,68]))
                        AADD(m_pos,cons_m[i,8])
                        /*
                           +'   '+cons_m[i,81];
                           +'    '+cons_m[i,91];
                        */

        NEXT

        //WVW_PBEnable( NIL, f4_botao, .T. )

        point := ACHOICE(7,0,42,120,m_prod,,,point)

        DO CASE
                CASE LASTKEY()=27
                        LOOP
                CASE LASTKEY() = 13
                        mcod_merc := VAL(m_pos[point])
                        mcod_bc := m_pos[point]
                        IF cons <> NIL
                                mopcao := mensagem1('Tecle [A] p/ Alteracao [E] p/ Exclusao:','A','A,E')
                                IF LASTKEY() = 27
                                        LOOP
                                ENDIF
                                IF mopcao = 'A'
                                        sac111(mcod_merc)
                                ELSEIF mopcao = 'E'
                                        cons_mov:={}
                                        sr_getconnection():exec("SELECT * FROM sacmov WHERE codigo = "+sr_cdbvalue(mcod_merc),,.t.,@cons_mov)
                                        IF LEN(cons_mov) > 0
                                                IF op_simnao('N','Existe Movimento deste PRODUTO deseja EXCLUIR mesmo assim:') = 'S'
                                                        IF ! aut_sen('Autorizacao para EXCLUSAO DE PRODUTO com Movimento','EXCPRDMOV')
                                                                UNLOCK
                                                                LOOP
                                                        ENDIF
                                                ELSE
                                                        LOOP
                                                ENDIF
                                        ENDIF
                                        sac112(mcod_merc)
                                ENDIF
                        ELSEIF prod <> NIL
				f8_prod(mcod_merc,1)
			ELSE
                                wvw_lclosewindow()
                                CLEAR GETS
                                RETURN VAL(m_pos[point])
                        ENDIF
        ENDCASE
END
RELEASE f4tela,f4tela1,f4lci,f4cci,f4lba,f4cba,f4msele,f4morde,f4men,mcod,;
        oconsprod,ocolprod[8],i,nkey,mteste
wvw_lclosewindow()
CLEAR GETS
RETURN ' '
**************** f i m **********************************
/*
FUNCTION teste()

ATENCAO(strzero(point,5))
sac111(VAL(m_pos[point]))
RETURN NIL
*/
**************** f i m **********************************
#include "inkey.ch"              // constantes de codigos das teclas
********************************
* FUNCAO P/CONSULTAR MERCADORIAS
********************************
FUNCTION f4_merc1(cons,mfab,mvar_atac,mpercentual)
**************************************************
LOCAL f4tela,f4tela1,f4lci,f4cci,f4lba,f4cba,f4msele,f4morde,f4men,y,mcod,;
      oconsprod,ocolprod[9],i,nkey,mteste,f4,lin_br,mopcao:=' ',mprec:=0,mcodmerc,mreg,;
      local4,mtela_help,mtela_lin,mcor_ant,mvlr_dolar:=1,stop:=' ',;
      nErr, nPos,vEmp := {},nCnn,oSql,;
      cComm, apCode,owindows,mdescri:=SPACE(40)

MEMVAR mdata_sis,nivel_acess,mcod_merc,mcod_bc

Local4:= Space(0)
f4 := '*'
f4lci := f4cci := 0
f4lba := 32
f4cba := 110 //79
f4msele := SELE()
f4morde := INDEXORD()
mcor_ant := SETCOLOR()
mvlr_dolar := IF(ver_dolar(mdata_sis)=0,1,ver_dolar(mdata_sis))
IF ! AbriArq('sacmerc','merc');RETURN NIL;ENDIF
*************
SELE('merc');ORDSETFOCUS(3)
ORDSETFOCUS(3)
*************
IF mfab <> NIL
        *************
        ORDSETFOCUS(4)
        *************
ENDIF
IF mpercentual = NIL
        mvar_atac := '1'
        mpercentual:=0
ENDIF
setcor(1)
exibi_prg('F4_MERC')
//op_tela(00,00,33,100,memp_resa+SPACE(40)+' PRODUTOS '+IF(mvar_atac='2','Venda ATACADO','Venda VAREJO')+' - Quantd.Reg.: '+TRANSFORM(LEN(aret),'999,999') )
op_tela(00,00,43,110,memp_resa+SPACE(10)+' PRODUTOS '+IF(mvar_atac='2','Venda ATACADO','Venda VAREJO')+' - Quantd.Reg.: '+TRANSFORM(LASTREC(),'999,999') ,,1)
setcor(3)

oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba)
//oconsprod := TBROWSENEW(f4lci,f4cci,f4lba-1,f4cba,'merc')
ocolprod[1] := TBCOLUMNNEW('Mercadoria',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N','** NAO DISPONIVEL **'+LEFT(merc->merc,20),IF(merc->descont = 'S','**  DESCONTINUADO **'+LEFT(merc->merc,20),merc->merc))})
ocolprod[2] := TBCOLUMNNEW('Codigo',{||merc->cod_merc})
ocolprod[3] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo_mer,'9,999,999.999')},,IF(merc->saldo_mer <= 0,setcor(3),setcor(1)))

ocolprod[4] := TBCOLUMNNEW(' Preco R$',{||IF(mvar_atac = '1',TRANSFORM(iat((merc->pr_venda*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])),;
                                        TRANSFORM(iat((merc->pr_venda1*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))+IF(merc->dolar = 'S',' D','')})
ocolprod[5] := TBCOLUMNNEW('UN',{||merc->unidade})
ocolprod[6] := TBCOLUMNNEW('Referencia',{||merc->ref})

ocolprod[7] := TBCOLUMNNEW(' Preco R$',{||IF(mvar_atac='2',TRANSFORM(iat((merc->pr_venda*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])),;
                                          TRANSFORM(iat((merc->pr_venda1*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))})
ocolprod[8] := TBCOLUMNNEW('Producao',{||TRANSFORM(merc->saldo_est,'999999.999')})
ocolprod[9] := TBCOLUMNNEW('Estoque1',{||TRANSFORM(merc->saldo_fis,'999999.999')})
i:=0
FOR i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
//oconsprod:CARGO := '*****'
oconsprod:FORCESTABLE()
WHILE .T.
        mensagem('Pesquisa: <Alt+P>Codigo - <ALT+E>Especie - <ALT+A>Avancada - <Alt+I>Inclusao - <Alt+H>Ajuda - <F4>Descricao')
        nkey := 0
        WHILE nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()

                setcor(3)
                DEVPOS(f4lba,f4cci+1);DEVOUT('Pesquisa:  ')
                setcor(1)
                WVW_DrawBoxGet(,f4lba,f4cci+12,38)
                botao(f4lba+1,f4cci,f4lba+11,f4cba-1)     //8

                DEVPOS(f4lba+1,f4cci+1);DEVOUT('Descricao Nota:')
                DEVPOS(f4lba+2,f4cci+1);DEVOUT('Grupo.........:      Sub-Grupo:')
                //DEVPOS(f4lba+3,f4cci+1);DEVOUT('Sub-Grupo.....:')
                DEVPOS(f4lba+4,f4cci+1);DEVOUT('Codigo Barra:')
                DEVPOS(f4lba+4,f4cci+32);DEVOUT('Un:')
                DEVPOS(f4lba+4,f4cci+45);DEVOUT('Fab.:')
                DEVPOS(f4lba+7,f4cci+1);DEVOUT('Aplicacao:')
                setcor(3)
                DEVPOS(f4lba+1,f4cci+16);DEVOUT(merc->descri)
                DEVPOS(f4lba+2,f4cci+16);DEVOUT(SUBSTR(merc->gru_sub,1,3))
                DEVPOS(f4lba+2,f4cci+32);DEVOUT(SUBSTR(merc->gru_sub,4,2))
                DEVPOS(f4lba+4,f4cci+16);DEVOUT(merc->cod_barr)
                DEVPOS(f4lba+4,f4cci+36);DEVOUT(merc->unidade)
                DEVPOS(f4lba+4,f4cci+50);DEVOUT(merc->cod_fab+'-'+LEFT(merc->fabrica,23))
                IF nivel_acess = '1'
                        setcor(1)
                        DEVPOS(f4lba+6,f4cci+1);DEVOUT('V.M.: ')
                        DEVPOS(f4lba+6,f4cci+25);DEVOUT('C.M.: ')
                        DEVPOS(f4lba+6,f4cci+50);DEVOUT('C.R.: ')
                        setcor(3)
                        DEVPOS(f4lba+6,f4cci+07);DEVOUT(TRANSFORM(merc->vlr_merc,ALLTRIM(m_set[1,98])))
                        DEVPOS(f4lba+6,f4cci+31);DEVOUT(TRANSFORM(merc->cust_merc,ALLTRIM(m_set[1,98])))
                        DEVPOS(f4lba+6,f4cci+56);DEVOUT(TRANSFORM(merc->cust_real,ALLTRIM(m_set[1,98])))
                ENDIF
                DEVPOS(f4lba+7,f4cci+11);DEVOUT(merc->aplic0)
                DEVPOS(f4lba+8,f4cci+11);DEVOUT(merc->aplic1)
                DEVPOS(f4lba+9,f4cci+11);DEVOUT(merc->aplic2)
                DEVPOS(f4lba+10,f4cci+11);DEVOUT(merc->aplic3)
                setcor(1)
                IF ! EMPTY(merc->promocao)
                        setcor(6)
                        DEVPOS(f4lba+11,f4cci+56);DEVOUT(' Promocao ')
                        setcor(1)
                ELSE
                        setcor(3)
                        DEVPOS(f4lba+11,f4cci+56);DEVOUT('          ')
                        setcor(1)
                ENDIF
                WVW_DrawLabel(,33,85,'P'+merc->cod_merc+'.jpg',,,,, 'terminal',13,4,,,,,)
                botao(34,82,42,98)
                IF FILE(ALLTRIM(m_indiv[1,3])+'P'+merc->cod_merc+'.jpg')
                        WVW_DrawImage( ,34,82,42,98,ALLTRIM(m_indiv[1,3])+'P'+merc->cod_merc+'.jpg',.T.,.F.)
                        WVW_DrawLabel(,43,85,'<ALT+F>p/Ampliar',,,,, 'terminal',13,4,,,,,)
                ELSEIF FILE(ALLTRIM(m_indiv[1,3])+'P'+merc->cod_merc+'.bmp')
                        WVW_DrawImage( ,34,82,42,98,ALLTRIM(m_indiv[1,3])+'P'+merc->cod_merc+'.bmp',.T.,.F.)
                        WVW_DrawLabel(,43,85,'<ALT+F>p/Ampliar',,,,, 'terminal',13,4,,,,,)
                ENDIF
                 nkey := INKEY(0)
        END
        IF nkey == K_ESC
                wvw_lclosewindow()
                RETURN ' '
        ELSEIF nkey == 289
                smedalbum('P',merc->cod_merc,merc->merc,m_indiv[1,3],m_indiv[1,3]+'\PRODUTO\')
        ELSEIF nkey == K_ENTER
                //mcod_merc := VAL(merc->cod_merc)
                mcod_merc := VAL(merc->cod_merc)
                mcod_bc := merc->cod_merc
                IF EMPTY(mcod_merc)
                        LOOP
                ENDIF
                IF cons <> NIL
                        mopcao := mensagem1('Tecle [A] p/ Alteracao [E] p/ Exclusao:','A','A,E')
                        IF LASTKEY() = 27
                                LOOP
                        ENDIF
                        IF mopcao = 'A'
                                sac111(mcod_merc)
                        ELSEIF mopcao = 'E'
                                sac112(mcod_merc)
                        ENDIF
			IF ! AbriArq('sacmerc','merc');RETURN NIL;ENDIF
                        *************
                        //SELE('merc');ORDSETFOCUS(3)
                        ORDSETFOCUS(3)
                        *************
                        oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba,'merc')
                        ocolprod[1] := TBCOLUMNNEW('Mercadoria',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N',LEFT(merc->merc,20)+'** NAO DISPONIVEL **',merc->merc)})
                        ocolprod[2] := TBCOLUMNNEW('Codigo',{||merc->cod_merc})
                        ocolprod[3] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo_mer,'9,999,999.999')})
                        ocolprod[4] := TBCOLUMNNEW(' Preco R$',{||IF(mvar_atac = '1',TRANSFORM(iat((merc->pr_venda*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])),;
                                       TRANSFORM(iat((merc->pr_venda1*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))+IF(merc->dolar = 'S',' D','')})
                        ocolprod[5] := TBCOLUMNNEW('UN',{||merc->unidade})
                        ocolprod[6] := TBCOLUMNNEW('Referencia',{||merc->ref})

                        ocolprod[7] := TBCOLUMNNEW(' Preco R$',{||IF(mvar_atac='2',TRANSFORM(iat((merc->pr_venda*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])),;
                                          TRANSFORM(iat((merc->pr_venda1*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))})
                        ocolprod[8] := TBCOLUMNNEW('Producao',{||TRANSFORM(merc->saldo_est,'999999.999')})
                        ocolprod[9] := TBCOLUMNNEW('Estoque1',{||TRANSFORM(merc->saldo_fis,'999999.999')})
                        //ocolprod[10] := TBCOLUMNNEW('Tipo Produto',{||IF(merc->tipo_merc = '1','MERCADORIA','MATERIA PRIMA')})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ELSE
                        wvw_lclosewindow()
                        RETURN mcod_merc
                ENDIF
        ELSEIF nkey = 279
                ORDSETFOCUS(1)
                sac110()
                oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba,'merc')
                ocolprod[1] := TBCOLUMNNEW('Mercadoria',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N',LEFT(merc->merc,20)+'** NAO DISPONIVEL **',merc->merc)})
                ocolprod[2] := TBCOLUMNNEW('Codigo',{||merc->cod_merc})
                ocolprod[3] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo_mer,'9,999,999.999')})
                ocolprod[4] := TBCOLUMNNEW(' Preco R$',{||IF(mvar_atac = '1',TRANSFORM(iat((merc->pr_venda*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])),;
                               TRANSFORM(iat((merc->pr_venda1*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))+IF(merc->dolar = 'S',' D','')})
                ocolprod[5] := TBCOLUMNNEW('UN',{||merc->unidade})
                ocolprod[6] := TBCOLUMNNEW('Referencia',{||merc->ref})

                ocolprod[7] := TBCOLUMNNEW(' Preco R$',{||IF(mvar_atac='2',TRANSFORM(iat((merc->pr_venda*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])),;
                                          TRANSFORM(iat((merc->pr_venda1*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))})
                ocolprod[8] := TBCOLUMNNEW('Producao',{||TRANSFORM(merc->saldo_est,'999999.999')})
                ocolprod[9] := TBCOLUMNNEW('Estoque1',{||TRANSFORM(merc->saldo_fis,'999999.999')})
                //ocolprod[10] := TBCOLUMNNEW('Tipo Produto',{||IF(merc->tipo_merc = '1','MERCADORIA','MATERIA PRIMA')})
                i:=0
                FOR i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSEIF nkey == -41
                calcu()
        ELSEIF nkey == 291
                mtela_help := SAVESCREEN(00,00,24,79)
                botao(10,30,17,75,,' Menu de Ajuda ')
                DEVPOS(11,31);DEVOUT('<Alt+B> = Pesquisa AVANCADA CODIGO BARRA    ')
                DEVPOS(12,31);DEVOUT('<Alt+R> = Pesquisa p/REFERENCIA AUXILIAR    ')
                DEVPOS(13,31);DEVOUT('<Alt+P> = Pesquisa p/CODIGO e CODIGO BARRA  ')
                DEVPOS(14,31);DEVOUT('<Alt+E> = Pesquisa p/ESPECIE DO PRODUTO     ')
                DEVPOS(15,31);DEVOUT('<Alt+A> = Pesquisa AVANCADA (Varias Formas) ')
                DEVPOS(16,31);DEVOUT('<CTRL+P> = Pesquisa PRODUTOS em PROMOCAO    ')
                INKEY(0)
                RESTSCREEN(00,00,24,79,mtela_help)
        ELSEIF nkey == 275
                mcod := cons_ref(merc->ref)
                IF ! EMPTY(mcod)
                        GO mcod
                        mcod_merc := VAL(merc->cod_merc)
                        mcod_bc := merc->cod_merc
                        IF EMPTY(merc->cod_merc)
                                LOOP
                        ENDIF
                        oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba,'merc')
                        ocolprod[1] := TBCOLUMNNEW('Mercadoria',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N',LEFT(merc->merc,20)+'** NAO DISPONIVEL **',merc->merc)})
                        ocolprod[2] := TBCOLUMNNEW('Codigo',{||merc->cod_merc})
                        ocolprod[3] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo_mer,'9,999,999.999')})
                        ocolprod[4] := TBCOLUMNNEW(' Preco R$',{||IF(mvar_atac = '1',TRANSFORM(iat((merc->pr_venda*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])),;
                                       TRANSFORM(iat((merc->pr_venda1*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))+IF(merc->dolar = 'S',' D','')})
                        ocolprod[5] := TBCOLUMNNEW('UN',{||merc->unidade})
                        ocolprod[6] := TBCOLUMNNEW('Referencia',{||merc->ref})

                        ocolprod[7] := TBCOLUMNNEW(' Preco R$',{||IF(mvar_atac='2',TRANSFORM(iat((merc->pr_venda*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])),;
                                          TRANSFORM(iat((merc->pr_venda1*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))})
                        ocolprod[8] := TBCOLUMNNEW('Producao',{||TRANSFORM(merc->saldo_est,'999999.999')})
                        ocolprod[9] := TBCOLUMNNEW('Estoque1',{||TRANSFORM(merc->saldo_fis,'999999.999')})
                        //ocolprod[10] := TBCOLUMNNEW('Tipo Produto',{||IF(merc->tipo_merc = '1','MERCADORIA','MATERIA PRIMA')})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ELSEIF  nkey = -3
                mdescri := SPACE(40)
                op_tela(10,10,12,71,'Pesquisar por Decricao do Porduto')
                mensagem('Digite a Descricao ou Parte da Descricao para fazer a Pesquisa ou <ESC>p/Retornar')
                DEVPOS(01,00);DEVOUT(' Digite a Descricao:')
                WVW_DrawBoxGet(,01,21,40)
                @ 01,21 GET mdescri PICT '@!'
                READ
                wvw_lclosewindow()
                *************
                ORDSETFOCUS(3)
                //SELE('merc');ORDSETFOCUS(3)
                //DBGOTOP()
                *************
                merc->(DBSEEK(RTRIM(mdescri),.T.))
                oconsprod:refreshall()
        ELSEIF  nkey >= 32 .AND. nkey <= 255
                Local4:= Upper(Local4 + Chr(nkey))
                IF (Len(Local4) > Len(merc->merc))
                        Local4:= Upper(right(Local4, Len(Local4) - 1))
                ENDIF
                SETCOLOR(2)
                @ f4lba, f4cci + (f4cba - f4cci) / 2 - Len(merc->merc) / 2 - 17;
                SAY Local4      //color SubStr('g/w,gr+/g', rat(",", 'g/w,gr+/g') + 1)
                aret:={}
                cComm  := "select sr_recno from sacmerc where sacmerc.merc like "+sr_cdbvalue(local4+'%')+" ORDER BY sacmerc.merc"
                //apCode := SR_SQLParse( cComm, @nErr, @nPos )
                //cComm  := SR_SQLCodeGen( apCode,{local4+'%'})
                sr_getconnection():exec( cComm,,.t.,@aret)
                setcor(1)
                *************
                //IF ! AbriArq('sacmerc','merc');RETURN NIL;ENDIF
                //SELE('merc');ORDSETFOCUS(3)
                ORDSETFOCUS(3)
                IF LEN(aret) > 0
                        GO ARET[1,1]
                ELSE
                        DBGOTOP()
                ENDIF
                oconsprod:refreshall()
        ELSEIF nkey == 8
                Local4:= Upper(Left(Local4, Len(Local4) - 1))
                SETCOLOR(2)
                @ f4lba, f4cci + (f4cba - f4cci) / 2 - Len(merc->merc) / 2 - 17;
                        SAY Local4 + " "
                aret:={}
                cComm  := "select sr_recno from sacmerc where sacmerc.merc like "+sr_cdbvalue(local4+'%')+" ORDER BY sacmerc.merc"
                sr_getconnection():exec( cComm,,.t.,@aret)
                *************
                //IF ! AbriArq('sacmerc','merc');RETURN NIL;ENDIF
                SELE('merc');ORDSETFOCUS(3)
                IF LEN(aret) > 0
                        GO ARET[1,1]
                ELSE
                        DBGOTOP()
                ENDIF
                oconsprod:refreshall()
        ELSE
                IF genkey(oconsprod,nkey,'merc')
                        oconsprod := TBROWSEDB(f4lci,f4cci,f4lba-1,f4cba,'merc')
                        ocolprod[1] := TBCOLUMNNEW('Mercadoria',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N','** NAO DISPONIVEL **'+LEFT(merc->merc,20),merc->merc)})
                        ocolprod[2] := TBCOLUMNNEW('Codigo',{||merc->cod_merc})
                        ocolprod[3] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo_mer,'9,999,999.999')})
                        ocolprod[4] := TBCOLUMNNEW(' Preco R$',{||IF(mvar_atac = '1',TRANSFORM(iat((merc->pr_venda*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])),;
                                       TRANSFORM(iat((merc->pr_venda1*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))+IF(merc->dolar = 'S',' D','')})
                        ocolprod[5] := TBCOLUMNNEW('UN',{||merc->unidade})
                        ocolprod[6] := TBCOLUMNNEW('Referencia',{||merc->ref})

                        ocolprod[7] := TBCOLUMNNEW(' Preco R$',{||IF(mvar_atac='2',TRANSFORM(iat((merc->pr_venda*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])),;
                                          TRANSFORM(iat((merc->pr_venda1*IF(merc->dolar = 'S',ver_dolar(mdata_sis),1))*((mpercentual/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))})
                        ocolprod[8] := TBCOLUMNNEW('Producao',{||TRANSFORM(merc->saldo_est,'999999.999')})
                        ocolprod[9] := TBCOLUMNNEW('Estoque1',{||TRANSFORM(merc->saldo_fis,'999999.999')})
                        //ocolprod[10] := TBCOLUMNNEW('Tipo Produto',{||IF(merc->tipo_merc = '1','MERCADORIA','MATERIA PRIMA')})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:CARGO := '*****'
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SETCOLOR(mcor_ant)
SELE(f4msele);IF(f4morde>0,ORDSETFOCUS(f4morde),)
RELEASE f4tela,f4tela1,f4lci,f4cci,f4lba,f4cba,f4msele,f4morde,f4men,mcod,;
        oconsprod,ocolprod[8],i,nkey,mteste
wvw_lclosewindow()
RETURN .F.
*************************** f i m *******************************************
FUNCTION ver_dolar(mdata,mtipo)
***********************
LOCAL msele,morde,mdata_dolar := mdata_sis,mhora_dolar := TIME(),mvlr_dolar,;
      mvlr_dola1,mvlr_dola2,mvlr_dola3,mvlr_dola4,;
      lci := 0,cci := 0,lba := 09,cba := 45,opcao

MEMVAR mdata_sis,cod_operado

        RETURN 1
/*
IF m_line = 'OFF'
        RETURN 1
ENDIF
msele := SELE()
morde := INDEXORD()
IF ! AbriArq('sacdolar','dolar');RETURN NIL;ENDIF
*************
SELE('dolar');ORDSETFOCUS(1)
GO TOP
*************

IF ! dolar->(DBSEEK(mdata))
        IF ! EMPTY(mtipo)
                op_tela(lci,cci,lba,cba,' Inclusao Cotacao do dolar ')
                WHILE .T.
                        mensagem('Preencha os campos abaixo - <ESC> p/Retornar')
                        mdata_dolar := mdata_sis
                        mhora_dolar := TIME()
                        mvlr_dolar := mvlr_dola1 := mvlr_dola2 := mvlr_dola3 :=;
                        mvlr_dola4 := 0
                        DEVPOS(lci+1,cci+1);DEVOUT('Data:')
                        DEVPOS(lci+2,cci+1);DEVOUT('Hora:')
                        DEVPOS(lci+3,cci+1);DEVOUT('Valor (1):')
                        DEVPOS(lci+4,cci+1);DEVOUT('Valor (2):')
                        DEVPOS(lci+5,cci+1);DEVOUT('Valor (3):')
                        DEVPOS(lci+6,cci+1);DEVOUT('Valor (4):')
                        DEVPOS(lci+7,cci+1);DEVOUT('Valor (5):')
                        setcor(3)
                        DEVPOS(lci+8,cci+1);DEVOUT('A cotacao do dolar do dia nao foi informada')
                        setcor(1)
                        WVW_DrawBoxGet(,lci+1,cci+7,8)
                        @ lci+1,cci+7 GET mdata_dolar
                        READ
                        IF LASTKEY() = 27 .OR. EMPTY(mdata_dolar)
                                EXIT
                        ENDIF
                        WVW_DrawBoxGet(,lci+2,cci+7,LEN(mhora_dolar))
                        WVW_DrawBoxGet(,lci+3,cci+7,10)
                        WVW_DrawBoxGet(,lci+4,cci+7,10)
                        WVW_DrawBoxGet(,lci+5,cci+7,10)
                        WVW_DrawBoxGet(,lci+6,cci+7,10)
                        WVW_DrawBoxGet(,lci+7,cci+7,10)
                        @ lci+2,cci+7 GET mhora_dolar
                        @ lci+3,cci+7 GET mvlr_dolar PICT '9,999.9999'
                        @ lci+4,cci+7 GET mvlr_dola1 PICT '9,999.9999'
                        @ lci+5,cci+7 GET mvlr_dola2 PICT '9,999.9999'
                        @ lci+6,cci+7 GET mvlr_dola3 PICT '9,999.9999'
                        @ lci+7,cci+7 GET mvlr_dola4 PICT '9,999.9999'
                        READ
                        IF LASTKEY() = 27
                                LOOP
                        ENDIF
                        opcao := op_simnao('S','Confirma Inclusao:')
                        IF opcao = 'S'
                                IF ADIREG()
                                        dolar->data_dolar := mdata_dolar
                                        dolar->hora_dolar := mhora_dolar
                                        dolar->vlr_dolar := mvlr_dolar
                                        dolar->vlr_dola1 := mvlr_dola1
                                        dolar->vlr_dola2 := mvlr_dola2
                                        dolar->vlr_dola3 := mvlr_dola3
                                        dolar->vlr_dola4 := mvlr_dola4
                                        dolar->ope_dolar := cod_operado
                                        DBCOMMIT()
                                        DBUNLOCK()
                                        EXIT
                                ELSE
                                        atencao('Nao foi possivel acessar o Arquivo !!!')
                                        LOOP
                                ENDIF
                        ENDIF
                ENDDO
                wvw_lclosewindow()
                RETURN NIL
        ENDIF
        GO BOTT
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN dolar->vlr_dolar
        atencao('O valor do DOLAR e do dia '+DTOC(dolar->data_dolar)+' no valor de R$: '+TRANSFORM(dolar->vlr_dolar,'9,999.9999'))
ELSE
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
*       atencao('O valor do DOLAR do dia R$: '+TRANSFORM(dolar->vlr_dolar,'9,999.9999'),2)
        IF dolar->vlr_dolar = 0
                RETURN 1
        ELSE
                RETURN dolar->vlr_dolar
        ENDIF
ENDIF
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
RETURN dolar->vlr_dolar
*/
******************************** f i m **********************************
********************************
* FUNCAO P/CONSULTAR MERCADORIAS P/REFERENCIA
********************************
FUNCTION cons_ref(mref,mfab)
****************************
LOCAL tela1,lci,cci,lba,cba,msele,morde,men,y,mponto,mcod_m,mcon:=SPACE(10),;
      oconsprod,ocolprod[8],i,nkey,mteste,msel_ref,mord_ref,f4,mpoint
MEMVAR nivel_acess,mdata_sis,lin_br

f4 := '*'
lci := cci := 00
lba := 14
cba := 79
msel_ref := SELE()
mord_ref := INDEXORD()
mponto := RECNO()
//
IF ! AbriArq('sacdolar','dolar');RETURN NIL;ENDIF
IF ! AbriArq('sacmerc','merc');RETURN NIL;ENDIF
*************
SELE('merc');ORDSETFOCUS(8)
GO TOP
IF ! merc->(DBSEEK(mref)) .AND. ! EMPTY(mref)
        atencao('Nao existe produtos com esta REFERENCIA')
ENDIF
*************
op_tela(0,10,22,90,' CONSULTA P/REFERENCIAS DO PRODUTOS ')
oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
ocolprod[1] := TBCOLUMNNEW('Ref.Aux.',{||merc->ref})
ocolprod[2] := TBCOLUMNNEW('Mercadoria',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N',REPLI('*',45),merc->merc)})
ocolprod[3] := TBCOLUMNNEW('Cod.',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N','*****',merc->cod_merc)})
ocolprod[4] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo_mer,'999999.999')})
ocolprod[5] := TBCOLUMNNEW(' Preco R$',{||IF(merc->dolar = 'S',TRANSFORM(iat(merc->pr_venda*ver_dolar(mdata_sis),m_set[1,103]),ALLTRIM(m_set[1,98])),TRANSFORM(iat(merc->pr_venda,m_set[1,103]),ALLTRIM(m_set[1,98])))})
ocolprod[6] := TBCOLUMNNEW('UN',{||merc->unidade})
ocolprod[7] := TBCOLUMNNEW('Estoque',{||TRANSFORM(merc->saldo_est,'999999.999')})
ocolprod[8] := TBCOLUMNNEW('Estoque1',{||TRANSFORM(merc->saldo_fis,'999999.999')})
i:=0
FOR i=1 TO LEN(ocolprod)
        oconsprod:ADDCOLUMN(ocolprod[i])
NEXT
oconsprod:HEADSEP := CHR(196)
oconsprod:COLSEP := CHR(179)
oconsprod:CARGO := '*****'
WHILE .T.
mensagem('<P>Pesquisa p/Referencias - <ENTER>Confirma')
        nkey := 0
        WHILE nkey == 0         //.AND. ! oconsprod:STABLE
                oconsprod:FORCESTABLE()
                botao(lba,cci,lba+8,cba,,' Detalhe do Produto ')
                setcor(3)
                DEVPOS(lba+1,cci+1);DEVOUT('Cod.Barra/Ref.:')
                DEVPOS(lba+1,cci+34);DEVOUT('Cod.Fab.:')
                DEVPOS(lba+2,cci+1);DEVOUT('Prc1: ')
                DEVPOS(lba+2,cci+20);DEVOUT('Prc2: ')
                DEVPOS(lba+2,cci+39);DEVOUT('Prc3: ')
                DEVPOS(lba+2,cci+58);DEVOUT('Prc4: ')
                DEVPOS(lba+4,cci+1);DEVOUT('Aplicacao:')
                setcor(1)
                DEVPOS(lba+1,cci+16);DEVOUT(merc->cod_barr)
                DEVPOS(lba+1,cci+43);DEVOUT(merc->cod_fab+'-'+LEFT(merc->fabrica,25))
                IF ! EMPTY(m_set[1,72])
                        DEVPOS(lba+2,cci+7);DEVOUT(TRANSFORM(iat(merc->pr_venda*((m_set[1,72]/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))
                ENDIF
                IF ! EMPTY(m_set[1,74])
                        DEVPOS(lba+2,cci+26);DEVOUT(TRANSFORM(iat(merc->pr_venda*((m_set[1,74]/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))
                ENDIF
                IF ! EMPTY(m_set[1,76])
                        DEVPOS(lba+2,cci+45);DEVOUT(TRANSFORM(iat(merc->pr_venda*((m_set[1,76]/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))
                ENDIF
                IF ! EMPTY(m_set[1,78])
                        DEVPOS(lba+2,cci+64);DEVOUT(TRANSFORM(iat(merc->pr_venda*((m_set[1,78]/100)+1),m_set[1,103]),ALLTRIM(m_set[1,98])))
                ENDIF
                IF nivel_acess = '1'
                        setcor(3)
                        DEVPOS(lba+3,cci+1);DEVOUT('V.M.: ')
                        DEVPOS(lba+3,cci+25);DEVOUT('C.M.: ')
                        DEVPOS(lba+3,cci+50);DEVOUT('C.R.: ')
                        setcor(1)
                        DEVPOS(lba+3,cci+07);DEVOUT(TRANSFORM(merc->vlr_merc,ALLTRIM(m_set[1,98])))
                        DEVPOS(lba+3,cci+31);DEVOUT(TRANSFORM(merc->pr_medio,ALLTRIM(m_set[1,98])))
                        DEVPOS(lba+3,cci+56);DEVOUT(TRANSFORM(merc->vlr_merc,ALLTRIM(m_set[1,98])))
                ENDIF
                DEVPOS(lba+4,cci+11);DEVOUT(merc->aplic0)
                DEVPOS(lba+5,cci+11);DEVOUT(merc->aplic1)
                DEVPOS(lba+6,cci+11);DEVOUT(merc->aplic2)
                DEVPOS(lba+7,cci+11);DEVOUT(merc->aplic3)
                nkey := INKEY(0)
        END
        IF nkey == K_ESC
                SELE(msel_ref);IF(mord_ref>0,ORDSETFOCUS(mord_ref),)
                GO mponto
                EXIT
        ELSEIF nkey == K_ENTER
                mcod_m := RECNO()
                mcod_merc := merc->cod_merc
                IF EMPTY(mcod_m)
                        LOOP
                ENDIF
                EXIT
        ELSEIF nkey == 112 .OR. nkey == 80
                mcon := SPACE(10)
                tela1 := SAVESCREEN(00,00,24,79)
                setcor(3)
                botao(10,10,12,25,,' PESQUISAR ')
                setcor(1)
                WVW_DrawBoxGet(,11,11,LEN(ALLTRIM(mcon)))
                @ 11,11 GET mcon PICT '@!'
                READ
                RESTSCREEN(00,00,24,79,tela1)
                IF LASTKEY() = 27
                        CLEAR GETS
                        LOOP
                ENDIF
                mpoint := RECNO()
                IF ! merc->(DBSEEK(RTRIM(mcon),.T.))
                        atencao('A Pesquisa nao foi realizada com sucesso')
                        GO mpoint
                        CLEAR GETS
                        LOOP
                ENDIF
                IF merc->disp = 'N'
                        atencao('Produto nao estar disponivel para VENDA')
                        GO mpoint
                        CLEAR GETS
                        LOOP
                ENDIF
                CLEAR GETS
                oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
                ocolprod[1] := TBCOLUMNNEW('Ref.Aux.',{||merc->ref})
                ocolprod[2] := TBCOLUMNNEW('Mercadoria',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N',REPLI('*',45),merc->merc)})
                ocolprod[3] := TBCOLUMNNEW('Cod.',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N','*****',merc->cod_merc)})
                ocolprod[4] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo_mer,'999999.999')})
                ocolprod[5] := TBCOLUMNNEW(' Preco R$',{||IF(merc->dolar = 'S',TRANSFORM(iat(merc->pr_venda*ver_dolar(mdata_sis),m_set[1,103]),ALLTRIM(m_set[1,98])),TRANSFORM(iat(merc->pr_venda,m_set[1,103]),ALLTRIM(m_set[1,98])))})
                ocolprod[6] := TBCOLUMNNEW('UN',{||merc->unidade})
                ocolprod[7] := TBCOLUMNNEW('Estoque',{||TRANSFORM(merc->saldo_est,'999999.999')})
                ocolprod[8] := TBCOLUMNNEW('Estoque1',{||TRANSFORM(merc->saldo_fis,'999999.999')})
                i:=0
                FOR i=1 TO LEN(ocolprod)
                        oconsprod:ADDCOLUMN(ocolprod[i])
                NEXT
                oconsprod:HEADSEP := CHR(196)
                oconsprod:COLSEP := CHR(179)
                oconsprod:FORCESTABLE()
        ELSEIF nkey == -41
                calcu()
        ELSEIF nkey == 67 .OR. nkey == 99
                IF oconsprod:freeze=0
                        oconsprod:freeze := oconsprod:colpos -1
                        lin_br=21
                ELSE
                        oconsprod:freeze = 0
                        lin_br= 30
                        oconsprod:panhome()
                        oconsprod:refreshall()
                ENDIF
                oconsprod:colorRect({1,1,lin_br,oconsprod:freeze},{2,5})
        ELSE
                IF genkey(oconsprod,nkey,'merc')
                        oconsprod := TBROWSEDB(lci,cci,lba-1,cba)
                        ocolprod[1] := TBCOLUMNNEW('Ref.Aux.',{||merc->ref})
                        ocolprod[2] := TBCOLUMNNEW('Mercadoria',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N',REPLI('*',45),merc->merc)})
                        ocolprod[3] := TBCOLUMNNEW('Cod.',{||IF(EMPTY(merc->cod_merc) .OR. merc->disp = 'N','*****',merc->cod_merc)})
                        ocolprod[4] := TBCOLUMNNEW('    Saldo',{||TRANSFORM(merc->saldo_mer,'999999.999')})
                        ocolprod[5] := TBCOLUMNNEW(' Preco R$',{||IF(merc->dolar = 'S',TRANSFORM(iat(merc->pr_venda*ver_dolar(mdata_sis),m_set[1,103]),ALLTRIM(m_set[1,98])),TRANSFORM(iat(merc->pr_venda,m_set[1,103]),ALLTRIM(m_set[1,98])))})
                        ocolprod[6] := TBCOLUMNNEW('UN',{||merc->unidade})
                        ocolprod[7] := TBCOLUMNNEW('Estoque',{||TRANSFORM(merc->saldo_est,'999999.999')})
                        ocolprod[8] := TBCOLUMNNEW('Estoque1',{||TRANSFORM(merc->saldo_fis,'999999.999')})
                        i:=0
                        FOR i=1 TO LEN(ocolprod)
                                oconsprod:ADDCOLUMN(ocolprod[i])
                        NEXT
                        oconsprod:HEADSEP := CHR(196)
                        oconsprod:COLSEP := CHR(179)
                        oconsprod:FORCESTABLE()
                ENDIF
        ENDIF
END
SELE(msel_ref);IF(mord_ref>0,ORDSETFOCUS(mord_ref),)
wvw_lclosewindow()
IF ! EMPTY(mcod_m)
        RETURN mcod_m
ELSE
        RETURN .F.
ENDIF
RETURN NIL
*************************** f i m *******************************************
FUNCTION ver_gru(vgru,ld,cd,t)
******************************
LOCAL mcons_grupo,ccomm

IF EMPTY(vgru)
        RETURN .T.
ENDIF
mcons_grupo:={}
cComm  := "SELECT * FROM sacgrupo WHERE gru_sub = "+sr_cdbvalue(STRZERO(vgru,3)+'  ')
sr_getconnection():exec( cComm,,.t.,@mcons_grupo)

IF t = .T. .AND. LEN(mcons_grupo) > 0
        vgru := 0
        atencao('Codigo ja Cadastrado !!!')
        RETURN .F.
ENDIF
IF LEN(mcons_grupo) = 0
        vgru := 0
        IF t = .T.
                atencao('Grupo nao Cadastrado !!!')
        ENDIF
        RETURN .F.
ENDIF
setcor(3)
DEVPOS(ld,cd);DEVOUT(mcons_grupo[1,2])
setcor(1)
RETURN .T.
********************** F I M ********************************
* VERIFICA CODIGO DE BARRA
**************************
FUNCTION vercodbarra(vgru,li,ci,t)
**********************************
LOCAL mcons_barr:={}
IF EMPTY(vgru)
        RETURN .T.
ENDIF
mcons_barr:={}
sr_getconnection():exec( "SELECT * FROM sacmerc WHERE cod_barr = "+sr_cdbvalue(vgru),,.t.,@mcons_barr)
IF t = '*'
        IF LEN(mcons_barr) > 0
                atencao('Codigo Barra ja Cadastrado Produto: '+mcons_barr[1,8]+' - '+mcons_barr[1,9]+m_qp+'Codigo Barra do Produto: '+mcons_barr[1,2]+m_qp+'Codigo Barra Solicitado: '+vgru)
                vgru := SPACE(14)
                RETURN .F.
        ELSE
                IF li <> NIL
                        setcor(3)
                        DEVPOS(li,ci);DEVOUT(mcons_barr[1,9])
                        setcor(1)
                        RETURN .T.
                ELSE
                        RETURN .T.
                ENDIF
        ENDIF
ENDIF
IF LEN(mcons_barr) = 0
        vgru := SPACE(14)
        atencao('Codigo Barra nao Cadastrado !!!')
        RETURN .F.
ENDIF
IF li <> NIL
        setcor(3)
        DEVPOS(li,ci);DEVOUT(mcons_barr[1,9])
        setcor(1)
        RETURN .T.
ENDIF
RETURN .T.
************************** F I M **********************
* TABELA DE DESCONTO DE MERCADORIA P/PRODUTO
*******************************
FUNCTION tabcliprod
*******************
LOCAL MPRG:='HTIFUN',;
      m_matriz:={},m_codigo:={},m_cbarra:={},i,opcao,mcod_merc,mcod_bc,mmerc,mdesconto,;
      mvlr_fat,li,ci,lb,cb,lci,cci,lba,cba,tela,machou,mgrupo,tela_ant,;
      f
MEMVAR cod_operado,nivel_acess,mdata_sis,mcod_cli
IF ! ver_nivel(mprg,'TABELA DESCONTO DE PRODUTO P/CLIENTE','15',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF

tela = SAVESCREEN(01,00,24,79)
lci = 01
cci = 00
lba = 25-2
*lba = 17
cba = 79
WHILE .T.
        botao(lci,cci,lba,cba,,' Operador:'+cod_operado,'*')
        DEVPOS(lci,cci+2);DEVOUT(' Tabela de Produto ')
        @ lci+2,cci+1 TO lci+2,cba-1
        DEVPOS(lci+1,cci+1);DEVOUT('Cod.')
        DEVPOS(lci+1,cci+7);DEVOUT('Descricao')
        DEVPOS(lci+1,cci+53);DEVOUT('Sub-Grupo')
        DEVPOS(lci+1,cci+64);DEVOUT('Desconto')
        setcor(3)
        @ lba-4,cci+1 TO lba-4,cba-1
        @ lba-2,cci+1 TO lba-2,cba-1
        setcor(1)
        DEVPOS(lba-4,cci+1);DEVOUT('Cod.')
        DEVPOS(lba-4,cci+7);DEVOUT('Descricao')
        DEVPOS(lba-4,cci+53);DEVOUT('Sub-Grupo')
        DEVPOS(lba-4,cci+64);DEVOUT('Desconto')
        tela_ant := SAVESCREEN(00,00,24,79)
        mcod_cli := cli->cod_cli
        WHILE .T.
                ASIZE(m_matriz,0)
                ****************************
                SELE('tabme');ORDSETFOCUS(2)
                GO TOP
                ****************************
                IF tabme->(DBSEEK(cli->cod_cli))
                        WHILE cli->cod_cli = tabme->cod_cli
                                IF ! EMPTY(tabme->grupo)
                                        ver_sgru(VAL(SUBSTR(tabme->grupo,1,3)),VAL(SUBSTR(tabme->grupo,4)))
                                        AADD(m_matriz,{tabme->codigo,grup->merc,tabme->desconto,tabme->grupo})
                                ELSE
                                        ver_cod(VAL(tabme->codigo))
                                        AADD(m_matriz,{tabme->codigo,merc->merc,tabme->desconto,tabme->grupo})
                                ENDIF
                                SKIP
                        ENDDO
                ENDIF
                machou := ' '
                limpa(lci+3,cci+1,lba-5,cba-1)
                f = 0
                i = 1
                WHILE  i <= LEN(m_matriz)
                        setcor(3)
                        @ lci+3+f,cci+1 SAY m_matriz[i,1]
                        @ lci+3+f,cci+07 SAY m_matriz[i,2]
                        @ lci+3+f,cci+53 SAY m_matriz[i,4] PICT '@R 999.99'
                        @ lci+3+f,cci+64 SAY m_matriz[i,3] PICT '999999.99'
                        setcor(1)
                        IF f > 11
                                SCROLL(lci+3,cci+1,lba-5,cba-1,1)
                                setcor(1)
                                i++
                        ELSE
                                i++
                                f++
                        ENDIF
                ENDDO
                mcod_merc := mdesconto := 0
                mcod_bc := SPACE(13)
                mmerc := SPACE(40)
                mgrupo := SPACE(5)
                limpa(lba-3,cci+1,lba-3,cba-1)
                mensagem('Digite codigo ou nome mercadoria - <ALT+P>Cons.Produtos - <ESC>Abandonar')
                @ lba-3,cci+1 GET mcod_bc PICT '@!'  VALID lim_get() WHEN men_get(lba-09,cci+10,'Informe o Cod.do produto - <ENTER>p/descricao ou  <F4>p/pesquisar')
                READ
                IF LASTKEY() = 27
                        ASIZE(m_codigo,0)
                        ASIZE(m_matriz,0)
                        RESTSCREEN(01,00,24,79,tela)
                        ****************
                        SELE('cli');ORDSETFOCUS(2)
                        ****************
                        RETURN NIL
                ENDIF
                IF EMPTY(mcod_bc)
                        @ lba-3,cci+7 GET mmerc PICT '@!' VALID lim_get() WHEN men_get(lba-09,cci+28,'<Digite descricao mercadoria>  <ENTER>p/retornar  <F4>p/pesquisar')
                        READ
                        IF LASTKEY() = 27;LOOP;ENDIF
                ENDIF
                IF EMPTY(mcod_bc) .AND. EMPTY(mmerc)
                        @ lba-3,cci+53 GET mgrupo PICT '@R 999.99' VALID lim_get() WHEN men_get(lba-09,cci+53,'<Digite Cod. do Sub-Grupo  <ENTER>p/retornar')
                        READ
                        IF LASTKEY() = 27;LOOP;ENDIF
                ENDIF
                IF EMPTY(mcod_bc) .AND. EMPTY(mmerc) .AND. EMPTY(mgrupo)
                        LOOP
                ENDIF
                IF ! EMPTY(mcod_bc)
                        IF LEN(RTRIM(mcod_bc)) > 5
                                *************
                                SELE('merc');ORDSETFOCUS(6)
                                *************

                                SEEK mcod_bc

                                IF ! FOUND()
                                        atencao('Codigo de BARRA nao cadastrado')
                                        LOOP
                                ENDIF
                        ELSE
                                mcod_merc := VAL(mcod_bc)
                                *************
                                SELE('merc');ORDSETFOCUS(1)
                                *************
                                SEEK mcod_merc

                                IF ! FOUND()
                                        atencao('Codigo da mercadoria nao cadastrado')
                                        LOOP
                                ENDIF
                        ENDIF
                ELSEIF ! EMPTY(mgrupo)
                        *************
                        SELE('grup');ORDSETFOCUS(1)
                        *************
                        SEEK mgrupo
                        IF ! FOUND()
                                atencao('Codigo do SUB-GRUPO nao cadastrado')
                                LOOP
                        ENDIF
                ELSEIF ! EMPTY(mmerc)
                        *************
                        SELE('merc');ORDSETFOCUS(3)
                        *************

                        SEEK RTRIM(mmerc)

                        IF ! FOUND()
                                atencao('Esta mercadoria nao cadastrada')
                                LOOP
                        ENDIF
                        IF merc->cod_merc = SPACE(5)
                                WHILE ! EOF() .AND. merc->cod_merc = SPACE(5)
                                        SKIP
                                ENDDO
                        ENDIF
                        IF EOF() .OR. merc->cod_merc = SPACE(5)
                                atencao('Mercadoria nao cadastrada')
                                LOOP
                        ENDIF
                        IF(m_set[1,93] <> 'A',f4_merc(),f4_merc1())
                        IF LASTKEY() = 27
                                LOOP
                        ENDIF
                ENDIF
                IF ! EMPTY(mgrupo)
                        mcod_merc := VAL(merc->cod_merc)
                        ****************************
                        SELE('tabme');ORDSETFOCUS(3)
                        GO TOP
                        ****************************
                        IF tabme->(DBSEEK(mgrupo+STR(cli->cod_cli,5)))
                                atencao('Este SUB-GRUPO ja esta cadastrada p/este cliente !!!')
                                mdesconto := tabme->desconto
                                machou := '*'
                        ENDIF
                        mmerc := grup->merc
                ELSE
                        mcod_merc := VAL(merc->cod_merc)
                        ****************************
                        SELE('tabme');ORDSETFOCUS(1)
                        GO TOP
                        ****************************
                        IF tabme->(DBSEEK(STRZERO(mcod_merc,5)+STR(cli->cod_cli,5)))
                                atencao('Esta mercadoria ja esta cadastrada p/este cliente !!!')
                                mdesconto := tabme->desconto
                                machou := '*'
                        ENDIF
                        mmerc := merc->merc
                ENDIF
                setcor(3)
                @ lba-3,cci+6 SAY '?'
                @ lba-3,cci+01 SAY mcod_merc
                @ lba-3,cci+07 SAY mmerc
                @ lba-3,cci+53 SAY mgrupo PICT '@R 999.99'
                setcor(1)
                @ lba-3,cci+64 GET mdesconto PICT '999.99'       // WHEN men_get(12,cci+42,'Informe a quantidade que deseja, so nao pode ultrapassar o saldo da mercadoria') VALID lim_get()
                READ
                IF LASTKEY() = 27
                        LOOP
                ENDIF
                setcor(1)
                opcao := op_simnao('S','Confirma Inclusao/alteracao da Mercadoria [S/n]:')
                IF opcao = 'S'
                        IF machou = '*'
                                BLOQREG()
                                IF mdesconto = 0
                                        DELE
                                ELSE
                                        tabme->desconto := mdesconto
                                ENDIF
                                DBUNLOCK()
                                DBCOMMIT()
                                sr_getconnection():exec("DELETE FROM sactabme WHERE SR_DELETED = 'T'",,.f.)
                                sr_getconnection():exec("COMMIT",,.f.)
                        ELSE
                                ADIREG()
                                IF ! EMPTY(mgrupo)
                                        tabme->data     := mdata_sis
                                        tabme->grupo    := mgrupo
                                        tabme->cod_cli  := cli->cod_cli
                                        tabme->desconto := mdesconto
                                ELSE
                                        tabme->data     := mdata_sis
                                        tabme->codigo   := mcod_merc
                                        tabme->cod_cli  := cli->cod_cli
                                        tabme->desconto := mdesconto
                                ENDIF
                                DBUNLOCK()
                                DBCOMMIT()
                        ENDIF
                        **********
                        SELE('merc');ORDSETFOCUS(1)
                        **********
                ELSE
                        DBUNLOCKALL()
                ENDIF
        ENDDO
ENDDO
RETURN NIL
***************************  F I M  **********************************
* VERIFICA SE O PEDIDO JA FOI EMITIDO A NOTA FISCAL
****************************************************
FUNCTION v_ped_nt(num_pedido,p,mum)
***********************************
LOCAL msele,morde,mdocumento:='        ',cons_nota:={},cont_nota:=0
IF EMPTY(num_pedido)
        RETURN .T.
ENDIF
cons_nota := {}
sr_getconnection():exec("SELECT * FROM sactotnt WHERE num_ped = "+sr_cdbvalue(STRZERO(num_pedido,6))+" AND ent_sai = 'S'",,.t.,@cons_nota)
IF LEN(cons_nota) > 0
        mdocumento := cons_nota[LEN(cons_nota),5]
        IF mum <> NIL
                RETURN mdocumento
        ENDIF
        cont_nota:=0
        FOR cont_nota = 1 TO LEN(cons_nota)
                mdocumento := mdocumento +'-'+ cons_nota[cont_nota,5]
        NEXT
        IF p = NIL
                atencao('Este pedido ja foi emitido NOTA FISCAL de No.: '+mdocumento)
                RETURN .T.
        ENDIF
        RETURN mdocumento
ENDIF
cons_nota := {}
sr_getconnection():exec("SELECT * FROM sacmov WHERE num_ped = "+sr_cdbvalue(STRZERO(num_pedido,6))+" AND ent_sai = 'S' AND documento LIKE 'C%'",,.t.,@cons_nota)
IF LEN(cons_nota) > 0
        mdocumento := cons_nota[LEN(cons_nota),2]
        IF mum <> NIL
                RETURN mdocumento
        ENDIF
        cont_nota:=0
        FOR cont_nota = 1 TO LEN(cons_nota)
                mdocumento := mdocumento +'-'+ cons_nota[cont_nota,2]
        NEXT
        IF p = NIL
                atencao('Este pedido ja foi emitido CUPOM FISCAL de No.: '+mdocumento)
                RETURN .T.
        ENDIF
        RETURN mdocumento
ENDIF
IF p = NIL
        RETURN .T.
ELSE
        RETURN mdocumento
ENDIF
RETURN .T.
****************************** F I M **************************************
* VER UNIDADE DE MEDIDAS
************************
FUNCTION unidade(munid)
****************************
IF ver_serie() = '141237'
        mmasc := '9'+ALLTRIM(m_set[1,99])
/*
ELSEIF m_set[1,96] = 'P'
        IF munid = 'KG ' .OR. munid = 'L  '
                mmasc := '999,999.999'
        ELSEIF munid = 'M  ' .OR. munid = 'MT '
                mmasc := '9999,999.99'
        ELSEIF munid = 'UN ' .OR. munid = 'PC ' .OR. munid = 'CX ' .OR. munid = 'FD '
                mmasc := '999,999,999'
        ELSE
                mmasc := '9'+ALLTRIM(m_set[1,99])
        ENDIF
*/
ELSEIF m_set[1,44] = 'S'
        mmasc := '9'+ALLTRIM(m_set[1,99])
ELSE
        IF munid = 'KG ' .OR. munid = 'L  ' .OR. munid = 'LT '
                mmasc := '999,999.999'
        ELSEIF munid = 'M  ' .OR. munid = 'MT '
                mmasc := '9999,999.99'
        ELSEIF munid = 'UN ' .OR. munid = 'PC ' .OR. munid = 'CX ' .OR. munid = 'FD '
                mmasc := '999,999,999'
        ELSE
                mmasc := '9'+ALLTRIM(m_set[1,99])
        ENDIF
ENDIF
RETURN mmasc
****************************** F I M *************************************
* VER UNIDADE DE MEDIDAS
************************
FUNCTION unidade1(munid)
************************
IF munid = 'UN ' .OR. munid = 'UND'
        mmasc := '1'
ELSEIF munid = 'M  ' .OR. munid = 'MT '
        mmasc := '2'
ELSEIF munid = 'PC '
        mmasc := '3'
ELSEIF munid = 'CX '
        mmasc := '4'
ELSEIF munid = 'KG '
        mmasc := '5'
ELSEIF munid = 'FD '
        mmasc := '6'
ELSE
        mmasc := '1'
ENDIF
RETURN mmasc
*******************************  F I M ************************************
FUNCTION cons_luc()
************************************
MEMVAR mnum_ped
LOCAL mlucro_ped
mlucro_ped := {}
sr_getconnection():exec("SELECT sum(pquantd * pcust_real),SUM(pquantd * ppre_venda) FROM sacped_s WHERE sr_deleted = ' ' AND pnum_ped = "+sr_cdbvalue(STRZERO(mnum_ped,6)),,.t.,@mlucro_ped)
IF LEN(mlucro_ped) = 0
        atencao('Nao existe este PEDIDO...')
	RETURN NIL
ENDIF
op_tela(10,10,16,60,' Consulta de Lucro')
DEVPOS(00,1);DEVOUT('Total a Preco de Venda R$:')
DEVPOS(01,1);DEVOUT('Total a Preco de Custo R$:')
DEVPOS(02,1);DEVOUT('                           ----------')
DEVPOS(03,1);DEVOUT('Lucro................. R$:')
DEVPOS(04,1);DEVOUT('Lucro.................(%):')
setcor(3)
DEVPOS(00,28);DEVOUT(TRANSFORM(mlucro_ped[1,2],'999,999.99'))
DEVPOS(01,28);DEVOUT(TRANSFORM(mlucro_ped[1,1],'999,999.99'))
DEVPOS(03,28);DEVOUT(TRANSFORM(mlucro_ped[1,2] - mlucro_ped[1,1],'999,999.99'))
DEVPOS(04,28);DEVOUT(TRANSFORM((((mlucro_ped[1,2] - mlucro_ped[1,1])/mlucro_ped[1,1]))*100,'9,999.99'))
setcor(1)
mensagem('Pressione qualquer tecla p/continuar')
INKEY(0)
wvw_lclosewindow()
RETURN NIL
********************************** F I M ***************************************
FUNCTION ped_rom(mnum,tip)
*********************
LOCAL cid_sele,cid_orde

cid_sele := SELE()
cid_orde := INDEXORD()
IF ! AbriArq('sacroma','roma');RETURN NIL;ENDIF
********************
SELE('roma');ORDSETFOCUS(2)
GO TOP
********************
IF roma->(DBSEEK(STRZERO(mnum,6)+' '+'P'))
        SELE(cid_sele);ORDSETFOCUS(cid_orde)
        RELEASE cid_sele,cid_orde
        RETURN roma->num_roma
ELSE
        SELE(cid_sele);ORDSETFOCUS(cid_orde)
        RELEASE cid_sele,cid_orde
        RETURN SPACE(6)
ENDIF
SELE(cid_sele);ORDSETFOCUS(cid_orde)
RELEASE cid_sele,cid_orde
RETURN .T.
***************************** F I M ****************************************
FUNCTION ver_dia(mv)
***************
LOCAL mdia
IF dow(mv)=1
        mdia := 'DOMINGO'
ELSEIF dow(mv)=2
        mdia := 'SEGUNDA FEIRA'
ELSEIF dow(mv)=3
        mdia := 'TERCA FEIRA'
ELSEIF dow(mv)=4
        mdia := 'QUARTA FEIRA'
ELSEIF dow(mv)=5
        mdia := 'QUINTA FEIRA'
ELSEIF dow(mv)=6
        mdia := 'SEXTA FEIRA'
ELSEIF dow(mv)=7
        mdia := 'SABADO'
ENDIF
RETURN mdia
************************** F I M ***************************************
* PESQUISA O CPF SE EXISTE
******************************
FUNCTION pesq_cpf(ncpf,narq,condicao)
*************************************
LOCAL cons_cpf:={},ccomm:=''
IF EMPTY(ncpf)
        RETURN .T.
ENDIF
IF SUBSTR(ncpf,10,2) <> GDV2(SUBSTR(ncpf,1,9))
        atencao('C.P.F. nao confere OK !!!')
        RETURN .F.
ENDIF
cons_cpf := {}
IF narq = 'cli'
        cComm  := "SELECT * FROM saccli WHERE cpf = "+sr_cdbvalue(ncpf)
ELSE
        cComm  := "SELECT * FROM sactran WHERE cpf = "+sr_cdbvalue(ncpf)
ENDIF
sr_getconnection():exec(ccomm,,.t.,@cons_cpf)
IF condicao <> NIL .AND. LEN(cons_cpf) > 0
        atencao('C.P.F. ja cadastrado...')
        RETURN .F.
ENDIF
RETURN .T.
******************************* f i m *********************************************
* VERIFICA O CONDICAO PAGTO.
****************************
FUNCTION ver_cond(mcod,ld,cd,p,valerta)
***************************************
LOCAL aret:={}

IF EMPTY(mcod) .AND. ld <> NIL
        setcor(3)
        DEVPOS(ld,cd);DEVOUT(SPACE(20))
        setcor(1)
        RETURN .T.
ENDIF

IF EMPTY(mcod) .AND. p = NIL
        RETURN .T.
ENDIF
sr_getconnection():exec("SELECT descri FROM sactabpg WHERE codigo = "+sr_cdbvalue(STRZERO(mcod,3)),,.t.,@aret)
IF LEN(aret) = 0
        IF p = NIL
                setcor(3)
                DEVPOS(ld,cd);DEVOUT(SPACE(20))
                setcor(1)
                atencao('Condicao de Pagamento: '+STRZERO(mcod,3)+' nao Cadastrado !!!')
                mcod := 0
                RETURN .F.
        ENDIF
        mcod := 0
        RETURN .T.
ENDIF
IF valerta <> NIL
        atencao('Descricao: '+aret[1,1]+' ')
ENDIF
IF ld <> NIL
        setcor(3)
        DEVPOS(ld,cd);DEVOUT(aret[1,1])
        setcor(1)
ENDIF
RETURN .T.
********************************** F I M ***********************************
* VERIFICA REGIOES
******************
FUNCTION ver_regi(vreg,li,ci,t,mzero)
*************************************
LOCAL msele,morde

IF (mzero <> NIL .OR. mzero = 0) .AND. mzero <> 1
        IF EMPTY(vreg)
                IF li <> NIL
                        setcor(3)
                        DEVPOS(li,ci);DEVOUT(SPACE(20))
                        setcor(1)
                ENDIF
                RETURN .T.
        ENDIF
ENDIF

msele := SELE()
morde := INDEXORD()

IF ! AbriArq('regiao','reg');RETURN NIL;ENDIF
**************
SELE('reg');ORDSETFOCUS(1)
GO TOP
**************
SEEK vreg
IF t = .T. .AND. FOUND()
        vreg := SPACE(2)
        atencao('Codigo ja Cadastrado !!!')
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .F.
ENDIF
IF ! FOUND()
        vreg := SPACE(2)
        atencao('Codigo nao Cadastrado !!!')
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .F.
ENDIF
IF li = NIL
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .T.
ENDIF
setcor(3)
DEVPOS(li,ci);DEVOUT(reg->regiao)
setcor(1)
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
RETURN .T.
******************************** F I M ************************************88
* FUNCAO PARA CHECAR O LIMITE
**************************************
FUNCTION limite(mcod,mvalor,mtipo,mped)
***************************************
LOCAL liberado:='*',rodape,ponto,mcont_ch,mcam_arq:=' ',i:=0,;
      mcpfcnpj := ' ',mcli_spc,mcam_cli:=' ',;
      nErr, nPos,vEmp := {},nCnn,oSql,cComm, apCode,aret:={}

MEMVAR mlim_venc,mlim_avenc,mtot_limite,mdata_sis

mlim_venc := mlim_avenc := mtot_limite := 0
IF mcod = m_set[1,84] .OR. cons_cli[1,42] = 'N'
        RETURN .T.
ENDIF
aret:={}
cComm  := "SELECT SUM(valor) FROM sacdupr WHERE sacdupr.fornec = "+sr_cdbvalue(mcod)+" AND sacdupr.venc < "+sr_cdbvalue(mdata_sis)+" AND (sacdupr.pago = ' ' OR sacdupr.pago IS NULL)"
sr_getconnection():exec(ccomm,,.t.,@aret)
mlim_venc := aret[1,1]

aret:={}
cComm  := "SELECT SUM(valor) FROM sacdupr WHERE sacdupr.fornec = "+sr_cdbvalue(mcod)+" AND sacdupr.venc > "+sr_cdbvalue(mdata_sis)+" AND (sacdupr.pago = ' ' OR sacdupr.pago IS NULL)"
sr_getconnection():exec(ccomm,,.t.,@aret)
mlim_avenc := aret[1,1]

mtot_limite := mlim_avenc + mlim_venc

aret:={}
cComm  := "SELECT limite FROM saccli WHERE cod_cli = "+sr_cdbvalue(mcod)
sr_getconnection():exec(ccomm,,.t.,@aret)
IF aret[1,1] > 0 .AND. mtot_limite+mvalor > aret[1,1]
        	IF mtipo = NIL
                        liberado := ' '
                        IF ! aut_sen('Cliente LIMITE R$: '+TRANSFORM(cli->limite,'999999.99')+' ESTORADO em '+TRANSFORM((mtot_limite+mvalor) - aret[1,1],'999999.99')+'Senha de autorizacao:','LIMIT_EST',,mcod)
                                RETURN .F.
                        ENDIF
                        liberado := '*'
                ELSE
                        atencao('Cliente com LIMITE R$: '+TRANSFORM(aret[1,1],'999999.99')+' ESTORADO em '+TRANSFORM((mtot_limite+mvalor) - aret[1,1],'999999.99')+' !!!')
                ENDIF

ENDIF
IF liberado = '*' .OR. mtipo <> NIL
        RETURN .T.
ELSE
        RETURN .F.
ENDIF
******************************** F I M ************************************88
#include "inkey.ch"              // constantes de codigos das teclas
MEMVAR getlist
***********************
* VERIFICA O ENVELOPE
***********************
FUNCTION ver_envelope(menv,t,ali)
*********************************
LOCAL msele,morde,malias
*IF VAL(SUBSTR(menv,1,2))=0;RETURN .T.;ENDIF
msele := SELE()
morde := INDEXORD()
IF ! AbriArq('sacped_s','ped_s');RETURN NIL;ENDIF
IF ! AbriArq('sacorcam','orcam');RETURN NIL;ENDIF
IF ali = '*'
        malias := 'orcam'
ELSE
        malias := 'ped_s'
ENDIF
***************
SELE(malias);ORDSETFOCUS(10)
GO TOP
***************
IF (malias)->(DBSEEK(menv))
        IF t = NIL
                atencao('Este envelope ja foi solicitado no PEDIDO No.: '+(malias)->pnum_ped)
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .F.
        ELSE
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN .T.
        ENDIF
ELSE
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .T.
ENDIF
RETURN NIL
***************************** F I M ****************************************
* VER ALIQUOTA DO FINANCIAMENTO
***************************
FUNCTION ver_aliq(mcod,mtip)
************************
LOCAL msele,morder
MEMVAR maliq_fin

msele := SELE()
morder := INDEXORD()
***************
SELE('fin');ORDSETFOCUS(1)
GO TOP
***************
IF ! fin->(DBSEEK(STRZERO(mcod,3)+mtip))
        atencao('Esta Tipo de financiamento nao esta cadastrado !!!')
        SELE(msele);IF(morder>0,ORDSETFOCUS(morder),)
        RETURN .F.
ENDIF
maliq_fin := fin->aliq_fin
SELE(msele);IF(morder>0,ORDSETFOCUS(morder),)
RETURN .T.
**************************** F I M ****************************************
* FUNCAO PARA DUPLICATAS POR CLIENTE
**************************************
FUNCTION cli_dup(mcod,mcred,mdocu)
**********************************
LOCAL mduplicata:=' ',msele,morde,mali_dup:='    ',mvd:=0,cons_cred:={},mcomando,mcom,cons_c:={}

mcom := "SELECT * FROM saccli WHERE cod_cli = "+sr_cdbvalue(mcod)
sr_getconnection():exec(mcom,,.t.,@cons_c)
IF LEN(cons_c) = 0 
	atencao('Nao foi possivel encontrar este CLIENTE...')
        RETURN mduplicata
ENDIF	
IF (mcod = m_set[1,84] .OR. cons_c[1,42] = 'N') .AND. mcred = NIL
        RETURN mduplicata
ENDIF
cons_cred := {}
IF mcred = NIL
        mcomando := "SELECT * FROM sacdupr WHERE fornec = "+sr_cdbvalue(mcod)+" AND (pago IS NULL OR pago = ' ') AND NOT tipo = 'CT'"
        IF mdocu <> NIL
                mcomando := mcomando + " AND duplicata = "+sr_cdbvalue(mdocu)
        ENDIF
ELSE
        mcomando := "SELECT * FROM saccred WHERE fornec = "+sr_cdbvalue(mcod)+" AND (pago IS NULL OR pago = ' ') AND NOT tipo = 'CT'"
        IF mdocu <> NIL
                mcomando := mcomando + " AND duplicata = "+sr_cdbvalue(mdocu)
        ENDIF
ENDIF
sr_getconnection():exec(mcomando,,.t.,@cons_cred)
IF LEN(cons_cred) > 0
        FOR c = 1 TO LEN(cons_cred)
                mduplicata := mduplicata + ' Doc.:'+cons_cred[c,2]+RTRIM(cons_cred[c,4])
                IF mcred <> NIL
                        mvd := mvd + cons_cred[c,19]
                ENDIF
        NEXT
ENDIF
IF mcred = NIL
        RETURN mduplicata
ELSE
        RETURN mvd
ENDIF
******************************** F I M ************************************88
* CONSULTAR CREDITO DO CLIENTE
*********************************
FUNCTION c_credito()
********************
LOCAL conscred:={},i:=0,point:=0,li:=0,ci:=0,la:=21,ca:=63,mconsdupr:={},;
      mcont_doc:=0,mtotal_doc:=0

mcomando := "SELECT * FROM saccred WHERE fornec = "+sr_cdbvalue(mcod_cli)+" AND (pago IS NULL OR pago = ' ')"
sr_getconnection():exec(mcomando,,.t.,@conscred)
FOR i = 1 TO LEN(conscred)
        AADD(mconsdupr,' '+conscred[i,2]+' '+conscred[i,4]+' '+conscred[i,26]+'  '+conscred[i,3]+'   '+DTOC(conscred[i,11])+'   '+TRANSFORM(conscred[i,19],'999,999.99')+' '+conscred[i,28]+' '+IF(! EMPTY(conscred[i,43]),'S/F','   ')+' '+conscred[i,1])
        mcont_doc ++
        mtotal_doc := mtotal_doc + conscred[i,19]
NEXT
op_tela(li,ci,la+2,ca,'CONSULTA DE CREDITO DO CLIENTES')
mensagem('<ESC> Retorna  -  <ENTER> p/Confirmar')
setcor(3)
DEVPOS(li+1,ci+01);DEVOUT('Documento')
DEVPOS(li+1,ci+18);DEVOUT('Op')
DEVPOS(li+1,ci+21);DEVOUT(' No.')
DEVPOS(li+1,ci+27);DEVOUT('Vencimento')
DEVPOS(li+1,ci+44);DEVOUT('Valor')
DEVPOS(li+1,ci+56);DEVOUT('Emp')
@ li+2,ci+1 TO li+2,ca-1
@ la-2,ci+1 TO la-2,ca-1
DEVPOS(la-1,ci+1);DEVOUT('Quantidade:')
DEVPOS(la-1,ci+24);DEVOUT('Total:')
setcor(1)
DEVPOS(la-1,ci+13);DEVOUT(STRZERO(mcont_doc,4))
DEVPOS(la-1,ci+31);DEVOUT(TRANSFORM(mtotal_doc,'9,999,999.99'))
point := ACHOICE(li+3,ci+1,la-3,ca-1,mconsdupr,,,point)
wvw_lclosewindow()
DO CASE
        CASE LASTKEY()=27
                RETURN 0
                mn_cred := SPACE(8)
        CASE LASTKEY() = 13
                mn_cred := conscred[point,4]
                RETURN conscred[point,4]
ENDCASE
RETURN 0
******************************** F I M ************************************
* FUNCAO P/CONSULTAR TRANSPORTADORA
********************************
FUNCTION f5_trans(mnome,mcgc,mend,mmun,muf,minsc,mplaca,mcod)
*******************************************************
LOCAL lci,cci,lba,cba,point,msele,morde,m_transp:={},m_point:={},opcao
MEMVAR mcgccpf,mcpf,mcod_tran
msele := SELE()
morde := INDEXORD()
lci := cci := 0
lba := 22
cba := 40
setcor(1)
************
SELE('tran');ORDSETFOCUS(2)
GO TOP
*************
IF ! EMPTY(mcod)
        ************
        SELE('tran');ORDSETFOCUS(1)
        GO TOP
        *************
        IF tran->(DBSEEK(mcod))
                mnome := tran->razao
                IF ! EMPTY(tran->cgc)
                        mcgc := tran->cgc
                        mcgccpf := 'tran->CGC'
                ELSEIF ! EMPTY(tran->cpf)
                        mcgc := tran->cpf
                        mcgccpf := 'CPF'
                ENDIF
                mcod := tran->cod_tran
                mend := tran->endereco
                mmun := tran->cidade
                muf := tran->uf
                minsc := tran->insc
                mplaca := tran->placa
                mensagem('Preencha os Campos - <ESC> p/Retornar ')
                ******************
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                ******************
                RETURN NIL
        ENDIF
ENDIF
ASIZE(m_transp,0)
ASIZE(m_point,0)
WHILE ! EOF()
        AADD(m_transp,tran->razao+' - '+tran->cod_tran)
        AADD(m_point,RECNO())
        SKIP
ENDDO
op_tela(lci,cci,lba+2,cba,' Consulta de Transportadoras ','*')
WHILE .T.
        setcor(3)
        point := ACHOICE(lci,cci+1,lba,cba-1,m_transp)
        IF point = 0
                ******************
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                ******************
                EXIT
        ELSE
                GO m_point[point]
                mnome := tran->razao
                IF ! EMPTY(tran->cgc)
                        mcgc := tran->cgc
                        mcgccpf := 'CGC'
                ELSEIF ! EMPTY(tran->cpf)
                        mcgc := tran->cpf
                        mcgccpf := 'CPF'
                ENDIF
                mcod_tran := tran->cod_tran
                mend := tran->endereco
                mmun := tran->cidade
                muf := tran->uf
                minsc := tran->insc
                mplaca := tran->placa
                mantt := tran->antt
                mapolice := tran->apolice
                mpluf_trans := tran->uf_placa
                mensagem('Preencha os Campos - <ESC> p/Retornar ')
                ******************
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                ******************
                EXIT
        ENDIF
ENDDO
setcor(1)
wvw_lclosewindow()
RETURN NIL
*********************** F I M ************************************************
* FUNCAO PARA VERIFICAR COD.NAT.OPERACAO
****************************************
FUNCTION ver_nat(cod,mt_p,li,co)
*********************
LOCAL msele,morde,cons_nat
MEMVAR mnatureza,mcredito,msai_ent
IF EMPTY(cod)
        RETURN .T.
ENDIF
msele := SELE()
morde := INDEXORD()
IF ! AbriArq('sacop','op');RETURN NIL;ENDIF
*****************
SELE('op');ORDSETFOCUS(1)
GO TOP
*****************
IF ! op->(DBSEEK(cod))
        atencao('Este CFOP: '+cod+'  nao esta cadastrado em nossos arquivos !!!')
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .F.
ELSE
        IF op->sai_ent = 'S' .AND. mt_p = 'E'
                atencao('Este CFOP e de SAIDA por isso nao pode ser usado na ENTRADA DE MERCADORIA')
                RETURN .F.
        ENDIF
        mnatureza := op->descr_op
        mcredito  := op->credito
        msai_ent  := op->sai_ent
        IF li # NIL
                DEVPOS(li,co);DEVOUT(mnatureza)
        ENDIF
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .T.
ENDIF
RETURN NIL
********************** F I M ********************************
*****************************
FUNCTION icm_merc(cod)
*****************************
LOCAL msele,morde
MEMVAR mdif_icm,micm_sub
msele := SELE()
morde := INDEXORD()
****************
SELE('merc');ORDSETFOCUS(1)
GO TOP
****************
IF ! merc->(DBSEEK(STRZERO(cod,5)))
        SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
        RETURN .T.
ENDIF
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
mdif_icm := merc->bebida
micm_sub := merc->icm_sub
RETURN NIL

**************************** F I M ******************************************
/*
* APAGA O ARQUIVOI DE CONTROLE "HTI.001"
*****************************************
FUNCTION apaga_HTI()
mensagem('Ajustando o ambiente do sistema HTI.001')
WHILE .T.
        MYRUN('DEL HTI.001')
        IF ! SR_PhFile('HTI.001')
                EXIT
        ENDIF
ENDDO
RETURN NIL
*/
**************************** F I M ******************************************
*****************************************
* VERIFICA A ATUALIZACAO DO INVENTARIO
*****************************************
FUNCTION inventario
*******************
LOCAL mprg:='INVENTARIO',;
      mano:='  ',mmes:= '  ',mdata,m_inventario,m_merc,i:=0

IF ! ver_nivel(mprg,'FECHAMENTO DO MES','1',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF

op_tela(10,10,12,70,' FECHAMENTO DO MES ')
DEVPOS(00,01);DEVOUT('Digite o MES:')
DEVPOS(01,01);DEVOUT('Digite o ANO:')
@ 00,15 GET mmes PICT "99" VALID mmes $ '01,02,03,04,05,06,07,08,09,10,11,12'
@ 01,15 GET mano PICT "99" VALID IF(EMPTY(mano),.F.,.T.)
READ
IF LASTKEY() = 27
        wvw_lclosewindow()
        RETURN NIL
ENDIF
IF 'N' = op_simnao('N','Confirma a Operacao:')
        wvw_lclosewindow()
        RETURN NIL
ENDIF

mdata := mmes+'/'+mano
m_inventario := {}
sr_getconnection():exec("SELECT * FROM inventario WHERE mes_ano = "+sr_cdbvalue(mdata),,.t.,@m_inventario)
IF LEN(m_inventario) = 0
        m_merc := {}
        sr_getconnection():exec("SELECT * FROM sacmerc",,.t.,@m_merc)
        i:=0
        FOR i = 1 TO LEN(m_merc)
                mensagem('Aguarde um momento atualizando o INVENTARIO...'+STRZERO(1,5))
                sr_getconnection():exec('INSERT INTO inventario ('+;
                'mes_ano      '+;       //1
                ',data_atu    '+;       //2
                ',empresa     '+;       //3
                ',cod_barr    '+;       //4
                ',ref         '+;       //5
                ',gru_sub     '+;       //6
                ',cod_merc    '+;       //7
                ',merc        '+;       //8
                ',tipo_merc   '+;       //9
                ',data_cad    '+;       //10
                ',unidade     '+;       //11
                ',peso_liq    '+;       //12
                ',peso        '+;       //13
                ',est_min     '+;       //14
                ',est_max     '+;       //15
                ',cod_fab     '+;       //16
                ',pr_unit     '+;       //17
                ',vlr_merc    '+;       //18
                ',cust_merc   '+;       //19
                ',cust_real   '+;       //20
                ',pr_venda    '+;       //21
                ',saldo_fis   '+;       //22
                ',saldo_mer   '+;       //23
                ',saldo_est   '+;       //24
                ',icm         '+;       //25
                ',isento      '+;       //26
                ',bebida      '+;       //27
                ',icm_sub     '+;       //28
                ',icm_sub2    '+;       //29
                ',ipi         '+;       //30
                ',cod_clf     '+;       //31
                ',cod_fis     '+;       //32
                ',sittrib     '+;       //33
                ',prodepe     '+;       //34
                ',nbm         '+;       //35
                ',desc_icm    '+;       //36
                ',desc_icm1   '+;       //37
                ',local       '+;       //38
                ',gramatura   '+;       //39
                ',fatconv     '+;       //40
                ',dolar       '+;       //41
                ',aplic0      '+;       //42
                ',aplic1      '+;       //43
                ',aplic2      '+;       //44
                ',aplic3      '+;       //45
                ',aplic4      '+;       //46
                ',descri      '+;       //47
                ',SR_DELETED )'+;
                ' VALUES ('+;
                sr_cdbvalue(mdata)+','+;        //1
                sr_cdbvalue(mdata_sis)+','+;       //2
                sr_cdbvalue(m_merc[i,1])+','+;  //3
                sr_cdbvalue(m_merc[i,2])+','+;  //4
                sr_cdbvalue(m_merc[i,6])+','+;  //5
                sr_cdbvalue(m_merc[i,7])+','+;  //6
                sr_cdbvalue(m_merc[i,8])+','+;  //7
                sr_cdbvalue(m_merc[i,9])+','+;  //8
                sr_cdbvalue(m_merc[i,10])+','+;  //9
                sr_cdbvalue(m_merc[i,13])+','+;  //10
                sr_cdbvalue(m_merc[i,14])+','+;  //11
                sr_cdbvalue(m_merc[i,16])+','+;  //12
                sr_cdbvalue(m_merc[i,17])+','+;  //13
                sr_cdbvalue(m_merc[i,28])+','+;  //14
                sr_cdbvalue(m_merc[i,29])+','+;  //15
                sr_cdbvalue(m_merc[i,30])+','+;  //16
                sr_cdbvalue(m_merc[i,42])+','+;  //17
                sr_cdbvalue(m_merc[i,43])+','+;  //18
                sr_cdbvalue(m_merc[i,44])+','+;  //19
                sr_cdbvalue(m_merc[i,45])+','+;  //20
                sr_cdbvalue(m_merc[i,46])+','+;  //21
                sr_cdbvalue(m_merc[i,55])+','+;  //22
                sr_cdbvalue(m_merc[i,56])+','+;  //23
                sr_cdbvalue(m_merc[i,59])+','+;  //24
                sr_cdbvalue(m_merc[i,60])+','+;  //25
                sr_cdbvalue(m_merc[i,61])+','+;  //26
                sr_cdbvalue(m_merc[i,62])+','+;  //27
                sr_cdbvalue(m_merc[i,63])+','+;  //28
                sr_cdbvalue(m_merc[i,64])+','+;  //29
                sr_cdbvalue(m_merc[i,65])+','+;  //30
                sr_cdbvalue(m_merc[i,66])+','+;  //31
                sr_cdbvalue(m_merc[i,67])+','+;  //32
                sr_cdbvalue(m_merc[i,68])+','+;  //33
                sr_cdbvalue(m_merc[i,69])+','+;  //34
                sr_cdbvalue(m_merc[i,70])+','+;  //35
                sr_cdbvalue(m_merc[i,71])+','+;  //36
                sr_cdbvalue(m_merc[i,72])+','+;  //37
                sr_cdbvalue(m_merc[i,73])+','+;  //38
                sr_cdbvalue(m_merc[i,74])+','+;  //39
                sr_cdbvalue(m_merc[i,76])+','+;  //40
                sr_cdbvalue(m_merc[i,84])+','+;  //41
                sr_cdbvalue(m_merc[i,85])+','+;  //42
                sr_cdbvalue(m_merc[i,86])+','+;  //43
                sr_cdbvalue(m_merc[i,87])+','+;  //44
                sr_cdbvalue(m_merc[i,88])+','+;  //45
                sr_cdbvalue(m_merc[i,89])+','+;  //46
                sr_cdbvalue(m_merc[i,99])+','+;  //47
                sr_cdbvalue(' ')+')',,.f.)
        NEXT
        sr_getconnection():exec('COMMIT',,.f.)
	atencao('A Operacao foi realizada com sucesso...')
        wvw_lclosewindow()
        RETURN NIL
ELSE
	atencao('Ja foi Feito o Fechamento deste MES e ANO: '+mmes+'/'+mano)
ENDIF
wvw_lclosewindow()
RETURN NIL
**************************** F I M ******************************************
*****************************************
* VERIFICA DIGITO VERIFICADOR MODULO 11
*****************************************
FUNCTION dig_11(mnumero)
*******************
LOCAL m_numero:={},m_soma:={},i:=0,msoma,mdigito,mdig,mdivisao

mnumero :=  ALLTRIM(mnumero)
i:=0
FOR i = 1  TO LEN(mnumero)
        AADD(m_numero,VAL(SUBSTR(mnumero,i,1)))
        AADD(m_soma,0)
NEXT
i:=0


IF LEN(m_numero) = 12
        IF LEN(m_numero) >= 12 .AND. m_numero[12] > 0
                m_soma[12] := m_numero[12] * 2
        ENDIF
        IF LEN(m_numero) >= 11 .AND. m_numero[11] > 0
                m_soma[11] := m_numero[11] * 3
        ENDIF
        IF LEN(m_numero) >= 10 .AND. m_numero[10] > 0
                m_soma[10] := m_numero[10] * 4
        ENDIF
        IF LEN(m_numero) >= 9 .AND. m_numero[9] > 0
                m_soma[9] := m_numero[9] * 5
        ENDIF
        IF LEN(m_numero) >= 8 .AND. m_numero[8] > 0
                m_soma[8] := m_numero[8] * 6
        ENDIF
        IF LEN(m_numero) >= 7 .AND. m_numero[7] > 0
                m_soma[7] := m_numero[7] * 7
        ENDIF
        IF LEN(m_numero) >= 6 .AND. m_numero[6] > 0
                m_soma[6] := m_numero[6] * 8
        ENDIF
        IF LEN(m_numero) >= 5 .AND. m_numero[5] > 0
                m_soma[5] := m_numero[5] * 9
        ENDIF
        IF LEN(m_numero) >= 4 .AND. m_numero[4] > 0
                m_soma[4] := m_numero[4] * 2
        ENDIF
        IF LEN(m_numero) >= 3 .AND. m_numero[3] > 0
                m_soma[3] := m_numero[3] * 3
        ENDIF
        IF LEN(m_numero) >= 2 .AND. m_numero[2] > 0
                m_soma[2] := m_numero[2] * 4
        ENDIF
        IF LEN(m_numero) >= 1 .AND. m_numero[1] > 0
                m_soma[1] := m_numero[1] * 5
        ENDIF
ELSEIF LEN(m_numero) = 16
        IF LEN(m_numero) >= 16 .AND. m_numero[16] > 0
                m_soma[16] := m_numero[16] * 2
        ENDIF
        IF LEN(m_numero) >= 15 .AND. m_numero[15] > 0
                m_soma[15] := m_numero[15] * 3
        ENDIF
        IF LEN(m_numero) >= 14 .AND. m_numero[14] > 0
                m_soma[14] := m_numero[14] * 4
        ENDIF
        IF LEN(m_numero) >= 13 .AND. m_numero[13] > 0
                m_soma[13] := m_numero[13] * 5
        ENDIF
        IF LEN(m_numero) >= 12 .AND. m_numero[12] > 0
                m_soma[12] := m_numero[12] * 6
        ENDIF
        IF LEN(m_numero) >= 11 .AND. m_numero[11] > 0
                m_soma[11] := m_numero[11] * 7
        ENDIF
        IF LEN(m_numero) >= 10 .AND. m_numero[10] > 0
                m_soma[10] := m_numero[10] * 8
        ENDIF
        IF LEN(m_numero) >= 9 .AND. m_numero[9] > 0
                m_soma[9] := m_numero[9] * 9
        ENDIF
        IF LEN(m_numero) >= 8 .AND. m_numero[8] > 0
                m_soma[8] := m_numero[8] * 2
        ENDIF
        IF LEN(m_numero) >= 7 .AND. m_numero[7] > 0
                m_soma[7] := m_numero[7] * 3
        ENDIF
        IF LEN(m_numero) >= 6 .AND. m_numero[6] > 0
                m_soma[6] := m_numero[6] * 4
        ENDIF
        IF LEN(m_numero) >= 5 .AND. m_numero[5] > 0
                m_soma[5] := m_numero[5] * 5
        ENDIF
        IF LEN(m_numero) >= 4 .AND. m_numero[4] > 0
                m_soma[4] := m_numero[4] * 6
        ENDIF
        IF LEN(m_numero) >= 3 .AND. m_numero[3] > 0
                m_soma[3] := m_numero[3] * 7
        ENDIF
        IF LEN(m_numero) >= 2 .AND. m_numero[2] > 0
                m_soma[2] := m_numero[2] * 8
        ENDIF
        IF LEN(m_numero) >= 1 .AND. m_numero[1] > 0
                m_soma[1] := m_numero[1] * 9
        ENDIF
ELSEIF LEN(m_numero) = 10
        IF LEN(m_numero) >= 10 .AND. m_numero[10] > 0
                m_soma[10] := m_numero[10] * 2
        ENDIF
        IF LEN(m_numero) >= 9 .AND. m_numero[9] > 0
                m_soma[9] := m_numero[9] * 3 
        ENDIF
        IF LEN(m_numero) >= 8 .AND. m_numero[8] > 0
                m_soma[8] := m_numero[8] * 4
        ENDIF
        IF LEN(m_numero) >= 7 .AND. m_numero[7] > 0
                m_soma[7] := m_numero[7] * 5
        ENDIF
        IF LEN(m_numero) >= 6 .AND. m_numero[6] > 0
                m_soma[6] := m_numero[6] * 6
        ENDIF
        IF LEN(m_numero) >= 5 .AND. m_numero[5] > 0
                m_soma[5] := m_numero[5] * 7
        ENDIF
        IF LEN(m_numero) >= 4 .AND. m_numero[4] > 0
                m_soma[4] := m_numero[4] * 8
        ENDIF
        IF LEN(m_numero) >= 3 .AND. m_numero[3] > 0
                m_soma[3] := m_numero[3] * 9
        ENDIF
        IF LEN(m_numero) >= 2 .AND. m_numero[2] > 0
                m_soma[2] := m_numero[2] * 2
        ENDIF
        IF LEN(m_numero) >= 1 .AND. m_numero[1] > 0
                m_soma[1] := m_numero[1] * 3
        ENDIF
ELSE
	atencao('Nao e possivel calcular o digito verificador deste Numero...')
	RETURN NIL
ENDIF
i := msoma := mdivisao := mresto := mdigito := 0
mdig := ' '
FOR i = 1  TO LEN(m_soma)
        msoma := msoma + m_soma[i]
NEXT
//atencao('soma:'+transform(msoma,'99999.99'))
mdivisao   := msoma / 11
//atencao('divisao:'+transform(mdivisao,'99999.99'))
mresto     := VAL(SUBSTR(TRANSFORM(mdivisao,'99999.99'),7,2))
//atencao('resto 1:'+transform(VAL(SUBSTR(TRANSFORM(mdivisao,'99999.99'),7,2)),'99'))
IF VAL(SUBSTR(TRANSFORM(mresto,'99'),2,1)) > 1
        mresto := VAL(SUBSTR(TRANSFORM(mresto,'99'),1,1)) + 1
ENDIF
IF mresto = 0
        RETURN '0'
ENDIF
//atencao('resto 2:'+TRANSFORM(mresto,'99'))

mdigito := 11 - mresto
mdig := STRZERO(mdigito,1)
RETURN mdig
************************************* F I M ********************************************
* CONSULTA DO RESUMO DO PRODUTO
*******************************
FUNCTION f8_prod(mc_prod,mki)
*****************************
LOCAL c_m:={},OOPP:=' ',m_tab,m_p,vpoint,cons_tb
IF (LASTKEY() = 27 .OR. EMPTY(mcod_merc)) .AND. EMPTY(mc_prod)
        RETURN NIL
ENDIF
IF ! EMPTY(mc_prod) .AND. mki = 1
        mcod_merc := mc_prod
ENDIF
c_m:={}
sr_getconnection():exec("SELECT * FROM sacmerc WHERE cod_merc = "+sr_cdbvalue(mcod_merc),,.t.,@c_m)
IF LEN(c_m) = 0
        atencao('Produto: '+STRZERO(mcod_merc,5)+' nao encontrado...')
        RETURN .F.
ENDIF
WVW_SetMousePos(,00,00)
//SET KEY 289 TO
//op_tela(20,00,31,100,' RESUMO DO PRODUTO: '+STRZERO(mcod_merc,5)+' - '+c_m[1,9],,'*')
op_tela(10,00,35,100,' RESUMO DO PRODUTO: '+STRZERO(mcod_merc,5)+' - '+c_m[1,9],,'*')
mensagem('Tecle <ALT+F> P/Ampliar a Foto - <T>abela Cond.Pagamento - Qualquer tecle para Voltar')
DEVPOS(0,1);DEVOUT('Descricao Nota:')
DEVPOS(1,1);DEVOUT('Grupo.........:      Sub-Grupo:')
DEVPOS(2,1);DEVOUT('Codigo Barra:')
DEVPOS(2,32);DEVOUT('Un:')
DEVPOS(3,1);DEVOUT('Fabricante..:')
DEVPOS(5,1 );DEVOUT('Pr1:')
DEVPOS(5,17);DEVOUT('Pr2:')
DEVPOS(5,33);DEVOUT('Pr3:')
DEVPOS(5,49);DEVOUT('Pr4:')
DEVPOS(5,65);DEVOUT('Pr5:')
DEVPOS(6,1);DEVOUT('Aplicacao:')
setcor(3)
DEVPOS(0,16);DEVOUT(c_m[1,99])
DEVPOS(1,16);DEVOUT(SUBSTR(c_m[1,7],1,3))
DEVPOS(1,32);DEVOUT(SUBSTR(c_m[1,7],4,2))
DEVPOS(2,16);DEVOUT(c_m[1,2])
DEVPOS(2,36);DEVOUT(c_m[1,14])
DEVPOS(3,16);DEVOUT(c_m[1,30]+'-'+c_m[1,31])
DEVPOS(5,05);DEVOUT(TRANSFORM(c_m[1,46],ALLTRIM(m_set[1,98])))
DEVPOS(5,21);DEVOUT(TRANSFORM(c_m[1,47],ALLTRIM(m_set[1,98])))
DEVPOS(5,37);DEVOUT(TRANSFORM(c_m[1,100],ALLTRIM(m_set[1,98])))
DEVPOS(5,53);DEVOUT(TRANSFORM(c_m[1,101],ALLTRIM(m_set[1,98])))
DEVPOS(5,69);DEVOUT(TRANSFORM(c_m[1,102],ALLTRIM(m_set[1,98])))
IF ver_nivel('F8_PROD','VISUALIZAR OS CUSTO NA CONSULTA DE PRODUTO <F8>','1',nivel_acess,'*')
        setcor(1)
        DEVPOS(4,1);DEVOUT('V.M.: ')
        DEVPOS(4,25);DEVOUT('C.M.: ')
        DEVPOS(4,50);DEVOUT('C.R.: ')
        setcor(3)
        DEVPOS(4,07);DEVOUT(TRANSFORM(c_m[1,43],ALLTRIM(m_set[1,98])))
        DEVPOS(4,31);DEVOUT(TRANSFORM(c_m[1,44],ALLTRIM(m_set[1,98])))
        DEVPOS(4,56);DEVOUT(TRANSFORM(c_m[1,45],ALLTRIM(m_set[1,98])))
ENDIF
DEVPOS(6,11);DEVOUT(c_m[1,85])
DEVPOS(7,11);DEVOUT(c_m[1,86])
DEVPOS(8,11);DEVOUT(c_m[1,87])
DEVPOS(9,11);DEVOUT(c_m[1,88])
DEVPOS(10,11);DEVOUT(c_m[1,89])

@ 11,00 TO 11,100
DEVPOS(12,01);DEVOUT('  Tabelas                   Cond.     Valor R$   Vl.Parc.R$        Prazos')
@ 13,00 TO 13,100
setcor(1)
IF ! EMPTY(c_m[1,23])
        setcor(6)
        DEVPOS(0,70);DEVOUT('PROMOCAO')
        setcor(1)
ELSE
        setcor(3)
        DEVPOS(0,70);DEVOUT('          ')
        setcor(1)
ENDIF
WVW_DrawLabel(,00,85,'P'+STRZERO(mcod_merc,5)+'.jpg',,,,, 'terminal',13,4,,,,,)
botao(01,82,09,98)
IF FILE(ALLTRIM(m_indiv[1,3])+'P'+STRZERO(mcod_merc,5)+'.jpg')
        WVW_DrawImage( ,01,82,09,98,ALLTRIM(m_indiv[1,3])+'P'+STRZERO(mcod_merc,5)+'.jpg',.T.,.F.)
ELSEIF FILE(ALLTRIM(m_indiv[1,3])+'P'+STRZERO(mcod_merc,5)+'.bmp')
        WVW_DrawImage( ,01,82,09,98,ALLTRIM(m_indiv[1,3])+'P'+STRZERO(mcod_merc,5)+'.bmp',.T.,.F.)
ENDIF
WVW_SetMouseMove(,.F.)
INKEY(0,255)
INKEY(0,255)
IF LASTKEY() = 289
        smedalbum('P',mcod_merc,c_m[1,9],m_indiv[1,3],m_indiv[1,3]+'\PRODUTO\')
ELSEIF LASTKEY() = 84 .OR. LASTKEY() = 116
        cons_tb := {}
        sr_getconnection():exec("SELECT * FROM sactabpg ORDER BY codigo",,.t.,@cons_tb)
        IF LEN(cons_tb) = 0
                atencao('Nao foi encontrado nenhuma TABELA..')
        ELSE
                m_tab := {}
                m_p  := {}
                vpoint  := i:=0
                FOR i = 1 TO LEN(cons_tb)
                        IF cons_tb[i,5] = 0;LOOP;ENDIF
                        AADD(m_tab,' '+cons_tb[i,3];
                                   +' - '+cons_tb[i,4];
                                   +'  '+SUBSTR(cons_tb[i,6],1,1)+'-'+SUBSTR(cons_tb[i,6],2);
                                   +'  '+TRANSFORM(c_m[1,46] * ((cons_tb[i,5] / 100) +1),ALLTRIM(m_set[1,98]));
                                   +'  '+TRANSFORM((c_m[1,46] * ((cons_tb[i,5] / 100) +1)) / (VAL(SUBSTR(cons_tb[i,6],1,1))+VAL(SUBSTR(cons_tb[i,6],2))),ALLTRIM(m_set[1,98]));
                                   +'  '+ALLTRIM(STR(cons_tb[i,7]))+'-'+ALLTRIM(STR(cons_tb[i,8]))+'-'+ALLTRIM(STR(cons_tb[i,9]))+'-'+ALLTRIM(STR(cons_tb[i,10]))+'-';
                                   +ALLTRIM(STR(cons_tb[i,11]))+'-'+ALLTRIM(STR(cons_tb[i,12]))+'-'+ALLTRIM(STR(cons_tb[i,13]))+'-'+ALLTRIM(STR(cons_tb[i,14]))+'-';
                                   +ALLTRIM(STR(cons_tb[i,15]))+'-'+ALLTRIM(STR(cons_tb[i,16]))+'-'+ALLTRIM(STR(cons_tb[i,17]))+'-'+ALLTRIM(STR(cons_tb[i,18]))+'-';
                                   +ALLTRIM(STR(cons_tb[i,19]))+'-'+ALLTRIM(STR(cons_tb[i,20]))+'-'+ALLTRIM(STR(cons_tb[i,21])))
                        AADD(m_p,cons_tb[i,25])
                NEXT
                vpoint := ACHOICE(14,01,44,99,m_tab,,,vpoint)
        ENDIF
ENDIF
WVW_SetMouseMove(,.F.)
wvw_lclosewindow()
RETURN .T.
*************************** f i m *******************************************
FUNCTION ver_banco(mnum_banco,mret)
**********************
LOCAL mcons_banco

IF EMPTY(mnum_banco)
        RETURN .F.
ENDIF
mcons_banco := {}
sr_getconnection():exec("SELECT * FROM sacbanco WHERE num_banco = "+sr_cdbvalue(mnum_banco),,.t.,@mcons_banco)
IF LEN(mcons_banco) = 0
        atencao('BANCO nao Cadastrado !!!')
        RETURN .F.
ENDIF
IF mret = NIL
        RETURN ALLTRIM(mcons_banco[1,1])
ELSEIF mret = 'N'
        RETURN ALLTRIM(mcons_banco[1,2])
ELSEIF mret = 'L'
        RETURN ALLTRIM(mcons_banco[1,13])
ENDIF
***************************  F I M  **********************************
* ALTERACAO DE MERCADORIA
***************************
FUNCTION alt_prod2(vcd_prod)
****************************
LOCAL li:=08,ci:=10,lb:=23,cb:=89,mp_venda:=0,mtelap,telapro,malt_merc:={},cons_formula :={},mcond_canc:=0

MEMVAR mponto,mcod_merc,mquantd,mvlr_fat,menvelope,m_matriz,;
       m_codigo,ali,m_alt,lci,cci,lba,cba,opcao,mcomissao,cod_operado,;
       mproducao,mcont_item,mtot_ped,mdesconto,msubtotal,mtot_custo,mvarejo,;
       mperc,mcod_cli,mmasc_qtd,c_pedi,m_posi

IF LEN(M_MATRIZ) = 0
        atencao('Nao tem nenhum produto neste PEDIDO para ser alterado....')
        RETURN NIL
ENDIF
op_tela(4,10,29,89,' ALTERACAO DE PRODUTOS ')
SETCOR(3)
DEVPOS(00,01);DEVOUT(' PRODUTO                                      QUANTD.    PR.UNIT.      TOTAL')
@ 01,00 TO 01,100
SETCOR(1)
mensagem('Escolha com as Setas e Tecle <ENTER>p/Alterar ou <ESC>p/Abandonar')
setcor(1)
c_pedi := {}
sr_getconnection():exec("SELECT * FROM sacped_s WHERE sr_deleted = ' ' AND pnum_ped = "+sr_cdbvalue(STRZERO(mnum_ped,6)),,.t.,@c_pedi)
m_alt := {}
m_codigo := {}
m_posi := {}
i := 0
FOR i = 1 TO LEN(c_pedi)
        AADD(m_posi,c_pedi[i,111])
        AADD(m_codigo,c_pedi[i,6])
        IF RTRIM(c_pedi[i,8]) = 'EV'
                AADD(m_alt,c_pedi[i,6]+' '+LEFT(c_pedi[i,7],27)+' '+c_pedi[i,10]+' '+TRANSFORM(c_pedi[i,14],'99999.99')+' '+TRANSFORM(c_pedi[i,17],ALLTRIM('@E '+m_set[1,98]))+' '+TRANSFORM(c_pedi[i,17] * c_pedi[i,14],ALLTRIM('@E '+m_set[1,98])))
        ELSE
                AADD(m_alt,c_pedi[i,6]+' '+LEFT(c_pedi[i,7],38)+' '+TRANSFORM(c_pedi[i,14],'99999.99')+' '+TRANSFORM(c_pedi[i,17],ALLTRIM('@E '+m_set[1,98]))+' '+TRANSFORM(c_pedi[i,17] * c_pedi[i,14],ALLTRIM('@E '+m_set[1,98])))
        ENDIF
NEXT
mponto:=0
IF vcd_prod # NIL
        mponto := ASCAN(m_codigo,vcd_prod)
ENDIF
mponto := ACHOICE(02,01,27,78,m_alt,,,mponto)
wvw_lclosewindow()
IF mponto = 0
        RETURN .T.
ENDIF
IF ! ver_nivel('ALT_PROD2','ALTERACAO DE PRODUTOS NO PEDIDO VENDA','1245',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
op_tela(10,10,17,79,' ALTERACAO DE PRODUTOS ')
CLEAR GETS
DO WHILE .T.
        malt_merc := {}
        sr_getconnection():exec("SELECT * FROM sacmerc WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.t.,@malt_merc)
        IF LEN(malt_merc) = 0
                atencao('Codigo Barra nao cadastrado')
                LOOP
        ENDIF
        mcod_merc := VAL(malt_merc[1,8])
        IF EMPTY(mcod_merc)
		EXIT
        ENDIF
        DEVPOS(00,00);DEVOUT('Produto....:')
        IF RTRIM(c_pedi[mponto,8]) = 'EV'
                DEVPOS(01,00);DEVOUT('No.Envelope:')
        ELSEIF RTRIM(c_pedi[mponto,8]) = 'PL'
                DEVPOS(01,00);DEVOUT('No.Placa...:')
        ENDIF
        DEVPOS(02,00);DEVOUT('Saldo......:')
        DEVPOS(03,00);DEVOUT('Quantidade.:')
        DEVPOS(04,00);DEVOUT('Prc.Tabela :')
        DEVPOS(05,00);DEVOUT('Preco Venda:')
        DEVPOS(06,00);DEVOUT('Observacao.:')
        SETCOR(3)
        IF malt_merc[1,23] > 0
                WVW_DrawBoxGet(,04,14,10)
                DEVPOS(04,14);DEVOUT(TRANSFORM(malt_merc[1,46],'999,999.99'))
        ENDIF
        //setcor(3)
        DEVPOS(00,14);DEVOUT(STRZERO(mcod_merc,5))
        DEVPOS(00,COL()+1);DEVOUT(malt_merc[1,9])
        DEVPOS(02,14);DEVOUTPICT(malt_merc[1,56],ALLTRIM(m_set[1,98]))
        SETCOR(1)
        mvlr_fat = c_pedi[mponto,17]
        //mvlr_fat = m_matriz[mponto,2]
        mp_venda = malt_merc[1,46]
        IF ! EMPTY(malt_merc[1,23])
                mp_venda := mvlr_fat
                @ 00,COL()+1 SAY '(P)'
        ENDIF
        mquantd = c_pedi[mponto,14]
        menvelope := c_pedi[mponto,10]
        setcor(1)
        IF RTRIM(c_pedi[mponto,8]) = 'EV'
                WVW_DrawBoxGet(,01,14,LEN(menvelope))
                @ 01,14 GET menvelope PICT '@!' VALID IF(EMPTY(menvelope),.F.,.T.)
                READ
        ELSEIF RTRIM(c_pedi[mponto,8]) = 'PL'
                WVW_DrawBoxGet(,01,14,LEN(menvelope))
                @ 01,14 GET menvelope PICT '@!' VALID IF(EMPTY(menvelope),.F.,.T.)
                READ
        ENDIF
        IF LASTKEY() = 27;EXIT;ENDIF
        mmasc_qtd := unidade(malt_merc[1,14])
        WVW_DrawBoxGet(,03,14,LEN(mmasc_qtd))
        @ 03,14 GET mquantd PICT mmasc_qtd WHEN men_get(0,2,'Informe a quantidade que deseja, so nao pode ultrapassar o saldo da mercadoria') VALID lim_get()
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        mpacote := mpecas := 0
        IF ! EMPTY(malt_merc[1,19]) .AND. mquantd > 0
                IF VAL(SUBSTR(TRANSFORM(mquantd/malt_merc[1,19],'999,999.99'),9)) > 0
                        mquantd_aux := VAL(SUBSTR(TRANSFORM(mquantd/malt_merc[1,19],'999,999.99'),1,7)) +1
                        mquantd := mquantd_aux * malt_merc[1,19]
                ENDIF
                mpacote := VAL(SUBSTR(TRANSFORM((mquantd/malt_merc[1,19])/malt_merc[1,20],'999,999.99'),1,7))
                mpecas  := VAL(SUBSTR(TRANSFORM((mquantd/malt_merc[1,19])/malt_merc[1,20],'999,999.9'),9))
                setcor(3,'*')
                DEVPOS(lba-6,cci+46);DEVOUTPICT(mquantd,ALLTRIM(mmasc_qtd))
                DEVPOS(lba-3,cci+05);DEVOUTPICT(mpacote,'9,999.99')
                DEVPOS(lba-3,cci+19);DEVOUTPICT(mpecas,'999')
                setcor(1)
        ENDIF
        IF mquantd > malt_merc[1,56] + c_pedi[mponto,14] .AND. m_set[1,107] = 'S' .AND. ali = 'ped_s'
                IF ! aut_sen('Quantidade maior que saldo... Senha de autorizacao:','LIB_SALDO',,,mcod_merc)
                        EXIT
                ENDIF
        ENDIF
        IF mquantd = 0
                /*
                IF ver_serie() = '141414'
                        IF ! aut_sen('Quantidade menor que o Solicitador Anteriormente:','LIB_ALTSLDPED')
                                LOOP
                        ENDIF
                ENDIF
                */
                op_tela(10,10,16,115,'CONDICAO DO CANCELAMENTO DA MERCADORIA',,'*')
                WHILE .T.
                        limpa(00,00,10,100)
                        botao1(01,02,03,28)
                        botao1(01,30,03,56)
                        @ 02,03 PROMPT  ' Desistencia do CLIENTE  '
                        @ 02,31 PROMPT  '     Falta de SALDO      '
                        SET INTEN ON
                        MENU TO mcond_canc
                        IF mcond_canc > 0
                                wvw_lclosewindow()
                                EXIT
                        ENDIF
                ENDDO
                opcao := op_simnao('S','Confirma Exclusao da Mercadoria:')
                IF opcao = 'S'
                        c_ped := {}
                        sr_getconnection():exec("SELECT * FROM sacped_s WHERE sr_deleted = ' ' AND pnum_ped = "+sr_cdbvalue(STRZERO(mnum_ped,6)),,.t.,@c_ped)
                        IF LEN(c_ped) = 1
                                atencao('Nao e possivel Excluir este Produto pois so existe (01) Um produto no pedido !!!!')
                                LOOP
                        ENDIF
                        mquantd = 0
                        aret:={}
                        mensagem('Atualizando o Produto...')
                        sr_getconnection():exec("SELECT * FROM sacmerc WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.t.,@aret)
                        mlinha := aret[1,2]+aret[1,8]+aret[1,9]+aret[1,14]+STRZERO((aret[1,56] + c_pedi[mponto,14])*1000,13)+STRZERO(iat(aret[1,46])*100,14)+aret[1,68]
                        SR_BEGINTRANSACTION()
                                        sr_getconnection():exec("UPDATE sacmerc SET saldo_mer = "+sr_cdbvalue(aret[1,56] + c_pedi[mponto,14])+",chv_cript = "+sr_cdbvalue(criptografia(mlinha,'C'))+" WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.f.)
                                        mensagem('Atualizando o Arquivo de LOG...')
                                        sr_getconnection():exec('INSERT INTO logproduto (data_sis,data,'+;
                                                                                'hora,cod_prod,quantd,saldo_ant,saldo_pos,cod_oper,prog,terminal,'+;
                                                                                'processo,ent_sai,SR_DELETED )'+;
                                                                                ' VALUES ('+;
                                                                                sr_cdbvalue(DATE())+','+; //1
                                                                                sr_cdbvalue(mdata_sis)+','+; //2
                                                                                sr_cdbvalue(TIME())+','+; //3
                                                                                sr_cdbvalue(m_codigo[mponto])+','+; //4
                                                                                sr_cdbvalue(c_pedi[mponto,14])+','+; //5
                                                                                sr_cdbvalue(aret[1,56])+','+; //6
                                                                                sr_cdbvalue(aret[1,56] + c_pedi[mponto,14] )+','+; //7
                                                                                sr_cdbvalue(cod_operado)+','+; //8
                                                                                sr_cdbvalue('SAC23PD1')+','+; //9
                                                                                sr_cdbvalue(LEFT(NETNAME(),15))+','+; //12
                                                                                sr_cdbvalue('EXCLUSAO PD: '+STRZERO(mnum_ped,6))+','+; //11
                                                                                sr_cdbvalue('E')+','+; //11
                                                                                sr_cdbvalue(' ')+')',,.f.)
                                        mensagem('Atualizando o Arquivo de PEDIDO...')
                                        //sr_getconnection():exec("DELETE FROM sacped_s WHERE sr_deleted = ' ' AND SR_RECNO = "+sr_cdbvalue(m_posi[mponto]),,.f.)
                                        IF mcond_canc = 1
                                                sr_getconnection():exec("UPDATE sacped_s SET sr_deleted = 'C' WHERE SR_RECNO = "+sr_cdbvalue(m_posi[mponto]),,.f.)
                                        ELSE
                                                sr_getconnection():exec("UPDATE sacped_s SET sr_deleted = 'S' WHERE SR_RECNO = "+sr_cdbvalue(m_posi[mponto]),,.f.)
                                        ENDIF
                                sr_committransaction()
                        sr_endtransaction()
                        m_codigo[mponto] = '     '
                        m_matriz[mponto,1] := m_matriz[mponto,2] := ;
                        m_matriz[mponto,3] := 0
                        mcont_item --
                        //DEVPOS(lba-2,cci+10);DEVOUT(STRZERO(mcont_item,3))
                        setcor(1)
                        mquantd := 1
                        EXIT
                ELSE
                        mquantd := 1
                        EXIT
                ENDIF
        ENDIF
        IF mvarejo = 2
                IF ! EMPTY(malt_merc[1,47])
                        mp_venda = malt_merc[1,47]
                ELSE
                        mp_venda = iat(malt_merc[1,46]*((malt_merc[1,50]/100)+1),m_set[1,103])
                ENDIF
        ELSEIF mperc > 0
                mp_venda = iat(malt_merc[1,46]*((mperc/100)+1),m_set[1,103])
        ELSEIF ver_descon(mcod_cli,mcod_merc,malt_merc[1,7]) > 0
                mp_venda = iat(malt_merc[1,46] - (malt_merc[1,46]*(ver_descon(mcod_cli,mcod_merc,malt_merc[1,7])/100)),m_set[1,103])
        ELSE
                mp_venda = iat(malt_merc[1,46],m_set[1,103])
        ENDIF
        cons_formula :={}
        sr_getconnection():exec("SELECT * FROM formula WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.t.,@cons_formula)
        IF LEN(cons_formula) > 0
                mvlr_fat := tab_formula(m_codigo[mponto])
        ENDIF
        mensagem('Digite o valor do produto - <ESC>Abandonar')
        WVW_DrawBoxGet(,05,14,LEN(ALLTRIM(m_set[1,98])))
        @ 05,14 GET mvlr_fat PICT ALLTRIM(m_set[1,98]) VALID IF(malt_merc[1,23] > 0 .AND. mvlr_fat < mp_venda,.F.,.T.) WHEN m_set[1,38] <> 'P'
        @ 06,14 GET c_pedi[mponto,58] PICT '@!'
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        // FRIPAL, FRANGO DOURADO ou DISCAPE
        IF mvlr_fat < (malt_merc[1,45] * 1.10) .AND. (ver_serie() = '141597' .OR. ver_serie() = '141390' .OR. ver_serie() = '141336')
                atencao('Cod.Prod...: '+STRZERO(mcod_merc,5)+m_qp+;
                        'Vlr.p/Produto Solic.: '+ALLTRIM(TRANSFORM(mvlr_fat,'999,999,999.99'))+m_qp+;
                        'Valor Minimo R$.....: '+ALLTRIM(TRANSFORM(malt_merc[1,45] * 1.10,'999,999.99')))
                LOOP
        ENDIF
        IF ! EMPTY(m_set[1,154]) .AND. mvlr_fat > m_set[1,154]
                IF ! aut_sen('Valor por Produto Solicitada: '+ALLTRIM(TRANSFORM(mvlr_fat,'999,999,999.99'))+' maior que Permitido pela ADM: '+ALLTRIM(TRANSFORM(m_set[1,154],'999,999.99'))+' ... Senha de autorizacao:','LIB_SALDO',,,mcod_merc)
                        LOOP
                ENDIF
        ENDIF
        IF iat(mp_venda,m_set[1,103]) > mvlr_fat
                IF ((iat(mp_venda,m_set[1,103]) - mvlr_fat)/iat(mp_venda,m_set[1,103]))*100 > m_set[1,33] .AND. EMPTY(malt_merc[1,80])
                        IF ! aut_sen(TRANSFORM(((iat(mp_venda,m_set[1,103]) - mvlr_fat)/iat(mp_venda,m_set[1,103]))*100,'999.99')+'% Desconto nao e permitido.. senha autorizacao:','LIB_DESC',,,mcod_merc)
                                LOOP
                        ENDIF
                ENDIF
                IF (((iat(mp_venda,m_set[1,103]) - mvlr_fat)/iat(mp_venda,m_set[1,103]))*100 > malt_merc[1,80] .AND. ! EMPTY(malt_merc[1,80])) .AND. ! EMPTY(malt_merc[1,80])
                        IF ver_serie() = '141220' .OR. ver_serie() = '141350' .OR. ver_serie() = '141384'
                                atencao(TRANSFORM(((iat(mp_venda,m_set[1,103]) - mvlr_fat)/iat(mp_venda,m_set[1,103]))*100,'999.99')+'% Desconto nao e permitido.. ')
                                mquantd := 1
                                LOOP
                        ENDIF
                        IF ! aut_sen(TRANSFORM(((iat(mp_venda,m_set[1,103]) - mvlr_fat)/iat(mp_venda,m_set[1,103]))*100,'999.99')+'% Desconto nao e permitido.. senha autorizacao:','LIB_DESC',,,mcod_merc)
                                LOOP
                        ENDIF
                ENDIF
        ENDIF
        IF m_set[1,38] = 'C'
                IF mvlr_fat < iat(mp_venda,m_set[1,103])
                       IF mvlr_fat < malt_merc[1,45]
                                IF ! aut_sen('Senha de autorizacao:','LIB_DESC',,,mcod_merc)
                                        LOOP
                                ENDIF
                        ENDIF
                ENDIF
        ELSEIF m_set[1,38] = 'V'
                IF mvlr_fat < iat(mp_venda,m_set[1,103])
                       IF mvlr_fat < iat(mp_venda,m_set[1,103])
                                IF ! aut_sen('Senha de autorizacao:','LIB_DESC',,,mcod_merc)
                                        LOOP
                                ENDIF
                        ENDIF
                ENDIF
        ENDIF
        IF m_set[1,37] = 'S'
                mmontador := VAL(c_pedi[mponto,36])
                mmontador1 := VAL(c_pedi[mponto,38])
/*
                mmontador := m_matriz[mponto,37]
                mmontador1 := m_matriz[mponto,38]
*/
                op_tela(10,25,13,75,' Informe o Montador ')
                DEVPOS(00,00);DEVOUT('Montador 1:')
                DEVPOS(01,00);DEVOUT('Montador 2:')
                WVW_DrawBoxGet(,00,14,3)
                WVW_DrawBoxGet(,01,14,3)
                @ 00,14 GET mmontador PICT '999' VALID ven(mmontador,00,18)
                @ 01,14 GET mmontador1 PICT '999' VALID IF(mmontador1 = mmontador,.F.,ven(mmontador1,01,18)) WHEN ! EMPTY(mmontador)
                READ
                opcao := op_simnao('S','Confirma os Montador:')
                wvw_lclosewindow()
                IF  opcao = 'N'
                        LOOP
                ENDIF
        ENDIF
        IF m_set[1,115] = 'S'
                //mcomissao := m_matriz[mponto,15]
                mcomissao := c_pedi[mponto,53]
                op_tela(10,10,11,65,'Comissao do Produto')
                DEVPOS(00,00);DEVOUT('Digite o percentual de Comissao do Vendedor [%]:')
                WVW_DrawBoxGet(,00,COL()+1,6)
                @ 00,COL()+1 GET mcomissao PICT '999.99' VALID IF(EMPTY(mcomissao),.F.,.T.)
                READ
                wvw_lclosewindow()
                IF LASTKEY() = 27
                        LOOP
                ENDIF
        ENDIF
        mtot_ped = 0
        mtot_ped = mvlr_fat * mquantd
        opcao := op_simnao('S','Confirma Alteracao da Mercadoria:')
        IF opcao = 'S'
                mdesconto := 0
*               IF mvlr_fat < iat(malt_merc[1,46],m_set[1,103])
*                       mdesconto := ((iat(malt_merc[1,46],m_set[1,103])-mvlr_fat)/iat(malt_merc[1,46],m_set[1,103]))*100
                IF mvlr_fat < iat(mp_venda,m_set[1,103])
                        mdesconto := ((iat(mp_venda,m_set[1,103])-mvlr_fat)/iat(mp_venda,m_set[1,103]))*100
                ENDIF
                aret:={}
                sr_getconnection():exec("SELECT * FROM sacmerc WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.t.,@aret)
                mlinha := aret[1,2]+aret[1,8]+aret[1,9]+aret[1,14]+STRZERO((aret[1,56] - (mquantd - c_pedi[mponto,14]))*1000,13)+STRZERO(iat(aret[1,46])*100,14)+aret[1,68]
                SR_BEGINTRANSACTION()
                                sr_getconnection():exec("UPDATE sacmerc SET saldo_mer = "+sr_cdbvalue(aret[1,56] - (mquantd - c_pedi[mponto,14]))+",chv_cript = "+sr_cdbvalue(criptografia(mlinha,'C'))+" WHERE cod_merc = "+sr_cdbvalue(m_codigo[mponto]),,.f.)
                                sr_getconnection():exec('INSERT INTO logproduto (data_sis,data,'+;
                                                             'hora,cod_prod,quantd,saldo_ant,saldo_pos,cod_oper,prog,terminal,'+;
                                                             'processo,ent_sai,SR_DELETED )'+;
                                                             ' VALUES ('+;
                                                             sr_cdbvalue(DATE())+','+; //1
                                                             sr_cdbvalue(mdata_sis)+','+; //2
                                                             sr_cdbvalue(TIME())+','+; //3
                                                             sr_cdbvalue(m_codigo[mponto])+','+; //4
                                                             sr_cdbvalue(IF(mquantd < c_pedi[mponto,14],(mquantd - c_pedi[mponto,14])*-1,mquantd - c_pedi[mponto,14]))+','+; //5
                                                             sr_cdbvalue(aret[1,56])+','+; //6
                                                             sr_cdbvalue(aret[1,56] - (mquantd - c_pedi[mponto,14]))+','+; //7
                                                             sr_cdbvalue(cod_operado)+','+; //8
                                                             sr_cdbvalue('SAC23PD1')+','+; //9
                                                             sr_cdbvalue(LEFT(NETNAME(),15))+','+; //12
                                                             sr_cdbvalue('ALTERACAO PD: '+STRZERO(mnum_ped,6))+','+; //11
                                                             sr_cdbvalue(IF(mquantd < c_pedi[mponto,14],'E','S'))+','+; //12
                                                             sr_cdbvalue(' ')+')',,.f.)
                                cComm  := "UPDATE sacped_s SET pquantd = "+sr_cdbvalue(mquantd)
                                cComm  := ccomm + ",pvlr_fat = "+sr_cdbvalue(mvlr_fat)
                                cComm  := ccomm + ",ppre_dig = "+sr_cdbvalue(mvlr_fat)
                                cComm  := ccomm + ",pdesc = "+sr_cdbvalue(mdesconto)    //cComm  := ccomm + ",pcomissao = "+sr_cdbvalue(mcomissao)
                                cComm  := ccomm + ",penvelope = "+sr_cdbvalue(menvelope)
                                cComm  := ccomm + ",pmontador = "+sr_cdbvalue(mmontador)
                                cComm  := ccomm + ",pmontador1 = "+sr_cdbvalue(mmontador1)
                                cComm  := ccomm + ",ppacote = "+sr_cdbvalue(mpacote)
                                cComm  := ccomm + ",ppecas = "+sr_cdbvalue(mpecas)
                                cComm  := ccomm + ",pobs_prod = "+sr_cdbvalue(c_pedi[mponto,58])
                                cComm  := ccomm + " WHERE SR_RECNO = "+sr_cdbvalue(m_posi[mponto])
                                sr_getconnection():exec(ccomm,,.f.)
                        sr_committransaction()
                sr_endtransaction()
                m_matriz[mponto,1] = mquantd
                m_matriz[mponto,2] = mvlr_fat
                m_matriz[mponto,3] = mdesconto
                m_matriz[mponto,15] = mcomissao
                m_matriz[mponto,24] = menvelope
                m_matriz[mponto,37] = mmontador
                m_matriz[mponto,38] = mmontador1
                m_matriz[mponto,42] = mpacote
                m_matriz[mponto,43] = mpecas
                **********
                //SELE('merc');ORDSETFOCUS(1)
                **********
                mquantd := 1
                EXIT
        ELSE
                mquantd := 1
                EXIT
        ENDIF
ENDDO
malterou := '*'
CLEAR GETS
wvw_lclosewindow()
keyboard CHR(13)
RETURN .T.
********************************** F I M ***************************************
FUNCTION tira_acento(mpalavra)
******************************
mpalavra := STRTRAN(mpalavra,'?','C')
mpalavra := STRTRAN(mpalavra,'?','C')
mpalavra := STRTRAN(mpalavra,'?','A')
mpalavra := STRTRAN(mpalavra,'?','A')
mpalavra := STRTRAN(mpalavra,'?','A')
mpalavra := STRTRAN(mpalavra,'?','A')
mpalavra := STRTRAN(mpalavra,'?','O')
mpalavra := STRTRAN(mpalavra,'?','O')
mpalavra := STRTRAN(mpalavra,'?','O')
mpalavra := STRTRAN(mpalavra,'?','A')
mpalavra := STRTRAN(mpalavra,'?','C')
mpalavra := STRTRAN(mpalavra,'?','C')
RETURN mpalavra
************************************ F I M ************************************
* AREDONDAMENTO DE NUMERO
*************************
FUNCTION iat(mvlr_iat,mind,mqtd_casa)
*************************************
LOCAL mvalor,qtd

IF mqtd_casa # NIL
        IF mind = 'T'
                mvalor := VAL(SUBSTR(STR(mvlr_iat,16,5),1,11+mqtd_casa))
        ELSE
                mvalor := ROUND(mvlr_iat,mqtd_casa)
        ENDIF
        RETURN mvalor
ENDIF
IF LEN(m_set) > 0 .AND. AT('.',m_set[1,97]) > 0
        qtd := LEN(SUBSTR(m_set[1,97],AT('.',m_set[1,97])+1))
ELSE
        qtd := 2
ENDIF
//IF mind = 'T'
IF LEN(m_set) > 0 .AND. m_set[1,103] = 'T'
        mvalor := VAL(SUBSTR(STR(mvlr_iat,16,5),1,11+qtd))
ELSE
        mvalor := ROUND(mvlr_iat,qtd)
ENDIF
RETURN mvalor
*************************** f i m *******************************************
FUNCTION enable_dis(mmod,mdesc,mtipo)
*************************************
LOCAL mcons_enab_dis := {}
sr_getconnection():exec("SELECT * FROM sacmod WHERE modulo = "+sr_cdbvalue(mmod),,.t.,@mcons_enab_dis)
IF LEN(mcons_enab_dis) = 0
        sr_getconnection():exec('INSERT INTO sacmod (tipo,modulo,descricao,e_d,SR_DELETED) VALUES ('+;
                sr_cdbvalue(mtipo)+','+; //1
                sr_cdbvalue(mmod)+','+; //1
                sr_cdbvalue(mdesc)+','+; //2
                sr_cdbvalue('E')+','+; //3
                sr_cdbvalue(' ')+')',,.f.)
        RETURN 'E'
ENDIF
RETURN mcons_enab_dis[1,4]
***************************  F I M  **********************************
FUNCTION ver_e_d()
******************
LOCAL mcons_enab_dis,m_prod,m_pos,point:=0,i:=0
op_tela(02,05,45,115,'Modulos Disponivel',,1)
WHILE .T.
        mcons_enab_dis := {}
        m_prod:={}
        m_pos:={}
        limpa(0,0,50,120)
        mensagem('')
        setcor(1)
        DEVPOS(00,01);DEVOUT('Descricao                                                 Tipo   Modulo  E/D')
        @ 01,00 TO 01,120
        sr_getconnection():exec("SELECT * FROM sacmod ORDER BY tipo,descricao",,.t.,@mcons_enab_dis)
        IF LEN(mcons_enab_dis) = 0
                atencao('Nao existe nenhum MODULO...')
                wvw_lclosewindow()
                RETURN NIL
        ENDIF
        i := 0
        FOR i = 1 TO LEN(mcons_enab_dis)
                AADD(m_prod,' '+mcons_enab_dis[i,3];
                           +' '+mcons_enab_dis[i,1]+'  '+mcons_enab_dis[i,2];
                           +'   '+mcons_enab_dis[i,4])
                AADD(m_pos,mcons_enab_dis[i,5])
        NEXT
        point := ACHOICE(2,0,44,110,m_prod,,,point)
        DO CASE
                CASE LASTKEY()=27
                        wvw_lclosewindow()
                        RETURN NIL
                CASE LASTKEY() = 13
                        op_tela(10,10,15,90,'Modulo')
                        DEVPOS(0,0);DEVOUT('Tipo.....:')
                        DEVPOS(1,0);DEVOUT('Modulo...:')
                        DEVPOS(2,0);DEVOUT('Descricao:')
                        DEVPOS(3,0);DEVOUT('E/D......:')
                        setcor(3)
                        DEVPOS(0,11);DEVOUT(mcons_enab_dis[point,1])
                        DEVPOS(1,11);DEVOUT(mcons_enab_dis[point,2])
                        DEVPOS(2,11);DEVOUT(mcons_enab_dis[point,3])
                        @ 3,11 GET mcons_enab_dis[point,4] PICT '@!' VALID mcons_enab_dis[point,4] $ 'E,D'
                        READ
                        IF op_simnao('S','Confirma a Operacao:') = 'N' .OR. LASTKEY() = 27
                                wvw_lclosewindow()
                                LOOP
                        ENDIF
                       	SR_GETCONNECTION():EXEC("UPDATE sacmod SET e_d = " + sr_cdbvalue(mcons_enab_dis[point,4]) + " where sr_recno = "+ sr_cdbvalue(m_pos[point]),,.f.)
                       	SR_GETCONNECTION():EXEC("COMMIT",,.f.)
                        wvw_lclosewindow()
                        CLEAR GETS
        ENDCASE
ENDDO
RETURN NIL
************************************ F I M ***************************************************
FUNCTION tira_pt(mpalavra)
******************************
mpalavra := STRTRAN(mpalavra,'.','')
mpalavra := STRTRAN(mpalavra,'-','')
mpalavra := STRTRAN(mpalavra,'/','')
mpalavra := STRTRAN(mpalavra,",","")
mpalavra := STRTRAN(mpalavra,"\N","")
mpalavra := STRTRAN(mpalavra,"\n"," ")
mpalavra := STRTRAN(mpalavra,"\r"," ")
RETURN mpalavra
************************************ F I M ***************************************************
#include "hbclass.ch"

function criptografia(mtext,mtipo)
**********************************
local tempGet,test := EnCrypt():New()
IF mtipo = 'C'
        //atencao( "Palavra criptografada: Ola Mundo!!" )
        test:SetTextToEncrypt(mtext)
        test:EnCrypt()
        tempGet := test:GetEncryptedText()
        //atencao( "Ola Mundo!! : criptografado: " + (tempGet := test:GetEncryptedText()))
ELSE
        // atencao( "Descriptografacao do Ola Mundo!! -> " + tempGet)
        test:SetTextToDecrypt(mtext)
        test:Decrypt()
        tempGet := test:GetDecryptedText()
ENDIF
return tempGet

class EnCrypt
private:
data cEncryptedText init ""
data cDecryptedText init ""

data cTextToEncrypt init ""
data cTextToDecrypt init ""

public:
method new() constructor
method EnCrypt()
method Decrypt()

method SetTextToEncrypt( cText ) inline( ::cTextToEncrypt := cText )
method SetTextToDecrypt( cText ) inline( ::cTextToDecrypt := cText )

inline method GetEncryptedText()
        return ::cEncryptedText
endmethod

inline method GetDecryptedText()
        return ::cDecryptedText
endmethod
endclass

method new() class encrypt ; return self

method EnCrypt() class encrypt
local i
local cRet := ""

local nRand1
local nRand2

for i:=1 to len(::cTextToEncrypt)
        nRand1 := HB_RandomInt() % 2
        nRand2 := HB_RandomInt() % 15

           //cRet += Chr(AscPos(::cTextToEncrypt[i]) + nRand2)
        cRet += Chr(Asc(::cTextToEncrypt[i]) + nRand2)

        if nRand1 == 0
                cRet += Chr(97)
                cRet += Chr((48+nRand2))
        else
                cRet += Chr(48)
                cRet += Chr((97+nRand2))
        endif
next
::cEncryptedText := cRet
return nil

method Decrypt() class encrypt
local i
local nAux := 0
local cRet := ""

for i:=1 to len(::cTextToDecrypt)
        nAux := 0
        if Asc(::cTextToDecrypt[i+1]) == 97
                nAux := Asc(::cTextToDecrypt[i+2]) - 48
                cRet += Chr(Asc(::cTextToDecrypt[i]) - nAux)
        endif

        if Asc(::cTextToDecrypt[i+1]) == 48
                nAux := Asc(::cTextToDecrypt[i+2]) - 97
                cRet += Chr(Asc(::cTextToDecrypt[i]) - nAux)
        endif
         i+=2
next

::cDecryptedText := cRet
return nil
*******************************************************
* FUNCAO FORMULA DOS PRODUTOS
*******************************************************
FUNCTION tab_formula(mcod_m)
***************************
LOCAL mprg:='SAC23PD1',;
      lci,cci,lba,cba,tela_sai,tela_ent,mquantd,mvlr_merc,mtotal,;
      lci_ent,cci_ent,lba_ent,cba_ent,point,;
      I,opcao,mmerc,li,ci,lb,cb,i_ent:=0,mtitulo:='TABELA DA FORMULA DO PRODUTO',c_merc:={},c_formula:={}

PRIVATE cons_prod:={},cons_merc:={},m_formula:={},m_pos:={},;
        mtipo_imp,mimp_tipo:=0,marq:=SPACE(35)

IF ! ver_nivel(mprg+'FORMU',mtitulo,'156',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
lci := 00
cci := 15
lba := 02
cba := 60

lci_ent := 04
cci_ent := 00
lba_ent := 28
cba_ent := 79
op_tela(00,05,30,85,mtitulo)
WHILE .T.
        limpa(00,00,30,100)
        //botao(lci,cci,lba,cba)
        botao(lci_ent,cci_ent,lba_ent,cba_ent)
        DEVPOS(lci_ent+1,cci_ent+1);DEVOUT(' Cod.    Descricao                               Quantd    Valor')
        @ lci_ent+2,cci_ent TO lci_ent+2,cba_ent
        setcor(1)
        exibi_prg(mprg)
        i := mquantd := mvlr_merc := mtotal := 0
        mensagem('Digite o Codigo da Mercadoria - <ESC>abandonar')
        DEVPOS(00,01);DEVOUT('Codigo:')
        DEVPOS(02,01);DEVOUT('Valor da Formula:')
        setcor(3)
        DEVPOS(00,09);DEVOUT(mcod_m)
        setcor(1)
        cons_merc :={}
        sr_getconnection():exec("SELECT * FROM sacmerc WHERE cod_merc = "+sr_cdbvalue(mcod_m),,.t.,@cons_merc)
        IF LEN(cons_merc) = 0
                atencao('Nao foi possivel encontrar este produto...')
                LOOP
        ENDIF
        setcor(3)
        DEVPOS(00,15);DEVOUT(cons_merc[1,9])
        setcor(1)
        cons_formula :={}
        sr_getconnection():exec("SELECT * FROM formula WHERE cod_merc = "+sr_cdbvalue(mcod_merc),,.t.,@cons_formula)
        IF LEN(cons_formula) > 0
                m_formula :={}
                m_pos :={}
                i:=0
                FOR i = 1 TO LEN(cons_formula)
                        c_merc :={}
                        sr_getconnection():exec("SELECT * FROM sacmerc WHERE cod_merc = "+sr_cdbvalue(cons_formula[i,2]),,.t.,@c_merc)
                        IF LEN(c_merc) = 0
                                atencao('Nao foi possivel encontrar este produto...')
                                LOOP
                        ENDIF
                        AADD(m_formula,' '+cons_formula[i,2]+' '+c_merc[1,9]+' '+TRANSFORM(cons_formula[i,3],ALLTRIM(m_set[1,99]))+' '+TRANSFORM(c_merc[1,46],'999,999.999'))
                        AADD(m_pos,{cons_formula[i,3],c_merc[1,46]})
                        mtotal := mtotal + (cons_formula[i,3] * c_merc[1,46])
                NEXT
                setcor(3)
                DEVPOS(02,19);DEVOUT(TRANSFORM(mtotal,'999,999.999'))
                setcor(1)
        ELSE
                atencao('Nao existe nenhum produto para fazer esta FORMULA...')
                wvw_lclosewindow()
                RETURN 0
        ENDIF
        WHILE .T.
                setcor(3)
                botao(29,00,30,79)
                setcor(1)
                DEVPOS(29,01);DEVOUT('Cod.   Descricao')
                DEVPOS(29,52);DEVOUT('Qtd.')
                DEVPOS(29,62);DEVOUT('Valor')
                mquantd := mvlr_merc := point:= 0
                mensagem('Digite o Codigo da Mercadoria - <ESC>abandonar')
                point := ACHOICE(lci_ent+3,cci_ent+1,lba_ent-1,cba_ent-1,m_formula,,,point)
                DO CASE
                        CASE LASTKEY()=27
                                wvw_lclosewindow()
                                RETURN mtotal
                        CASE LASTKEY() = 13
                                mquantd := m_pos[point,1]
                                mvlr_merc := m_pos[point,2]

                                @ 30,48 GET mquantd PICT ALLTRIM(m_set[1,99])
                                @ 30,58 GET mvlr_merc PICT '999,999.999'
                                READ
                                IF LASTKEY() = 27;LOOP;ENDIF
                                opcao := op_simnao('S','Confirma a Altercao:')
                                IF opcao = 'N' .OR. LASTKEY() = 27
                                        LOOP
                                ENDIF
                                m_pos[point,1] := mquantd
                                m_pos[point,2] := mvlr_merc
                                m_formula[point] := SUBSTR(m_formula[point],1,48)+TRANSFORM(mquantd,ALLTRIM(m_set[1,99]))+' '+TRANSFORM(mvlr_merc,'999,999.999')
                                i := mtotal := 0
                                FOR i = 1 TO LEN(m_pos)
                                        mtotal := mtotal + (m_pos[i,1] * m_pos[i,2] )
                                NEXT
                                setcor(3)
                                DEVPOS(02,19);DEVOUT(TRANSFORM(mtotal,'999,999.999'))
                                setcor(1)
                ENDCASE
        ENDDO
ENDDO
wvw_lclosewindow()
RETURN NIL
********************************** F I M ******************************************
FUNCTION conf_impressao(marquivo,memail,mtip,imp_default,mnome_tef)
*********************************************************
LOCAL mnome_aux:='',m_arquivo:=''
MEMVAR mnome_arq, mimp_tipo,mtp_impre

MYRUN('MD '+CURDRIVE()+':\'+ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,7],mdefcam_imp)))
IF mnome_tef # NIL .AND. ! EMPTY(m_indiv[1,7])
        MYRUN("DOSPRINTER /SEL'"+ALLTRIM(m_indiv[1,7])+"' /DEL "+ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,5],mdefcam_imp))+'HTI.REL')
ELSEIF imp_default # NIL .AND. ! EMPTY(m_indiv[1,7])
        MYRUN("DOSPRINTER /SEL'"+ALLTRIM(m_indiv[1,7])+"' /DEL "+ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,5],mdefcam_imp))+'HTI.REL')
ELSEIF mimp_tipo = 5 .OR. mtip # NIL
        m_arquivo := gera_num()
        //MYRUN('DOSPRINTER /PDF /DEL '+ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,5],mdefcam_imp))+'HTI.REL')
        MYRUN('DOSPRINTER /PDF '+ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,7],mdefcam_imp))+'HTI.REL')

        //INKEY(.10,20)
        atencao('Presione OK para continuar...')
        //INKEY(0)
        IF frename(ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,7],mdefcam_imp))+'HTI.REL.PDF',ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,5],mdefcam_imp))+m_arquivo+'.PDF') = -1
                ferror()
        ENDIF
        MYRUN('DEL '+ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,7],mdefcam_imp))+'HTI.REL.PDF')
        marquivo := ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,7],mdefcam_imp))+m_arquivo+'.PDF'
        enviar_email(memail,,,,marquivo,,mtip)
ELSEIF mimp_tipo = 1
        //atencao(STRZERO(mtp_impre,4))
        IF mtp_impre = 2 //mtipo_imp = 'M'
                MYRUN('DOSPRINTER /SEL /DEL '+ALLTRIM(m_indiv[1,7])+'HTI.REL')
                //MYRUN('DOSPRINTER '+IF(m_cfg[79]='2','/SEL2','/SEL')+' /DEL '+ALLTRIM(m_indiv[1,5])+'HTI.REL')
                //MYRUN('DOSPRINTER /SEL HP /DEL '+ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,5],mdefcam_imp))+'HTI.REL')
        ELSE
                MYRUN('DOSPRINTER /RAW /DEL '+ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,7],mdefcam_imp))+'HTI.REL')
        ENDIF
ELSEIF mimp_tipo = 2
        MYRUN('DOSPRINTER /SEL2 /DEL '+ALLTRIM(IF(LEN(m_indiv)>0,m_indiv[1,7],mdefcam_imp))+'HTI.REL')
ENDIF
RETURN
***************************  F I M  **********************************
FUNCTION enviar_email(mpara,m_nomepara,m_assunto,mtexto,m_arqenv,m_nomearq,m_bcc,mtip,mexclusivo)
*************************************************************************************************
LOCAL mmens:=SPACE(40),mmens1:=SPACE(40),mmens2:=SPACE(40),mmens3:=SPACE(40),;
      mmens4:=SPACE(40),mmens5:=SPACE(40),mmens6:=SPACE(40),mmens7:=SPACE(40),mmens8:=SPACE(40),;
      mmens9:=SPACE(40),mmens10:=SPACE(40),marq_env:=(60),menv_para:=(60),mnome_para:=(40),msssunto:=(40),;
      mnome_arq:=(40),mnome_aux:=''
MEMVAR mimp_tipo

IF mpara # NIL
        menv_para := mpara
ELSEIF mtip # NIL
        menv_para  := 'suporte@htisistemas.com'
ELSEIF cod_operado = '999'
        menv_para  := 'suporte@htisistemas.com'+SPACE(30)
ELSE
        menv_para  := SPACE(60)
ENDIF

IF m_nomepara = NIL
        mnome_para := SPACE(40)
ELSE
        mnome_para := m_nomepara+SPACE(40-LEN(m_nomepara))
ENDIF

IF m_bcc = NIL
        mbcc := SPACE(20)
ELSE
        mbcc := m_bcc+SPACE(40-LEN(m_bcc))
ENDIF

IF mtexto # NIL
        mmens := SUBSTR(mtexto,1,40)
        IF LEN(mtexto) > 40
                mmens1 := SUBSTR(mtexto,40,40)
        ENDIF
        IF LEN(mtexto) > 80
                mmens2 := SUBSTR(mtexto,80,40)
        ENDIF
        IF LEN(mtexto) > 120
                mmens3 := SUBSTR(mtexto,120,40)
        ENDIF
        IF LEN(mtexto) > 160
                mmens4 := SUBSTR(mtexto,160,40)
        ENDIF
        IF LEN(mtexto) > 200
                mmens5 := SUBSTR(mtexto,200,40)
        ENDIF
        IF LEN(mtexto) > 240
                mmens6 := SUBSTR(mtexto,240,40)
        ENDIF
ENDIF

IF m_arqenv = NIL
        marq_env := SPACE(60)
ELSE
        marq_env  := m_arqenv+SPACE(60-LEN(m_arqenv))
ENDIF

IF m_nomearq = NIL
        mnome_arq := SPACE(40)
ELSE
        mnome_arq := m_nomearq+SPACE(40-LEN(m_nomearq))
ENDIF

IF m_assunto = NIL
        massunto:= SPACE(40)
ELSE
        massunto  := m_assunto+SPACE(40-LEN(m_assunto))
ENDIF

IF mtip # NIL
        mensagem('INICIANDO O ACBR....')
        IF ! EMPTY(m_indiv[1,42])
                IF ! IBR_INIT(ALLTRIM(m_indiv[1,42]))
                        RETURN NIL
                ENDIF
        ELSE
                IBR_INIT(curdrive()+':\ACBRMONITOR\')
        ENDIF
        mensagem('Aguarde estar enviando o EMAIL.....')
        IF SUBSTR(IBR_COMANDO('EMAIL.Novo', ,10),1,2) # 'OK'
                atencao('Email nao foi iniciado...')
                RETURN NIL
        ENDIF
        IBR_COMANDO('EMAIL.AdicionaPara',{ALLTRIM(menv_para),mnome_para},10)
        IBR_COMANDO('EMAIL.AdicionaBCC',{ALLTRIM(mbcc)},10)
        IBR_COMANDO('EMAIL.Assunto',{massunto},10)
        IBR_COMANDO('EMAIL.TextoMensagem',{mtexto},10)
        IBR_COMANDO('EMAIL.ConfirmarLeitura',{.T.},10)
        IBR_COMANDO('EMAIL.AdicionaAnexo',{ALLTRIM(marq_env),mnome_arq},10)
        atencao(IBR_COMANDO('EMAIL.Enviar',,50))
        IBR_DESATIVA()
        RETURN NIL
ENDIF
op_tela(5,10,28,90,'Dados para Envio do EMAIL',,1)
botao(0,0,50,120)
limpa(0,0,50,120)
WHILE .T.
        //WVW_DrawBoxGet(,1,15,60)
        WVW_DrawBoxGet(,3,15,60)
        WVW_DrawBoxGet(,5,15,40)
        WVW_DrawBoxGet(,7,15,40)
        WVW_DrawBoxGet(,8,15,40)
        WVW_DrawBoxGet(,9,15,40)
        WVW_DrawBoxGet(,10,15,40)
        WVW_DrawBoxGet(,11,15,40)
        WVW_DrawBoxGet(,12,15,40)
        WVW_DrawBoxGet(,13,15,40)
        WVW_DrawBoxGet(,14,15,40)
        WVW_DrawBoxGet(,15,15,40)
        WVW_DrawBoxGet(,16,15,40)
        WVW_DrawBoxGet(,17,15,40)
        WVW_DrawBoxGet(,19,15,30)

        DEVPOS(1,0);DEVOUT('Para (Email).:')
        DEVPOS(3,0);DEVOUT('Nome (Email).:')
        DEVPOS(5,0);DEVOUT('Assunto......:')
        DEVPOS(7,0);DEVOUT('Mensagen.....:')
        DEVPOS(17,0);DEVOUT('Arquivo Anexo:')
        DEVPOS(19,0);DEVOUT('Nome do Anexo:')
        setcor(3)
        DEVPOS(17,COL()+1);DEVOUT(marq_env)
        setcor(1)
        @ 1, 15 GET menv_para PICT '@S60' WHEN mtip = NIL .AND. mexclusivo = NIL
        @ 3, 15 GET mnome_para PICT '@S60' WHEN mtip = NIL .AND. mexclusivo = NIL
        @ 5, 15 GET massunto VALID IF(EMPTY(massunto),.F.,.T.)
        @ 7, 15 GET mmens VALID IF(EMPTY(mmens),.F.,.T.)
        @ 8, 15 GET mmens1
        @ 9, 15 GET mmens2
        @ 10,15 GET mmens3
        @ 11,15 GET mmens4
        @ 11,15 GET mmens5
        @ 12,15 GET mmens6
        @ 13,15 GET mmens7
        @ 14,15 GET mmens8
        @ 15,15 GET mmens9
        @ 16,15 GET mmens10
        @ 19,15 GET mnome_arq
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        IF op_simnao('S','Confirma o envio do EMAIL:') # 'S'
                LOOP
        ENDIF
        //mensagem('Preparando o arquivo para envio...')
        /*
        mnome_aux := SUBSTR(ALLTRIM(marq_env),1,AT('.',ALLTRIM(marq_env))-1)
        IF frename(ALLTRIM(marq_env),mnome_aux) = -1
                ferror()
        ENDIF
        //atencao(mnome_aux)
        marq_env := mnome_aux
        //MYRUN('DOSPRINTER /SEL2 '+ALLTRIM(marq_env))
        marq_env := marq_env+'.PDF'
        */
        mensagem('INICIANDO O ACBR....')
        IF ! EMPTY(m_indiv[1,42])
                IF ! IBR_INIT(ALLTRIM(m_indiv[1,42]))
                        LOOP
                ENDIF
        ELSE
                IBR_INIT(curdrive()+':\ACBRMONITOR\')
        ENDIF
        mensagem('Aguarde estar enviando o EMAIL.....')
        IF SUBSTR(IBR_COMANDO('EMAIL.Novo', ,10),1,2) # 'OK'
                atencao('Email nao foi iniciado...')
                LOOP
        ENDIF
        mensagem('Email iniciado....')
        IBR_COMANDO('EMAIL.AdicionaPara',{ALLTRIM(menv_para),mnome_para},10)
        IBR_COMANDO('EMAIL.AdicionaBCC',{ALLTRIM(mbcc)},10)
        IBR_COMANDO('EMAIL.Assunto',{massunto},10)
        IBR_COMANDO('EMAIL.TextoMensagem',{mmens+m_qp+mmens1+m_qp+mmens2+m_qp+mmens3+m_qp+mmens4+m_qp+mmens5+m_qp+mmens6+m_qp+mmens7+m_qp+mmens8+m_qp+mmens9+m_qp+mmens10},10)
        IBR_COMANDO('EMAIL.ConfirmarLeitura',{.T.},10)
        IBR_COMANDO('EMAIL.AdicionaAnexo',{marq_env,mnome_arq},10)
        atencao(IBR_COMANDO('EMAIL.Enviar',,10))
        IBR_DESATIVA()
        EXIT

        mensagem('Aguarde estar enviando o EMAIL.....')
        mtexto := STRTRAN(mmens+mmens1+mmens2+mmens3 +mmens4 +mmens5 +mmens6+mmens7 +mmens8 +mmens9 +mmens10,' ','%20')
        massunto := STRTRAN(massunto,' ','%20')
        mnome_aux := SUBSTR(ALLTRIM(marq_env),1,AT('.',ALLTRIM(marq_env))-1)
        mensagem('Aguarde estar enviando o EMAIL.....')
        IF mtip = NIL
                IF frename(ALLTRIM(marq_env),mnome_aux) = -1
                        ferror()
                ENDIF
                //atencao(mnome_aux)
                marq_env := mnome_aux
                MYRUN('DOSPRINTER /SEL2 '+ALLTRIM(marq_env))
                marq_env := marq_env+'.PDF'
                 //atencao('lssendmail.exe -from='+RTRIM(mlogin)+' -to='+RTRIM(menv_para)+' -subject='+massunto+' -message='+mmensagen+' -attached='+mnome_arq+' -user='+RTRIM(m_set[1,167])+' -password='+RTRIM(m_set[1,168])+' -host='+RTRIM(m_set[1,165])+' -port='+RTRIM(m_set[1,166])+' -ssl="n" -tls="n"')
                IF MYRUN('lssendmail.exe -from='+RTRIM(mlogin)+' -to='+RTRIM(menv_para)+' -subject='+massunto+' -message='+mmensagen+' -attached='+mnome_arq+' -user='+RTRIM(m_set[1,167])+' -password='+RTRIM(m_set[1,168])+' -host='+RTRIM(m_set[1,165])+' -port='+RTRIM(m_set[1,166])+' -ssl="n" -tls="n"')
                //IF MYRUN('lssendmail.exe -from='+RTRIM(mlogin)+' -to='+RTRIM(menv_para)+' -subject='+massunto+' -message='+mmensagen+' -user='+RTRIM(m_set[1,167])+' -password='+RTRIM(m_set[1,168])+' -host='+RTRIM(m_set[1,165])+' -port='+RTRIM(m_set[1,166])+' -ssl="n" -tls="n"')
                        atencao('Foi enviado o EMAIL...')
                ENDIF
        ELSE
                IF MYRUN('lssendmail.exe -from='+RTRIM(mlogin)+' -to="suporte@htisistemas.com" -subject='+massunto+' -message='+mmensagen+' -user="suporte@htisistemas.com" -password="suporte" -host="mail.htisistemas.com" -port="1025" -ssl="n" -tls="n"')
                        atencao('Foi enviado o EMAIL...')
                ENDIF
        ENDIF
        massunto:= SPACE(40)
        mmens:= mmens1:= mmens2:= mmens3:= mmens4:= mmens5:= mmens6:= mmens7:= mmens8:= mmens9:= mmens10:=SPACE(40)
ENDDO
fecha_tela()
RETURN NIL
***************************  F I M  **********************************
FUNCTION email_ped(mno_ped,mc_cli)
**********************************
LOCAL mattached,msubject,mmenssage

mmenssage := 'Segue em anexo o Orcamento No.: '+STRZERO(mno_ped,6)+m_qp+m_qp
mmenssage := mmenssage + 'Atencao: Mensagem automatica gerada pelo sistema, por favor nao responda. Para esclarecer suas d?vidas, por favor entre em contato com nosso departamento tecnico, atraves do telefone: 81 '+mfone_HTI+' ou pelo e-mail: suporte@htisistemas.com'+m_qp+m_qp
mmenssage := mmenssage + 'Att,'+m_qp
mmenssage := mmenssage + memp_resa+m_qp
mmenssage := mmenssage + 'Fone: '+ALLTRIM(m_set[1,136])+m_qp
mmenssage := mmenssage + 'E-mail: '+ALLTRIM(m_set[1,137])+m_qp

mattached := ALLTRIM(m_indiv[1,5])+'PD'+STRZERO(mno_ped,6)+'.pdf'
msubject :=ALLTRIM(IF(! EMPTY(m_set[1,130]),m_set[1,130],m_set[1,129]))+' - Orcamento No.:'+STRZERO(mno_ped,6)+' - Operador: '+cod_operado
mc_cli := ALLTRIM(mc_cli)
IF op_simnao('S','De......: suporte@htisistemas.com'+m_qp+;
                 'Para....: '+mc_cli+m_qp+;
                 'Assunto.: '+msubject+m_qp+;
                 'Anexo...: '+mattached+m_qp+m_qp+;
                 'Mensagem: '+mmenssage+m_qp+m_qp+;
                 'Deseja enviar o Orcamento via email agora:') = 'S'
                /*
                        IF frename(ALLTRIM(m_indiv[1,5])+'HTI.rel.pdf', ALLTRIM(m_indiv[1,5])+'PD'+STRZERO(mno_ped,6)+'.pdf') = -1
                                IF 'S' # op_simnao('S','Nao foi possivel renomear ('+ALLTRIM(m_indiv[1,5])+'HTI.rel.pdf'+') para ('+ALLTRIM(m_indiv[1,5])+'PD'+STRZERO(mno_ped,6)+'.pdf)'+m_qp+'Deseja tentar novamente:')
                                        atencao('Nao foi possivel enviar o email...')
                                        RETURN NIL
                                ENDIF
                        ELSE
                                EXIT
                        ENDIF
                */
        mensagem('Enviando o email para: '+mc_cli+'  Aguarde...')
        formula(,,,1)
        MYRUN('COPY '+ALLTRIM(m_indiv[1,5])+'HTI.rel.pdf'+' '+ALLTRIM(m_indiv[1,5])+'PD'+STRZERO(mno_ped,6)+'.pdf')
        mattached := ALLTRIM(m_indiv[1,5])+'PD'+STRZERO(mno_ped,6)+'.pdf'
        msubject :=STRTRAN(msubject,' ','%20')
        //IF MYRUN('lssendmail.exe -from="suporte@htisistemas.com" -to='+mc_cli+' -subject='+msubject+' -message='+mmenssage+' -attached='+ALLTRIM(mattached)+' -user="suporte@htisistemas.com" -password="suporte" -host="mail.htisistemas.com" -port="1025" -ssl="n" -tls="n"')
        IF MYRUN('lssendmail.exe -from="suporte@htisistemas.com" -to='+mc_cli+' -subject='+msubject+' -messagefile="'+ALLTRIM(m_indiv[1,3])+'HTIemail.html" -messagetype=html -attached='+ALLTRIM(mattached)+' -user="suporte@htisistemas.com" -password="suporte" -host="mail.htisistemas.com" -port="1025" -ssl="n" -tls="n"')
                atencao('Email foi enviado..')
        ENDIF
ENDIF
RETURN NIL
**************************************** F I M ******************************************
*CONSULTA DE CONTRATOS DO CLIENTE
**********************************
FUNCTION incl_contr(m_cli,m_alterar)
************************************
LOCAL cons_contrato,menu_contr := {},point:=0,bandaup,bandadn,vlrant:=0
op_tela(5,10,17,80,' INCLUSAO Contratos do Clientes')
DEVPOS(0 ,00);DEVOUT('Cliente............:')
DEVPOS(1 ,00);DEVOUT('No. Contrato.......:')
DEVPOS(2 ,00);DEVOUT('Ativo [S]im [N]ao..:')
DEVPOS(3 ,00);DEVOUT('Valor Mensal R$....:')
DEVPOS(4 ,00);DEVOUT('Melhor Dia.........:')
DEVPOS(5 ,00);DEVOUT('Endereco do IP.....:')
DEVPOS(6 ,00);DEVOUT('Mascara do IP......:')
DEVPOS(7 ,00);DEVOUT('Endereco do Geteway:')
DEVPOS(8 ,00);DEVOUT('Banda UPLOADS......:')
DEVPOS(9 ,00);DEVOUT('Banda DOWNLOADS....:')
DEVPOS(10,00);DEVOUT('Valor da Instalacao:')
DEVPOS(11,00);DEVOUT('Data Instalacao....:')
DEVPOS(12,00);DEVOUT('Codigo do Vendedor.:')
WHILE .T.
        IF m_alterar = NIL
                NoContrato := SPACE(6)
                Ativo      := 'S'

                VlrInsta   := CodVende   :=  VlrMensal  := 0
                bandaup := bandadn := SPACE(5)
                MDia       := SPACE(2)
                EndIP      := MascIP     := EndGeteway := SPACE(20)
                DtInsta    := CTOD('  /  /  ')
                mensagem('Digite os dados - [ESC] p/Retornar')
                setcor(3)
                DEVPOS(00,21);DEVOUT(m_cli)
                setcor(1)
                ver_cli(VAL(m_cli),00,COL()+1)
                @ 1,21 GET NoContrato VALID IF(EMPTY(NoContrato),.F.,.T.)
                @ 2,21 GET Ativo PICT '@!' VALID ativo $ 'S,N'
                @ 3,21 GET VlrMensal PICT '999,999.99'
                @ 4,21 GET MDia PICT '99' VALID IF(VAL(mdia) > 30 .OR. EMPTY(mdia),.F.,.T.)
                @ 5,21 GET EndIP
                @ 6,21 GET MascIP
                @ 7,21 GET EndGeteway
                @ 8,21 GET bandaup
                @ 9,21 GET bandadn
                @ 10,21 GET VlrInsta PICT '999,999.99'
                @ 11,21 GET DtInsta
                @ 12,21 GET CodVende PICT '999' VALID ven(codvende,10,25)
                READ
                IF LASTKEY() = 27 .OR. op_simnao('S','Confirma a Inclusao do CONTRATO:') = 'N'
                        EXIT
                ENDIF
                sr_getconnection():exec('INSERT INTO contrato ('+;
                        'CODCONT,'+; //1
                        'CODCLI,'+; //2
                        'ATIVO,'+; //3
                        'VLRMENS,'+; //4
                        'DIA_VENC,'+; //5
                        'END_IP,'+; //6
                        'END_MASC,'+; //7
                        'END_GAT,'+; //8
                        'BANDA_UP,'+; //9
                        'BANDA_DN,'+; //10
                        'VLRINST,'+; //11
                        'DATA_INST,'+; //12
                        'VENDEDOR,'+; //13
                        'OPERADOR,'+; //14
                        'DATA_INCL,'+; //15
                        'SR_DELETED )'+;
                        ' VALUES ('+;
                        sr_cdbvalue(NoContrato )+','+;//1
                        sr_cdbvalue(m_cli     )+','+; //2
                        sr_cdbvalue(Ativo      )+','+;//3
                        sr_cdbvalue(VlrMensal  )+','+;//4
                        sr_cdbvalue(MDia       )+','+;//5
                        sr_cdbvalue(EndIP      )+','+;//6
                        sr_cdbvalue(MascIP     )+','+;//7
                        sr_cdbvalue(EndGeteway )+','+; //8
                        sr_cdbvalue(bandaup )+','+; //9
                        sr_cdbvalue(bandadn )+','+; //10
                        sr_cdbvalue(VlrInsta   )+','+; //11
                        IF(! EMPTY(dtinsta),sr_cdbvalue(DtInsta),'NULL')+','+; //12
                        sr_cdbvalue(STRZERO(CodVende,3))+','+; //13
                        sr_cdbvalue(cod_operado)+','+; //14
                        sr_cdbvalue(mdata_sis)+','+; //15
                        sr_cdbvalue(' ')+')',,.f.)
        ELSE
                cons_contr := {}
                sr_getconnection():exec("SELECT * FROM contrato WHERE codcli = "+sr_cdbvalue(m_cli)+' AND codcont = '+sr_cdbvalue(m_alterar),,.t.,@cons_contr)
                IF LEN(cons_contr) = 0
                        atencao('Nao existe este CONTRATO Cliente...')
                        wvw_lclosewindow()
                        RETURN NIL
                ENDIF
                cons_contr[1,15] := VAL(cons_contr[1,15])
                vlrant  := cons_contr[1,4]
                setcor(3)
                DEVPOS(0,21);DEVOUT(m_cli)
                DEVPOS(1,21);DEVOUT(cons_contr[1,1])
                setcor(1)
                ver_cli(VAL(m_cli),00,27)
                @ 2,21 GET cons_contr[1,3] PICT '@!' VALID cons_contr[1,3] $ 'S,N'
                @ 3,21 GET cons_contr[1,4] PICT '999,999.99'
                @ 4,21 GET cons_contr[1,5] PICT '99' VALID IF(VAL(cons_contr[1,5]) > 30,.F.,.T.)
                @ 5,21 GET cons_contr[1,8]
                @ 6,21 GET cons_contr[1,9]
                @ 7,21 GET cons_contr[1,10]
                @ 8,21 GET cons_contr[1,6]
                @ 9,21 GET cons_contr[1,7]
                @ 10,21 GET cons_contr[1,11] PICT '999,999.99'
                @ 11,21 GET cons_contr[1,14]
                @ 12,21 GET cons_contr[1,15] PICT '999' VALID ven(cons_contr[1,15],10,25)
                opcao := mensagem1('Escolha <A>lterar <E>xcluir:','A','A,E',,24)
                IF opcao = 'A'
                        @ 2,21 GET cons_contr[1,3] PICT '@!' VALID cons_contr[1,3] $ 'S,N'
                        @ 3,21 GET cons_contr[1,4] PICT '999,999.99'
                        @ 4,21 GET cons_contr[1,5] PICT '99' VALID IF(VAL(cons_contr[1,5]) > 30,.F.,.T.)
                        @ 5,21 GET cons_contr[1,8]
                        @ 6,21 GET cons_contr[1,9]
                        @ 7,21 GET cons_contr[1,10]
                        @ 8,21 GET cons_contr[1,6]
                        @ 9,21 GET cons_contr[1,7]
                        @ 10,21 GET cons_contr[1,11] PICT '999,999.99'
                        @ 11,21 GET cons_contr[1,14]
                        @ 12,21 GET cons_contr[1,15] PICT '999' VALID ven(cons_contr[1,15],10,25)
                        READ
                        IF LASTKEY() = 27 .OR. op_simnao('S','Confirma a Alteracao do CONTRATO:') = 'N'
                                EXIT
                        ENDIF
                        sr_getconnection():exec('UPDATE contrato SET '+;
                                'ATIVO = '+sr_cdbvalue(cons_contr[1,3])+','+; //3
                                'VLRMENS = '+sr_cdbvalue(cons_contr[1,4])+','+; //4
                                'DIA_VENC = '+sr_cdbvalue(cons_contr[1,5])+','+; //5
                                'END_IP = '+sr_cdbvalue(cons_contr[1,8])+','+; //8
                                'END_MASC = '+sr_cdbvalue(cons_contr[1,9])+','+; //9
                                'END_GAT = '+sr_cdbvalue(cons_contr[1,10])+','+; //10
                                'BANDA_UP = '+sr_cdbvalue(cons_contr[1,6])+','+; //10
                                'BANDA_DN = '+sr_cdbvalue(cons_contr[1,7])+','+; //10
                                'VLRINST = '+sr_cdbvalue(cons_contr[1,11])+','+; //11
                                'DATA_INST = '+IF(! EMPTY(cons_contr[1,14]),sr_cdbvalue(cons_contr[1,14]),'NULL')+','+; //12
                                'VENDEDOR = '+sr_cdbvalue(cons_contr[1,15])+' WHERE codcli = '+sr_cdbvalue(m_cli)+' AND codcont = '+sr_cdbvalue(m_alterar),,.f.)
                        IF cons_contr[1,4] # vlrant
                                sr_getconnection():exec('UPDATE sacdupr SET valor_dup = '+sr_cdbvalue(cons_contr[1,4])+',valor = '+sr_cdbvalue(cons_contr[1,4])+' WHERE num_ped = '+sr_cdbvalue(cons_contr[1,1])+' AND datpag IS NULL',,.f.)
                        ENDIF
                ELSE
                        IF op_simnao('N','Deseja EXCLUIR este Contrato:') = 'S'
                                sr_getconnection():exec('DELETE FROM contrato WHERE codcli = '+sr_cdbvalue(m_cli)+' AND codcont = '+sr_cdbvalue(m_alterar),,.f.)
                                sr_getconnection():exec('DELETE FROM sacdupr WHERE datpag IS NULL AND fornec = '+sr_cdbvalue(m_cli)+" AND tipo = 'ME' AND duplicata LIKE "+sr_cdbvalue(RTRIM(m_alterar)+'%'),,.f.)
                                sr_getconnection():exec('COMMIT',,.f.)
                        ENDIF
                ENDIF

        ENDIF
        sr_getconnection():exec('COMMIT',,.f.)
        EXIT
ENDDO
wvw_lclosewindow()
RETURN NIL
**************************************** F I M ******************************************
*CONSULTA DE CONTRATOS DO CLIENTE
**********************************
FUNCTION contratos(mc_cli)
**************************
LOCAL menu_contr := {},point:=0,nBotao,n_tela:=0
PRIVATE cons_contrato

n_tela := op_tela(10,10,33,80,' Contratos do Clientes')
DEVPOS(00,00);DEVOUT('Contrato Ativo  Vlr.Mens Dia   Endereco do IP       Vlr.Inst. Dt.Inst.')
@ 01,00 TO 01,90
@ 20,00 TO 20,90
WvW_PBSetFont( n_tela, "Courier New", 15, 0,)
nBotao := wvw_pbCreate(n_tela,21,05,22,15,'INCLUIR',NIL,{||incl_contr(mc_cli)})
//WVW_PBEnable( NIL, nBota, .T. )
WHILE .T.
        mensagem('[ENTER] p/ ALTERAR ou EXCLUIR - para INCLUIR no Botao - [ESC] p/Retornar')
        cons_contrato := {}
        menu_contr := {}
        sr_getconnection():exec("SELECT * FROM contrato WHERE codcli = "+sr_cdbvalue(mc_cli),,.t.,@cons_contrato)
        IF LEN(cons_contrato) = 0
                atencao('Nao existe nenhum CONTRATO deste Cliente...')
                incl_contr(mc_cli)
                wvw_lclosewindow()
                WVW_PBDestroy( n_tela,nBotao)
                RETURN NIL
        ENDIF
        i:=0
        FOR i = 1 TO LEN(cons_contrato)
                AADD(menu_contr,' '+cons_contrato[i,1]+'    '+cons_contrato[i,3]+'   '+TRANSFORM(cons_contrato[i,4],'99,999.99')+' '+TRANSFORM(VAL(cons_contrato[i,5]),'999')+'   '+cons_contrato[i,8]+' '+TRANSFORM(cons_contrato[i,11],'99,999.99')+' '+DTOC(cons_contrato[i,14]))
        NEXT
        limpa(2,0,19,70)
        point := ACHOICE(2,0,19,70,menu_contr,,,point)
        DO CASE
                CASE LASTKEY()=27
                        WVW_PBDestroy( n_tela,nBotao)
                        wvw_lclosewindow()
                        RETURN NIL
                CASE LASTKEY() = 13
                        incl_contr(mc_cli,SUBSTR(menu_contr[point],2,6))
        ENDCASE
ENDDO
RETURN NIL
*********************** f i m ************************************
FUNCTION ver_descon(vcli,vcod,vgru)
**********************
LOCAL msele,morde
msele := SELE()
morde := INDEXORD()
IF EMPTY(vcod)
        RETURN .T.
ENDIF
*************
SELE('tabme');ORDSETFOCUS(1)
GO TOP
*************
IF ! tabme->(DBSEEK(STRZERO(vcod,5)+STRZERO(vcli,5)))
        *************
        SELE('tabme');ORDSETFOCUS(3)
        GO TOP
        *************
        IF ! tabme->(DBSEEK(vgru+STRZERO(vcli,5)))
                SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
                RETURN 0
        ENDIF
ENDIF
SELE(msele);IF(morde>0,ORDSETFOCUS(morde),)
RETURN tabme->desconto
******************************** F I M ************************************
* data: 03/12/2013 SENHA DE LIBERACAO DO SISCOM
***********************************************
FUNCTION senha_lib(mtp_senha)
*****************************
LOCAL mdig1,mdig2,mdig3,mdig4,mdig5,mcod_acesso,mdata_aux,mdias_fecha:=0,mchecar :='  /  /  ',mchecar1 :='  /  /  '
mdig1 := SUBSTR(STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),4,2)),2),1,1)
mdig2 := STRZERO(VAL(SUBSTR(DTOC(DATE()),4,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
mdig3 := STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
mdig4 := STRZERO(VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
mdig5 := SUBSTR(STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),4,2)),2),2,1)
//atencao(mdig1+mdig2+mdig3+mdig4+mdig5)
m_set:={}
sr_getconnection():exec("SELECT * FROM sacsetup",,.t.,@m_set)
SET CENTURY ON
IF ! EMPTY(m_set[1,82])
        mdias_fecha := (CTOD(SUBSTR(m_set[1,82],1,2)+'/'+SUBSTR(m_set[1,82],3,2)+'/20'+SUBSTR(m_set[1,82],5,2))) - DATE()
ENDIF
SET CENTURY OFF
setcor(1)

IF (mdias_fecha <= 0 .OR. SUBSTR(m_set[1,82],12,1) = '*') .AND. ! EMPTY(m_set[1,82])
                op_tela(10,10,15,90,'SENHA DE LIBERACAO DO SISTEMA ')
                WHILE .T.
                        mcod_acesso := SPACE(29)
                        setcor(3)
                        DEVPOS(1,1);DEVOUT(' FAVOR ENTRA EM CONTATO COM A  HTI Sistemas - Fone:(81)'+mfone_HTI)
                        DEVPOS(2,1);DEVOUT('    *** PARA SOLICITAR O CODIGO DE LIBERACAO DO SISTEMA ***')
                        setcor(1)
                        DEVPOS(4,1);DEVOUT('Digite o SENHA DE LIBERACAO:')
                        WVW_DrawBoxGet(,4,30,29)
                        @ 4,30 GET mcod_acesso PICT '@!'
                        READ
                        IF LASTKEY() = 27
                                fim(msit_tip,'*')
                                //RETURN NIL
                        ENDIF
                        IF VAL(SUBSTR(mcod_acesso,9)) > 35
                                atencao('CODIGO DE ACESSO NAO CONFERE OS DIAS....')
                                LOOP
                        ELSEIF LEN(ALLTRIM(mcod_acesso)) > 20
                                IF EMPTY(SUBSTR(dcrip(mcod_acesso),1,14))
                                        LOOP
                                ELSEIF dcrip(mcod_acesso) = tira_pontos(mcgc_firm)
                                        mdata_aux := SUBSTR(dcrip(mcod_acesso),15)
                                        mchecar := CTOD(SUBSTR(mdata_aux,1,2)+'/'+SUBSTR(mdata_aux,3,2)+'/'+SUBSTR(mdata_aux,5,2))
                                        mchecar1 := CTOD(SUBSTR(mdata_aux,9,2)+'/'+SUBSTR(mdata_aux,11,2)+'/'+SUBSTR(mdata_aux,7,2))
                                        //atencao(DTOC(mchecar))
                                        IF (mchecar - mchecar1) # VAL(SUBSTR(mdata_aux,13)) .OR. EMPTY(mchecar)
                                                atencao('SENHA DE LIBERACAO Foi digitada errada, verifique tente novamente...')
                                                LOOP
                                        ENDIF
                                ELSE
                                        atencao('ESTE CODIGO NAO E PARA ESTA EMPRESA....')
                                        LOOP
                                ENDIF
                                SR_BEGINTRANSACTION()
                                        //TRY
                                                sr_getconnection():exec("UPDATE sacsetup SET sysdatlm = "+sr_cdbvalue(SUBSTR(mdata_aux,1,12)),,.f.)
                                                sr_getconnection():exec('COMMIT',,.f.)
                                        //CATCH e
                                SR_ENDTRANSACTION()
                                EXIT
        		ELSEIF SUBSTR(mcod_acesso,1,8) = mdig1+mdig2+mdig3+mdig4+mdig5 .AND. LEN(ALLTRIM(mcod_acesso)) >= 10
                                IF VAL(SUBSTR(mcod_acesso,9)) = 0
                                        mdata_aux :=SPACE(11)
                                ELSE
                                        //mdata_sen := DATE() + VAL(SUBSTR(mcod_acesso,7))
                                        mdata_sen := DATE() + VAL(SUBSTR(mcod_acesso,9))
                                        //mdata_aux := SUBSTR(DTOC(mdata_sen),1,2)+SUBSTR(DTOC(mdata_sen),4,2)+SUBSTR(DTOC(mdata_sen),7,2) + SUBSTR(mcod_acesso,1,6)
                                        mdata_aux := SUBSTR(DTOC(mdata_sen),1,2)+SUBSTR(DTOC(mdata_sen),4,2)+SUBSTR(DTOC(mdata_sen),7,2) + SUBSTR(DTOC(DATE()),7,2)+SUBSTR(DTOC(DATE()),1,2)+SUBSTR(DTOC(DATE()),4,2)
                                ENDIF
                                SR_BEGINTRANSACTION()
                                                sr_getconnection():exec("UPDATE sacsetup SET sysdatlm = "+sr_cdbvalue(mdata_aux),,.f.)
                                                sr_getconnection():exec('COMMIT',,.f.)
                                SR_ENDTRANSACTION()
                                EXIT
                        ELSE
                                atencao('CODIGO DE ACESSO NAO CONFERE....')
                                LOOP
                        ENDIF
                ENDDO
                fecha_tela()
ELSEIF (mdias_fecha <= 3 .AND. ! EMPTY(m_set[1,82])) .OR. mtp_senha # NIL  //.AND. ! EMPTY(CTOD(SUBSTR(m_set[1,82],1,2)+'/'+SUBSTR(m_set[1,82],3,2)+'/'+SUBSTR(m_set[1,82],5,2)))
        op_tela(10,10,15,90,'SENHA DE LIBERACAO DO SISTEMA ')
        WHILE .T.
                mcod_acesso := SPACE(29)
                botao(0,0,7,90)
                limpa(0,0,7,90)
                WVW_DrawImage( ,0,3,5,12,ALLTRIM(m_indiv[1,3])+'HTI.JPG',.T.,.F.)
                setcor(3)
                DEVPOS(1,13);DEVOUT(PADC('ESTAR FALTANDO << '+STRZERO(mdias_fecha,2)+' DIAS >> PARA EXPIRAR O SISTEMA',60))
                DEVPOS(2,13);DEVOUT(PADC('ENTRE EM CONTATO COM A HTI Sistemas - Fone:(81)'+mfone_HTI,60))
                setcor(1)
                DEVPOS(4,21);DEVOUT('Digite o SENHA DE LIBERACAO:')
                WVW_DrawBoxGet(,4,50,29)
                @ 4,50 GET mcod_acesso PICT '@!' VALID lim_get() WHEN men_get(0,0,'Digite CODIGO DE ACESSO, DEIXE EM BRANCO ou <ESC> p/PROSSEGUIR')
                READ
                IF LASTKEY() = 27 .OR. EMPTY(mcod_acesso)
                        EXIT
                ENDIF
                //atencao(dcrip(mcod_acesso))
                /*
                mdig1 := SUBSTR(STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),4,2)),2),1,1)
                mdig2 := STRZERO(VAL(SUBSTR(DTOC(DATE()),4,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
                mdig3 := STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
                mdig4 := STRZERO(VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
                mdig5 := SUBSTR(STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),4,2)),2),2,1)
                */
                IF VAL(SUBSTR(mcod_acesso,9)) > 35
                        atencao('CODIGO DE ACESSO NAO CONFERE OS DIAS....')
                        LOOP
                ELSEIF LEN(ALLTRIM(mcod_acesso)) > 20
                        IF EMPTY(SUBSTR(dcrip(mcod_acesso),1,14))
                                LOOP
                        ELSEIF SUBSTR(dcrip(mcod_acesso),1,14) = tira_pontos(mcgc_firm)
                                //atencao(SUBSTR(dcrip(mcod_acesso),15,12))
                                mdata_aux := SUBSTR(dcrip(mcod_acesso),15)
                                mchecar := CTOD(SUBSTR(mdata_aux,1,2)+'/'+SUBSTR(mdata_aux,3,2)+'/'+SUBSTR(mdata_aux,5,2))
                                mchecar1 := CTOD(SUBSTR(mdata_aux,9,2)+'/'+SUBSTR(mdata_aux,11,2)+'/'+SUBSTR(mdata_aux,7,2))
                                //atencao(DTOC(mchecar))
                                IF (mchecar - mchecar1) # VAL(SUBSTR(mdata_aux,13)) .OR. EMPTY(mchecar)
                                        atencao('SENHA DE LIBERACAO Foi digitada errada, verifique tente novamente...')
                                        LOOP
                                ENDIF
                        ELSE
                                atencao('ESTE CODIGO NAO E PARA ESTA EMPRESA....')
                                LOOP
                        ENDIF
                        SR_BEGINTRANSACTION()
                                        sr_getconnection():exec("UPDATE sacsetup SET sysdatlm = "+sr_cdbvalue(SUBSTR(mdata_aux,1,12)),,.f.)
                                        sr_getconnection():exec('COMMIT',,.f.)
                        SR_ENDTRANSACTION()
                        EXIT
                ELSEIF SUBSTR(mcod_acesso,1,8) = mdig1+mdig2+mdig3+mdig4+mdig5 .AND. LEN(ALLTRIM(mcod_acesso)) >= 10
                        IF VAL(SUBSTR(mcod_acesso,9)) = 0 .AND. cod_operado # '999'
                                atencao('Nao tem autorizacao para operacao !!!')
                                LOOP
                        ENDIF
                        IF VAL(SUBSTR(mcod_acesso,9)) = 0
                                mdata_aux :=SPACE(11)
                        ELSE
                                //mdata_sen := DATE() + VAL(SUBSTR(mcod_acesso,7))
                                mdata_sen := DATE() + VAL(SUBSTR(mcod_acesso,9))
                                //mdata_aux := SUBSTR(DTOC(mdata_sen),1,2)+SUBSTR(DTOC(mdata_sen),4,2)+SUBSTR(DTOC(mdata_sen),7,2) + SUBSTR(mcod_acesso,1,6)
                                mdata_aux := SUBSTR(DTOC(mdata_sen),1,2)+SUBSTR(DTOC(mdata_sen),4,2)+SUBSTR(DTOC(mdata_sen),7,2) + SUBSTR(DTOC(DATE()),7,2)+SUBSTR(DTOC(DATE()),1,2)+SUBSTR(DTOC(DATE()),4,2)
                        ENDIF
                        SR_BEGINTRANSACTION()
                                sr_getconnection():exec("UPDATE sacsetup SET sysdatlm = "+sr_cdbvalue(mdata_aux),,.f.)
                                sr_getconnection():exec('COMMIT',,.f.)
                        SR_ENDTRANSACTION()
                        atencao('CODIGO DE ACESSO EFETUADO COM SUCESSO.... BOM TRABALHO')
                        EXIT
                ELSE
                        atencao('CODIGO DE ACESSO NAO CONFERE....')
                        LOOP
                ENDIF
        ENDDO
        fecha_tela()
ENDIF
RETURN NIL
**************************  F I M *******************************************
* FECHA AS CONEXOES COM O DB
****************************
FUNCTION fecha_conexaoDB
************************
IF nCnn = 0
        RETURN NIL
ENDIF
SR_BEGINTRANSACTION()
TRY
        SR_EndConnection(SR_GetActiveConnection(  ))
CATCH e
        SR_ENDTRANSACTION()
END
RETURN NIL
***************************  F I M ***********************************
* CONVERTE DBF para BANCO DE DADOS
**********************************
#include "directry.ch"
#include "sqlrdd.ch"       // SQLRDD Main include

Function arq_ncm()
******************
LOCAL qtd_incl:=0,qtd_atu:=0,cons_ :={}

//RddSetDefault( "DBFCDX" )

SET DELETED ON
op_tela(10,10,15,70,"SICRONIZAR ARQUIVO NCM")
WHILE .T.
        qtd_incl := qtd_atu:=0
        setcor(1)
        DEVPOS(00,01);DEVOUT('Total de registro do Arquivo: ')
        DEVPOS(01,01);DEVOUT('Total de registro ATUALIZADO: ')
        DEVPOS(02,01);DEVOUT('Total de registro INCLUSO   : ')
        DEVPOS(03,01);DEVOUT('Quantidade Registro Restante: ')
        IF 'N' = op_simnao('S','Confirma o processamento')
                EXIT
        ENDIF
        IF ! FILE('ibptax.dbf')
                atencao('O arquivo do IBPT nao se encontrar neste caminho....')
                LOOP
        ENDIF
        IF ! abriarq('ibptax.dbf','ibp',,'*')
                atencao('Nao foi possivel abri este arquivo: IBPTAX.DBF')
                LOOP
        ENDIF
        setcor(3)
        DEVPOS(00,30);DEVOUT(TRANSFORM(LASTREC(),'999,999,999'))
        SELE('ibp');GO TOP
        WHILE ! EOF()
                cons_ :={}
                //sr_getconnection():exec("SELECT * FROM sacncm WHERE codigo = "+sr_cdbvalue(SUBSTR(ALLTRIM(STR(INT(ibp->codigo))),1,8)),,.t.,@cons_)
                sr_getconnection():exec("SELECT * FROM sacncm WHERE codigo = "+sr_cdbvalue(SUBSTR(ALLTRIM(ibp->codigo),1,8)),,.t.,@cons_)
                IF LEN(cons_) = 0
                        sr_getconnection():exec('INSERT INTO sacncm (codigo,'+;
                                'descri,'+;
                                'ex,'+;
                                'tabela,'+;
                                'aliqnac,'+;
                                'aliqimp,'+;
                                'SR_DELETED )'+;
                                ' VALUES ('+;
                                sr_cdbvalue(SUBSTR(ALLTRIM(ibp->codigo),1,8))+','+; //1
                                sr_cdbvalue(SUBSTR(tira_acento(UPPER(ibp->descricao)),1,100))+','+; //2
                                sr_cdbvalue(SUBSTR(ALLTRIM(ibp->ex),1,2))+','+; //3
                                sr_cdbvalue(SUBSTR(ALLTRIM(ibp->tabela),1,2))+','+; //4
                                sr_cdbvalue(VAL(ALLTRIM(ibp->aliqnac)))+','+; //5
                                sr_cdbvalue(VAL(ALLTRIM(ibp->aliqimp)))+','+; //6
                                sr_cdbvalue(' ')+')',,.f.)
                        DEVPOS(02,30);DEVOUT(TRANSFORM(qtd_incl++,'999,999,999'))

                ELSE
                        sr_getconnection():exec("UPDATE sacncm SET descri = "+sr_cdbvalue(SUBSTR(tira_acento(UPPER(ibp->descricao)),1,100));
                                                +',ex = '+sr_cdbvalue(SUBSTR(ALLTRIM(ibp->ex),1,2));
                                                +',tabela = '+sr_cdbvalue(SUBSTR(ALLTRIM(ibp->tabela),1,2));
                                                +',aliqnac = '+sr_cdbvalue(VAL(ALLTRIM(ibp->aliqnac)));
                                                +',aliqimp = '+sr_cdbvalue(VAL(ALLTRIM(ibp->aliqimp)))+' WHERE codigo = '+SUBSTR(ALLTRIM(ibp->codigo),1,8),,.f.)
                        DEVPOS(01,30);DEVOUT(TRANSFORM(qtd_atu++,'999,999,999'))
                ENDIF
                SKIP
                DEVPOS(03,30);DEVOUT(TRANSFORM(LASTREC() - (qtd_atu + qtd_incl),'999,999,999'))
        ENDDO
        sr_getconnection():exec("COMMIT",,.f.)
        atencao('Foi feito a Atualizacao com SUCESSO....')
        EXIT
ENDDO
wvw_lclosewindow()
Return
************************** F I M **********************
FUNCTION ver_ncm(vncm,m_cst)
****************************
LOCAL mvlrncm:= {}
sr_getconnection():exec( "SELECT * FROM sacncm WHERE codigo = "+sr_cdbvalue(vncm),,.t.,@mvlrncm)
IF LEN(mvlrncm) = 0
        RETURN 0
ELSE
        //m_cst := SUBSTR(mvlrncm[1,10],1,1)
        //IF m_cst $ '0345'
                RETURN mvlrncm[1,8]
        //ELSE
        //        RETURN mvlrncm[1,9]
        //ENDIF
ENDIF
RETURN 0
**************************  F I M *******************************************
/*
FUNCTION ver_hd()
   LOCAL nDrive, cDrive, nSerial, cSerial
   SetMode( 25, 80 )
   CLS
   SETPOS( 5, 0 )
   FOR nDrive := 1 TO 26
      cDrive  := CHR( 64 + nDrive ) + ":\"
      nSerial := VolSerial( cDrive )
      IF nSerial # -1
         cSerial := NTOC( nSerial, 16 )
         ? cDrive, STUFF( cSerial, 5, 0, ":" ) + " " + GetVolInfo( cDrive )
      ENDIF
   NEXT
   @ MAXROW(), 0
   WAIT "EOF VolInfo.prg"
RETURN
*/
* FUNCAO ALTERAR TAMANHO DA TELA
********************************
FUNCTION alt_tela()
*******************
IF EMPTY(m_cfg[6])
        m_cfg[6] := 'N'
ELSE
        m_cfg[6] := ''
ENDIF
FCLOSE('saccfg.ini')
MYRUN('REN saccfg.ini saccfg01.ini')
mArq        := fcreate("saccfg.ini" )
sLinhas := '001 C Estacao               ='+m_cfg[1]     +m_qp+ ;
           '002 C Tipo de Terminal      ='+m_cfg[2]     +m_qp+ ;
           '003 C HTI                   = '+m_qp+ ;
           '004 C Caminho Banco Dados   ='+m_cfg[4]    +m_qp+ ;
           '005 C Versao do Sistema     ='+m_cfg[5]    +m_qp+ ;
           '006 C Tipo de Tela          ='+m_cfg[6]    +m_qp+ ;
           '007 C Codigo da Empresa     ='+m_cfg[7]
fwrite( mArq, @sLinhas, len( sLinhas ) )
FCLOSE(mArq)
IF EMPTY(m_cfg[6])
        WVW_SetFont(,'lucida console',12, 11,, PROOF_QUALITY )  // 800X600
ELSE
        WVW_SetFont(,'lucida console',12, 7,FW_BOLD, PROOF_QUALITY )  // 800X600
ENDIF
RETURN
***************************** F I M *********************************************
FUNCTION arq_acesso
*******************
LOCAL mprg:='HTIFUN',marq:='',slinhas:='',mcnpj:='',mdata_sen,mdata_aux,m_cliente:={}
//M+A+D
PRIVATE mcod_cli:=0
IF cod_operado # '999'
        RETURN NIL
ENDIF
op_tela(10,10,14,80,'Caminho do arquivo de Liberacao')
WHILE .T.
        limpa(0,0,50,120)
        mcod_cli:=0
        DEVPOS(00,01);DEVOUT('Cliente....:')
        DEVPOS(01,01);DEVOUT('Email......:')
        DEVPOS(02,01);DEVOUT('Caminho....:')
        DEVPOS(03,01);DEVOUT('Data Limite:')
        @ 00,14 GET mcod_cli PICT '99999' VALID ver_cli(mcod_cli,0,21)
        READ
        IF LASTKEY() = 27
                EXIT
        ENDIF
        m_cliente:={}
        sr_getconnection():exec("SELECT * FROM saccli WHERE cod_cli = "+sr_cdbvalue(mcod_cli),,.t.,@m_cliente)
        IF EMPTY(m_cliente[1,27])
                atencao('Este cliente nao tem EMAIL....')
                LOOP
        ENDIF
        setcor(3)
        DEVPOS(01,14);DEVOUT(m_cliente[1,27])
        setcor(1)
        mdata_sen := DATE() + 35
        mcnpj := ALLTRIM(m_cliente[1,32])
        mcaminho := Curdrive()+ ":\" + rtrim(curdir())+ "\"+mcnpj+'.TXT'+SPACE(20)
        @ 02,14 GET mcaminho PICT '@!'
        @ 03,14 GET mdata_sen
        READ

        mdata_aux := SUBSTR(DTOC(mdata_sen),1,2)+SUBSTR(DTOC(mdata_sen),4,2)+SUBSTR(DTOC(mdata_sen),7,2) + SUBSTR(DTOC(DATE()),7,2)+SUBSTR(DTOC(DATE()),1,2)+SUBSTR(DTOC(DATE()),4,2)+STRZERO(mdata_sen - DATE(),3)
        //atencao(dcrip(crip(mcnpj+mdata_aux)))

        opcao := op_simnao('S','Foi Gerado a SENHA DE LIBERACAO: '+crip(mcnpj+mdata_aux)+m_qp+' Confirma o envio do EMAIL:')
        IF opcao = 'S' .AND.  LASTKEY() # 27
                mArq        := FCREATE(mcaminho)
                sLinhas     := criptografia(mcnpj,'C')+m_qp
                sLinhas     := sLinhas + criptografia(mdata_aux,'C')+m_qp
                FWRITE( mArq, @sLinhas, LEN( sLinhas ) )
                FCLOSE(mArq)

                /*
                msubject :=STRTRAN('ARQUIVO DE LIBERACAO DO SISCOM',' ','%20')

                nHandle := FCreate('mensagem.txt')
                If nHandle == -1
                        atencao("Nao foi possivel criar o arquivo de Estoque")
                        Return(.F.)
                EndIf
                nBytes := FWrite(nHandle,'Segue em anexo o ARQUIVO DE LIBERACAO que devera ser colocado onde estar sendo executado o sistemas (Ex.: na pasta SIAC ou SIACCFG'+m_qp+;
                                m_qp+m_qp+' SUPORTE:'+m_qp+ALLTRIM(m_set[1,130])+m_qp+'Fone:(81) '+ALLTRIM(m_set[1,136])+m_qp+ALLTRIM(m_set[1,137])+m_qp)
                if nBytes = 0
                        atencao("Erro na gravacao do conteudo do arquivo do Tipo ")
                        Return(.F.)
                EndIf
                FClose(nhandle)
                c_arq := 'mensagem.txt'
                //MYRUN('lssendmail.exe -from="suporte@htisistemas.com" -to='+LOWER(ALLTRIM(cons_cli[1,27]))+' -subject='+msubject+'  -messagefile='+c_arq+' -messagetype=txt -attached='+mcaminho+' -user="suporte@htisistemas.com" -password="suporte" -host="mail.htisistemas.com" -port="1025" -ssl="n" -tls="n"')
                MYRUN('lssendmail.exe -from='+ALLTRIM(m_set[1,175])+' -to='+LOWER(ALLTRIM(m_cliente[1,27]))+' -subject='+msubject+'  -messagefile='+c_arq+' -messagetype=txt -attached='+mcaminho+' -user='+ALLTRIM(m_set[1,167])+' -password='+ALLTRIM(m_set[1,168])+' -host='+ALLTRIM(m_set[1,165])+' -port='+ALLTRIM(m_set[1,166])+' -ssl="n" -tls="n"')
                //atencao(slinhas)
                */
                m_email:={}
                sr_getconnection():exec("SELECT * FROM sacemail",,.t.,@m_email)
                IF EMPTY(m_email[1,3])
                        atencao('Nao tem Nenhuma Assinatura cadastrada...')
                ELSE
                        msubject :='ARQUIVO DE LIBERACAO DO '+msit_tip+' - CNPJ: '+ALLTRIM(m_cliente[1,32])
                        mtext := 'DIGITE SENHA DE LIBERACAO: '+crip(mcnpj+mdata_aux)+m_qp+m_qp+'OU'+m_qp+m_qp+'Segue em anexo o ARQUIVO DE LIBERACAO que devera ser colocado onde estar sendo executado o sistemas.'+m_qp+m_qp+m_qp+' SUPORTE: '+m_qp+ALLTRIM(m_set[1,130])+m_qp+'Fone:(81) '+ALLTRIM(m_set[1,136])+m_qp+'Fone:(81) 9585.7789 - Tim'+m_qp+'Fone:(81) 7308.6109 - Claro'+m_qp+ALLTRIM(m_set[1,137])+m_qp
                        enviar_email(LOWER(ALLTRIM(m_cliente[1,27])),ALLTRIM(m_cliente[1,3]),msubject,mtext,mcaminho,'ARQUIVO LIB. HTI SISTEMAS',ALLTRIM(m_email[1,1]),'*',)
                ENDIF
        ENDIF
ENDDO
fecha_tela()
RETURN NIL
***************************** F I M *********************************************
FUNCTION ver_estado(mestado)
****************************
IF mestado = 'RO'
        RETURN '11'    //Rond?nia
ELSEIF mestado = 'AC'
        RETURN '12'    //Acre
ELSEIF mestado = 'AM'
        RETURN '13'    //Amazonas
ELSEIF mestado = 'RR'
        RETURN '14'    //Roraima
ELSEIF mestado = 'PA'
        RETURN '15'    //Par?
ELSEIF mestado = 'AM'
        RETURN '16'    //Amap?
ELSEIF mestado = 'TO'
        RETURN '17'    //Tocantins
ELSEIF mestado = 'MA'
        RETURN '21'    //Maranh?o
ELSEIF mestado = 'PI'
        RETURN '22'    //Piau?
ELSEIF mestado = 'CE'
        RETURN '23'    //Cear?
ELSEIF mestado = 'RN'
        RETURN '24'    //Rio Grande do Norte
ELSEIF mestado = 'PB'
        RETURN '25'    //Para?ba
ELSEIF mestado = 'PE'
        RETURN '26'    //Pernambuco
ELSEIF mestado = 'AL'
        RETURN '27'    //Alagoas
ELSEIF mestado = 'SE'
        RETURN '28'    //Sergipe
ELSEIF mestado = 'BA'
        RETURN '29'    //Bahia
ELSEIF mestado = 'MG'
        RETURN '31'    //Minas Gerais
ELSEIF mestado = 'ES'
        RETURN '32'    //Esp?rito Santo
ELSEIF mestado = 'RJ'
        RETURN '33'    //Rio de Janeiro
ELSEIF mestado = 'SP'
        RETURN '35'    //S?o Paulo
ELSEIF mestado = 'PR'
        RETURN '41'    //Paran?
ELSEIF mestado = 'SC'
        RETURN '42'    //Santa Catarina
ELSEIF mestado = 'RS'
        RETURN '43'    //Rio Grande do Sul
ELSEIF mestado = 'MS'
        RETURN '50'    //Mato Grosso do Sul
ELSEIF mestado = 'MT'
        RETURN '51'    //Mato Grosso
ELSEIF mestado = 'GO'
        RETURN '52'    //Goi?s
ELSEIF mestado = 'DF'
        RETURN '53'    //Distrito Federal
ENDIF
RETURN NIL
***************************** F I M ****************************************
* VER CEST
**********
FUNCTION ver_cest(mcod_ncm)
**************************
LOCAL ver_cest:={}
IF EMPTY(mcod_ncm)
        atencao('Nao foi informado o NCM do proiduto nao e possivel encontrar o CEST desse produto verificar o cadastro do produto...')
        RETURN ''
ENDIF
sr_getconnection():exec("SELECT * FROM sacncm WHERE codigo = "+sr_cdbvalue(mcod_ncm),,.t.,@ver_cest)
//ATENCAO(ALLTRIM(ver_cest[1,10]))
IF LEN(ver_cest) >= 1
        RETURN ALLTRIM(ver_cest[1,10])
ELSE
        RETURN ''
ENDIF
RETURN NIL
***************************** F I M ****************************************
* VER CEST
**********
FUNCTION ver_contrato(mcodcliente)
**************************
sr_getconnection():exec("SELECT * FROM contrato WHERE codcli = "+sr_cdbvalue(mcodcliente),,.t.,@ver_contrato)
RETURN NIL
***************************** F I M ****************************************
* TECLADO PARA DIGITAR NUMEROS PIN-PAD
**************************************
FUNCTION pinpad(msen,mdescricao,mmensag,mop_obs,m_descri,mconf,ncampo,mtitulo)
************************************************
LOCAL mprg:='HTIFUN',nPBpinpad:={},mcont:=0,mlinha:=0,cmacro
PRIVATE mdigitado := '',mnum:=' ',mOK := 0,mvisual := '',msenha,mconfirma:='',mcampo

mcampo := ncampo
msenha := msen
op_tela(02,00,50,90,memp_resa+'-CNPJ:'+mcgc_firm+SPACE(6)+sistema+' - '+mversao+SPACE(6)+'Data: '+DTOC(mdata_sis)+' - '+ver_dia(mdata_sis),,1)
//WVW_DrawImage( ,40,52,45,89,ALLTRIM(m_indiv[1,3])+'rodape.JPG',.F.,.F.)
setcor(4)
limpa(00,00,50,90)
setcor(1)
botao(01,1,7,41)
DrawLabel(01,2,mdescricao,m_color[10],, "Arial Black",30,8)

botao(01,50,3,80)
DrawLabel(01,50,mtitulo,m_color[10],, "Arial Black",30,8)


IF mmensag # NIL
        mensagem(mmensag)
ENDIF

nPBpinpad:={}
i:=0
FOR i = 1 TO 15
        AADD(nPBpinpad,0)
NEXT
SET CURSOR OFF
IF m_descri # NIL .AND. LEN(m_descri) > 0
        IF SUBSTR(m_descri[1],1,1) = '*'
                mlinha := 12
        ELSE
                mlinha := 3
        ENDIF
        i:=0
        FOR i = 1 TO LEN(m_descri)
                IF SUBSTR(m_descri[i],1,1) = '*'
                        cmacro :=SUBSTR(m_descri[i],2)
                        &(cmacro)
                ELSE
                        //setcor(3)
                        DEVPOS(i+mlinha,51);DEVOUT(m_descri[i])
                ENDIF
        NEXT
ENDIF
IF EMPTY(m_cfg[6])
        WVW_PBSetFont( , 'Arial Black',60,18 )
ELSE
        WVW_PBSetFont( , 'Arial Black',45,15 )
ENDIF
nPBpinpad[1] := wvw_pbCreate(NIL, 9, 1,15,13,  ' 1 ',NIL,{||pin_pad('1') })
nPBpinpad[2] := wvw_pbCreate(NIL, 9,15,15,27,  ' 2 ',NIL,{||pin_pad('2') })
nPBpinpad[3] := wvw_pbCreate(NIL, 9,29,15,41,  ' 3 ',NIL,{||pin_pad('3') })
nPBpinpad[4] := wvw_pbCreate(NIL,17,1,23,13,   ' 4 ',NIL,{||pin_pad('4') })
nPBpinpad[5] := wvw_pbCreate(NIL,17,15,23,27, ' 5 ',NIL,{||pin_pad('5') })
nPBpinpad[6] := wvw_pbCreate(NIL,17,29,23,41, ' 6 ',NIL,{||pin_pad('6') })
nPBpinpad[7] := wvw_pbCreate(NIL,25,1,31,13,  ' 7 ',NIL,{||pin_pad('7') })
nPBpinpad[8] := wvw_pbCreate(NIL,25,15,31,27, ' 8 ',NIL,{||pin_pad('8') })
nPBpinpad[9] := wvw_pbCreate(NIL,25,29,31,41, ' 9 ',NIL,{||pin_pad('9') })
nPBpinpad[10]:= wvw_pbCreate(NIL,33,1,39,13,  ' 0 ',NIL,{||pin_pad('0')})
nPBpinpad[11] := wvw_pbCreate(NIL,33,15,39,27,' , ',NIL,{||pin_pad('.') })
nPBpinpad[12] := wvw_pbCreate(NIL,33,29,39,41,' ENTER ',NIL,{||pin_pad('OK') })
nPBpinpad[13]:= wvw_pbCreate(NIL,41,1,47,13,  ' LIMPA ',NIL,{||pin_pad('LIMPA')})
nPBpinpad[14] := wvw_pbCreate(NIL,41,15,47,27,'CANC.',NIL,{||pin_pad('CANCEL') })
nPBpinpad[15] := wvw_pbCreate(NIL,41,29,47,41,' - ',NIL,{||pin_pad('-')})
mcont:=0
mconfirma := mconf
IF mconf # NIL
        mcont:=15
        i:=0
        FOR i = 1 TO mcont
                WVW_PBEnable( NIL, nPBpinpad[i], .F. )
        NEXT
        WVW_PBEnable( NIL, nPBpinpad[1], .T. )
        WVW_PBEnable( NIL, nPBpinpad[2], .T. )
        WVW_PBEnable( NIL, nPBpinpad[12], .T. )
        WVW_PBEnable( NIL, nPBpinpad[13], .T. )
ELSE
        mcont:=15
        i:=0
        FOR i = 1 TO mcont
                WVW_PBEnable( NIL, nPBpinpad[i], .T. )
        NEXT
ENDIF
mok:=0
mnum:=' '
WHILE .T.
        botao(4,2,6,35)
        IF msenha = NIL
                WVW_DrawLabel(,4,3,mdigitado,,,,, 'Arial Black',30,15,,,,,)
        ELSE
                WVW_DrawLabel(,4,3,mvisual,,,,, 'Arial Black',30,15,,,,,)
        ENDIF
        //@ 42,1 GET mnum PICT '@!'       //VALID mnum $ '1234567890,.OLC- QWERTYUIOPASDFGHJKLZXCVBNM'
        mnum := INKEY(110,2500)

        //READ
        IF LASTKEY() = 7 .OR. LASTKEY() = 8
                mdigitado := ' '
                mvisual := ' '
                LOOP
        ENDIF
        //IF ncampo # NIL .AND. LEN(mdigitado) = ncampo
        IF LEN(mdigitado) = ncampo .AND. ncampo # NIL
                i:=0
                FOR i= 1 TO 15
                        WVW_PBDestroy(,nPBpinpad[i])
                NEXT
                SET CURSOR ON
                //fecha_tela()
                RETURN mdigitado
        ENDIF
        IF mok = 1 .OR. LASTKEY() = 13 .OR. mnum = '='
                i:=0
                FOR i= 1 TO 15
                        WVW_PBDestroy(,nPBpinpad[i])
                NEXT
                SET CURSOR ON
                //fecha_tela()
                RETURN mdigitado
        ENDIF
        /*
        IF LEN(mdigitado) = 10
                atencao('Quantidade de Digito acima do permitido...')
                LOOP
        ENDIF
        */
        //atencao(CHR(LASTKEY()))
        mdigitado := mdigitado + CHR(mnum)
        mvisual := mvisual + '#'


        /*
        IF mnum = '1'
                mdigitado := mdigitado + '1'
                mvisual := mvisual + '#'
        ELSEIF mnum = '2'
                mdigitado := mdigitado + '2'
                mvisual := mvisual + '#'
        ELSEIF mnum = '3'
                mdigitado := mdigitado + '3'
                mvisual := mvisual + '#'
        ELSEIF mnum = '4'
                mdigitado := mdigitado + '4'
                mvisual := mvisual + '#'
        ELSEIF mnum = '5'
                mdigitado := mdigitado + '5'
                mvisual := mvisual + '#'
        ELSEIF mnum = '6'
                mdigitado := mdigitado + '6'
                mvisual := mvisual + '#'
        ELSEIF mnum = '7'
                mdigitado := mdigitado + '7'
                mvisual := mvisual + '#'
        ELSEIF mnum = '8'
                mdigitado := mdigitado + '8'
                mvisual := mvisual + '#'
        ELSEIF mnum = '9'
                mdigitado := mdigitado + '9'
                mvisual := mvisual + '#'
        ELSEIF mnum = '0'
                mdigitado := mdigitado + '0'
                mvisual := mvisual + '#'
        ELSEIF mnum = ','
                mdigitado := mdigitado + '.'
                mvisual := mvisual + '#'
        ELSEIF mnum = '-'
                mdigitado := mdigitado + '-'
                mvisual := mvisual + '#'
        ELSEIF mnum = '.'
                mdigitado := mdigitado + '.'
                mvisual := mvisual + '#'
        //ELSEIF mnum = 'l' .OR. mnum = 'L'
        //        mdigitado := ''
        //        mvisual := ''
        ELSEIF mnum = 'o' .OR. mnum = 'O'
                inserir_obs()
        ELSE
                mdigitado := mdigitado + mnum
                mvisual := mvisual + '#'

        //ELSEIF mnum = 'C' .OR. mnum = 'c' .OR. mnum = '999999'
                //wvw_lclosewindow()
        //        SET CURSOR ON
        //        RETURN 'CANCEL'

        ENDIF
        */
        mnum:=' '
        //KEYBOARD CHR(28)
        //CLEAR TYPEAHEAD
        IF LASTKEY() = 27
                SET CURSOR ON
                //fecha_tela()
                RETURN ''
        ENDIF
ENDDO
RETURN .T.
*********************************  F I M *************************************
FUNCTION pin_pad(mnumero)
*************************
IF ! mnumero $ ',.1234567890LIMPAOKCANCELOBSRET-QWERTYUIOPASDFGHJKLZXCVBNM'
        RETURN .F.
ENDIF
IF mnumero = ','
        mnumero := '.'
ENDIF
IF (mnumero = '1' .OR. mnumero = '2') .AND. mconfirma # NIL
        mdigitado := mdigitado + mnumero
        mvisual := mvisual + '#'
        mok:=1
        KEYBOARD CHR(13)
        mnum:=' '
        RETURN .T.
ENDIF
IF mnumero = 'CANCEL'
        mok:=1
        mdigitado := ''
        mvisual := ''
        mnum := '999999'
        KEYBOARD CHR(27)
        RETURN .T.
ELSEIF mnumero # 'OK'
        mdigitado := mdigitado + mnumero
        mvisual := mvisual + '#'
        //atencao(strzero(LEN(mdigitado),5)+' - '+mdigitado)
        IF mcampo # NIL .AND. LEN(mdigitado) = mcampo
                mok:=1
                KEYBOARD CHR(13)
                mnum:=' '
                RETURN mdigitado
        ENDIF
ELSEIF mnumero = 'OK'
        mok:=1
        KEYBOARD CHR(13)
        mnum:=' '
        RETURN .T.
ENDIF
IF mnumero = 'LIMPA'
        mdigitado := ''
        mvisual := ''
ENDIF
botao(4,2,6,35)
IF msenha = NIL
        WVW_DrawLabel(,4,3,mdigitado,,,,, 'Arial Black',30,15,,,,,)
ELSE
        WVW_DrawLabel(,4,3,mvisual,,,,, 'Arial Black',30,15,,,,,)
ENDIF
mnum:=' '
RETURN .T.
*********************************  F I M *************************************
FUNCTION inserir_obs()
***********************
op_tela(10,10,12,50,'Digite a Observacao que deseja')
CLEAR GETS
DEVPOS(1,0);DEVOUT('Observacao:')
@ 1,13 GET mobs PICT '@!'
READ
wvw_lclosewindow()
RETURN NIL
*********************************  F I M *************************************
FUNCTION DrawLabel(linha,coluna,mtexto,mcor_tex,mcor_fundo,mnome_letra,mlargura,maltura)

WVW_DrawLabel(,linha,coluna,mtexto,,,mcor_tex,mcor_fundo,mnome_letra,mlargura,maltura,,FW_BOLD,,,)
RETURN NIL